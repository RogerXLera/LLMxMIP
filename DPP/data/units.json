[{
  "_id": {
    "$oid": "605b1d8d492f8f264095d0e1"
  },
  "id": "100483",
  "name": "Principles of Professional Communication 1",
  "offer": [
    "sp",
    "au"
  ],
  "prerequisites": [],
  "prerequisiteText": "",
  "sfiaSkills": [],
  "category": "proj",
  "description": "The unit provides students with an introductory understanding of a range of communication theories and practices necessary for academic work and professional success.",
  "approachToLearning": "Expectations of Students\n\nStudents are expected to be familiar with and abide by the terms of the Student Code of Conduct and the Student Misconduct Rule. Students should also be familiar with the Work Health and Safety Policy at Western Sydney University.\n \nWorkplace Health and Safety\n\nThe Western Sydney University Work Health and Safety Policy states that it is the responsibility of employees, students, contractors, visitors and others to ensure this policy is carried out and to regard accident prevention and safe working as a collective and individual responsibility.\n \nAwareness and implementation of Workplace Health and Safety procedures is not only an important consideration to ensure the health and welfare of you and your colleagues, but is an integral component of all professional practice. Each unit may have safety inductions particular to that unit’s activities. Students will be required to complete any such inductions and meet requirements necessary to safely participate in that unit’s activities. Material regarding Workplace Health and Safety procedures for that unit will be available on the vUWS site for that unit.\n \nStudents should also be familiar with the Western Sydney University’s Work Health and Safety Policy which can be viewed at http://policies.uws.edu.au/view.current.php?id=00081 \n\nHow to raise concerns\n\nIf you have a concern about this unit, please contact your lecturer or tutor in the first instance. If the matter is not resolved, then you may contact the unit coordinator. If you would prefer to speak to someone else, you are advised to contact the Academic Course Advisor (ACA) or Director of Academic Program (DAP) of the School of Computing, Engineering and Mathematics.\n \nThe University also has a confidential Complaints Resolution Unit (see link below). Staff in that unit can provide you with advice on addressing your concerns within the School and, in some circumstances, they may undertake an investigation. Concerns must be raised with the Complaints Resolution Unit  within a six month timeframe.\n\nGetting Help with Your Studies: Assistance with Academic Literacy\n\nWe take academic literacy very seriously at Western Sydney University. While tutors are happy to help we also expect you to take responsibility for developing your skills, particularly if you are struggling. There are many resources available within the unit and the University to help you. Resources on study skills, essay writing and referencing can be found via the fantastic Library Study Smart program, including face-to-face and online assistance), and on the Communication Academic Literacy site. The University also runs free online and face-to-face workshops. \n\nTo find out more please visit: http://www.hca.westernsydney.edu.au/cal/ \n\nHealth and Wellbeing \n\nIf you feel like you’re not coping during the semester due to stress, illness or other issues please make sure you discuss your concerns with someone. You can talk to your tutor, unit coordinator, course advisor or to a member of the University’s counselling services. The counselling team offers online, telephone and face-to-face appointments. The Communication Academic Literacy site also lists a number of resources for mental health and wellbeing. See http://www.hca.westernsydney.edu.au/cal/. \n\nStudent Workload \n\nThe expected workload in this unit is: 10 hours per week (for all 10 credit point units), including 2.5 hours in class and 6.5 hours in own study time. Lectures add an extra hour of class time for the first 7 weeks. Lectures during weeks 9-14 will be delivered via a series of short (7-12 min) video ‘lecture pods’ that students are expected to watch in their own time before coming to class. \n\nAttendance\n\nAttendance in lectures, tutorials and practicals is an essential part of academic success and engagement in all units in the Bachelor of Communication/Screen Media/Creative Industries and related double degrees. Students need to be aware of the issues and fine details of weekly content and assessment criteria, as they arise week-by-week. Students also informally learn from each other through social interaction and class group activities.\n \nTo ensure you have the best possible chance of success in your units, you are expected to attend 80% of classes – whether online or face-to-face. Please note that where attendance is critical to the completion of assessments, an attendance mark may be given as part of the overall assessment criteria for that assignment.\n \nAttendance records will be taken in all tutorials and practicals and you will be asked to explain if your attendance falls below the required minimum without explanation (for example, doctors’ certificates in the case of illness).",
  "outcome": "At the successful completion of this unit, students will be able to: \n\n",
  "passCriteria": "<ul>\n<li>Submitted all assignments AND</li>\n<li>Achieve an overall mark of at least 50%. </li>\n</ul>\n<p>Final marks and grades are subject to confirmation by the School Assessment Committee which may scale, modify or otherwise amend the marks and grades for the unit, as may be required by University policies.\n</p>\n<p><b>\nSubmission of Assessment Tasks:</b></p>\n<ul>\n<li>Students are required to keep a copy of ALL written work submitted. </li>\n<li>All assignments (including oral presentation slides) must be submitted to Turnitin and will be marked online. </li>\n<li>\n<b>Written portfolio exercises </b>are to be submitted weekly to the vUWS portfolio journal space. </li>\n<li>\n<b>At the end of the semester, </b>they must then be <b>collated into a single document</b> and uploaded to be marked . </li>\n<li>Written portfolio exercises <b>NOT SUBMITTED to the vUWS portfolio journal space will not be marked</b> as part of the compiled portfolio. <b>This is worth 30%</b> of your mark </li>\n<li>\n<b>Online writing style quizzes </b>are to be completed during the weeks indicated in the teaching schedule. These are short quizzes that should not take more than 10 minutes to complete. They will be open from Monday of the week in question and will be closed on Sunday of that week). <b>Quizzes are compulsory and worth 10% of your mark.</b>\n</li>\n</ul>"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d0e2"
  },
  "id": "200022",
  "name": "Mathematical Modelling",
  "offer": [
    "sp"
  ],
  "prerequisites": [
    "200030"
  ],
  "prerequisiteText": "200030 Differential Equations ",
  "sfiaSkills": [],
  "category": "mat",
  "description": "Mathematical Modelling is about solving real world problems. The real world is a complicated place which we often need or want to understand better. One way to do this is to set up a mathematical model which we hope can provide insights, predictions and a greater understanding of a complex system. Selected real-world problems are approximated by mathematical models that are amenable to being written in terms of linear and non-linear equations or differential equations. Once equations are solved emphasis is placed on interpreting solutions, modifying models as required and using models for prediction.",
  "assumedKnowledge": "Matrix algebra and how to find eigenvalues and eigenvectors.",
  "approachToLearning": " <latex> {\\begin{table}[ht]\n\\centering\n\\begin{tabular}{|l|p{14cm}|}\n\\hline\n\\rowcolor{gray!40!white}\n\\textbf{Type}   & \\textbf{Approach}   \\\\\n\\hline\n\\textsf{Lecture}  & This unit will require your full and continuous attention to maintain the highest possible grades. Some weeks you will spend more time on learning activities and assessments and in other weeks the  workload  will  be  somewhat  less.   It  will  be  essential  for  you  to  keep  up  with  the  assigned  core questions so that you are properly prepared for each assessment task.  Please do ask questions during  the  lectures,  this  is  the  most  effective  why  to  ensure  understanding  and  eliminate  miscomprehensions.  \\\\\n\\hline\n\\textsf{Tutorial} & There  is  no  easy  way  to  learn  any  mathematics,  but  an  analogy  with  a  sport  like  tennis  holds:\nit looks easy when you see someone else do it, but doing it one’s self requires hours of practice.\nRead the definitions,  look at examples in the book and in class,  and then try doing it yourself,\nand  keep  trying  until  you  can  do  it  alone.  Talk  with  your  fellow  students  about  the  problems,\nnot  only  because  they  may  help  you,  but  you  may  help  them.   One  of  the  best  ways  to  learn\nsomething is to try to explain it to someone else.  Do tutorial problems, practice and then practice\nsome more.  \\\\\n\\hline\n\\textsf{vUWS} & Complete  lecture  notes  will  be  provided  on  vUWS.  It  is  suggested  that  you  print  or  download\nprior to the lecture so that you can add annotations to them during the lecture. \\\\\n\\hline\n\\end{tabular}\n\\end{table}\n}</latex>",
  "outcome": "Upon successfully completing this unit, students will be able to:\n\n Outcomes\n\n1. Formulate equations (both differential and non-differential) which describe selected common physical situations\n2. Solve such equations analytically, where appropriate\n3. Apply computer packages to solve such equations\n4. Interpret the effects of altering parameters involved in a modelling situation\n5. Identify limitations of mathematical models proposed\n6. Evaluate the effectiveness of a model",
  "passCriteria": "-\tAchievement of at least 50% overall is required to pass this unit. \n"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d0e3"
  },
  "id": "200023",
  "name": "Analysis",
  "sfiaSkills": [],
  "offer": [
    "au"
  ],
  "prerequisites": [
    "200028"
  ],
  "prerequisiteText": "200028 Advanced Calculus ",
  "category": "mat",
  "description": "Analysis provides the theoretical basis of real and complex numbers, including differentiation and integration. Topics include: field axioms and completeness, sequences, series, convergence, compactness, continuity, differentiability, integrability, and related theorems in both the real and complex number systems.",
  "approachToLearning": " &lt;latex&gt; {\\begin{tabular}{| 1|p{15cm}|}\n  \\hline \\textbf{Type} &amp; \\textbf{Approach} \\\\\n\\hline Lecture &amp; Lectures are a one (3) hour class each week where information on each topic will be presented.\nTheory and examples will also be presented. Students are welcomed to ask questions as this often\navoids misunderstanding. Lectures notes will sometimes be available from vUWS and students\nare expected to have read these notes at least once before the lecture. When no lecture notes\nare available, students should refer to appropriate section in the textbook. Students should also\nbring the recommended textbook to the lecture.\n \\\\\n  \\hline\nTutorial &amp;\nThere is a one (1) hour tutorial class each week where students have the opportunity to consolidate their understanding of the previous weeks lecture material. To pass this unit students should attend at least 80\\% of the tutorial sessions. Tutorial problems will be\nset each week and students will need to attempt to solve each of these problems before the\ntutorial class. This may require re-reading lecture notes or textbook, and/or looking at examples\nprovided in lectures and textbook. Students are expected to work individually but discussion\nwith fellow students is encouraged. By completing these tutorial questions you are preparing\nfor class tests and the final examination. In the tutorial class students may seek\nfurther guidance on understanding the theory and/or have solution to problems fully explained.\nThere will only be sufficient time to solve a few tutorial problems during the tutorial class, so\npreparation is essential if tutorials are going to be used effectively. The danger is time could be\nwasted going over problems that students would have been able to solve on their own if they\nhad done the required preparation, leaving no time for more difficult  problems. \\\\ \\hline\nvUWS &amp;\nThe following learning resources will be provided on vUWS for the unit: \\newline\n\\textit{Lecture notes:} Lecture notes with the worked examples omitted will be posted before\neach lecture, so that you don't have to copy down everything during the lectures and can focus\non listening instead. You should print out these notes, bring them to the lecture, and fill in the\nexamples during the lecture. \\newline\n\\textit{Tutorial exercises and worked solutions to these:} A sheet with tutorial questions will be\nposted one week before each tutorial. You should work through these questions before the\ntutorial and in the tutorial raise any problems you may have had. Complete worked solutions for\nall tutorial questions will be posted after each tutorial.\nDoing the tutorial questions and checking your own work against the worked solutions is the\nbest way of preparing for Class Tests and for the Final Exam. \\newline\n\\textit{Worked solutions to Class Tests:} Complete worked solutions for Class Tests will be posted after\neach Class Test. \\newline\n\\textit{Sample Exam:} A sample final exam paper will be posted before Stuvac. The main purpose of this paper is to give you a rough idea of the style of the questions which you should\nexpect in the exam. The selection of sample questions should not be taken as a hint regarding\nthe actual content of the exam. Do not base your exam preparation primarily on this (or any\nother) sample exam paper. Merely being able to reproduce solutions to sample exam questions\nwill not be sufficient to pass the Final Exam.\\\\ \\hline\n\\end{tabular}} &lt;/latex&gt;",
  "outcome": "Analysis provides the theoretical basis of real and complex numbers, including differentiation and integration. Topic include: field axioms and completeness, sequences, series, convergence, compactness, continuity, differentiability, integrability, and related theorems in both the real and complex number systems.\n\n Outcomes\n\n1. Explain the difference between pointwise and uniform convergence\n2. Test for convergence sequences and uniform convergence of series of functions on a given interval\n3. Apply interchange theorems for uniformly convergent sequences and series\n4. Explain the definition of the Riemann integral\n5. Calculate upper and lower sums and integrals of simple functions\n6. Prove and apply theorems concerning classes of integrable functions and integrability of sums and products\n7. Find limits of sequences via the use of Riemann sums\n8. Test for differentiability of a function of a complex variable using the Cauchy-Riemann equations\n9. Explain what is meant by an analytic function\n10. Apply the Cauchy-Riemann equations to harmonic functions\n11. Parametrize a path and then to evaluate some complex integrals directly\n12. Evaluate complex integrals by using results such as the Cauchy integral formulae and residue theorem\n13. Work out Taylor and Laurent series for some of the simpler functions",
  "passCriteria": "<ul>\n<li>Attempt all assessment tasks; and<br>\n</li>\n<li>Score a minimum of 50% of weighted score.<br>\n</li>\n</ul>"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d0e4"
  },
  "id": "200025",
  "name": "Discrete Mathematics",
  "offer": [
    "au"
  ],
  "prerequisites": [],
  "prerequisiteText": "",
  "sfiaSkills": [],
  "category": "mat",
  "description": "This unit introduces set theory, symbolic logic, graph theory and some counting problems.  It provides a solid foundation for further study in mathematics or computing.",
  "assumedKnowledge": "HSC Mathematics or equivalent",
  "approachToLearning": "<p></p>\n<p>There is a 3 hour lecture each week. From Week 2 there is also a tutorial. You must enrol in a tutorial, and the tutorial in which you are enrolled is the one you must attend. The quizzes will be held in the tutorials; you can only sit a quiz in the tutorial in which you are enrolled.</p>\n<p>The best way to learn mathematics is to do it. This is why the tutorial sheets contain many questions, enabling you to practice what is covered in lectures. There are many more questions than you can do in the tutorial. This is deliberate; it gives you extra questions to practice. The answers to the tutorial questions will be posted after the tutorial so that you can check what you have done. Test and exam questions are often inspired by tutorial questions. You should attempt all the tutorial questions before your tutorial. </p>\n<p>Information about the unit will be posted regularly on vUWS. This includes the lecture slides, tutorial questions, the answers to those questions and sample tests. Lectures will be recorded and these recordings will be available on vUWS.<br></p>",
  "outcome": " Outcomes\n\n1. Decide the truth of logical statements involving connectives, and simplify logical expressions using the laws of logic and truth tables\n2. Give simple proofs by induction and contradiction\n3. Define and recognise primes, factorise small integers, use the Euclidean algorithm, and do calculations with modular arithmetic\n4. Perform simple operations on sets, find Cartesian products of sets, and use Venn diagrams to illustrate relationships between sets\n5. Solve basic problems in counting and probability\n6. Recognize a function, decide whether a given function is one-to-one or onto, and perform elementary manipulations with functions\n7. Describe simple and directed graphs, use concepts such as \"path\", and find minimal spanning trees",
  "passCriteria": "<ul>\n<li>sit the final exam and </li>\n<li>obtain an total mark of 50 or more for the unit.<br>\n</li>\n</ul>"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d0e5"
  },
  "id": "200027",
  "name": "Linear Algebra",
  "offer": [
    "au"
  ],
  "prerequisites": [],
  "prerequisiteText": "",
  "sfiaSkills": [],
  "category": "mat",
  "description": "The objective of this unit is to present the main fundamentals of linear algebra and includes such topics as solving systems of linear equations, matrix algebra, determinants, eigenvalues and eigenvectors, Euclidean vector spaces, general vector spaces, inner product spaces and linear transformations.",
  "assumedKnowledge": "Solving systems of equations with 2 and three unknowns, basic matrix operations, including multiplication.",
  "approachToLearning": "<p>This unit will require your full and continuous attention to achieve the highest possible grades. Some weeks you will spend more time on learning activities and assessments and in other weeks the workload will be somewhat less. It will be essential for you to keep up with the assigned core questions so that you are properly prepared for each assessment task. There is no easy way to learn any mathematics, but an analogy with a sport like tennis holds: it looks easy when you see someone else do it, but doing it ones self requires hours of practice. Read the definitions, look at examples in the book and in class, and then try doing exercises yourself, and keep trying until you can do them alone.\nTalk with your fellow students about the problems, not only because they may help you, but also you may help them. One of the best ways to learn something is to try to explain it to someone else. Do the tutorial problems, practise and then practise some more.\nAttendance is considered to be essential for successful completion of this unit. Students are expected to attend all lectures. The past statistics show that students who do not attend the lectures regularly account for a large proportion of those failing the unit. Students who miss lectures will need to read the appropriate sections in the textbook and/or obtain a copy of notes from a fellow student. Problem solving exercises at tutorials are compulsory and are an assessment component for the unit. Students who miss a tutorial due to misadventure (e.g., illness) must apply for special consideration in accordance with Western Sydney University policies within two (2) working days.</p>\n<p><u>Lecture:</u> Lectures are a three (3) hour class each week where information on each topic will be presented. Theory and examples will also be presented. Students are encouraged to ask questions as this often avoids misunderstanding. Lecture notes will be available from vUWS and students are expected to have read these notes at least once before the lecture. Students should also bring the recommended textbook to the lecture.</p>\n<p><u>Tutorial:</u> There is a one (1) hour tutorial class each week where students have the opportunity to consolidate their understanding of the previous or current week's lecture material. Tutorial problems will be set each week and students will need to attempt to solve each of these problems before the tutorial class. This may require re-reading lecture notes or textbook, and/or looking at examples provided in lectures and textbook. Students are expected to work individually but discussion with fellow students is encouraged. By completing these tutorial problems you are preparing for class tests and the final examination. In the tutorial class students may seek further guidance on understanding the theory and/or have solution to problems fully explained. There will only be sufficient time to solve a few tutorial problems during the tutorial class, so preparation is essential if tutorials are going to be used effectively.</p>",
  "outcome": " Outcomes\n\n1. Implement Gaussian elimination to solve systems of linear equations.\n2. Use and apply vector operations such as the dot product, and concepts such as orthogonality, span, and linear dependence of vectors.\n3. Use matrix operations, including matrix multiplication, matrix inversion and LU factorisation.\n4. Use and apply concepts related to vector spaces, subspaces and the connection between dimension, linear independence, spanning sets, and basis.\n5. Use and apply concepts related to basic linear transformations of the plane, general linear transformations, and the basic notion of kernel.\n6. Evaluate determinants using a range of techniques.\n7. Be able to compute the eigenvalues and eigenvectors of a linear transformation.\n8. Use the concept of orthogonality and orthogonal matrices, including orthogonal projections and the Gram-Schmidt process.",
  "passCriteria": "<ul><li>submit all assessment items<br></li><li>achieve at least 50% overall</li></ul>"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d0e6"
  },
  "id": "200028",
  "name": "Advanced Calculus",
  "offer": [
    "au"
  ],
  "prerequisites": [
    "300673"
  ],
  "prerequisiteText": "300673 Mathematics 1B ",
  "sfiaSkills": [],
  "category": "mat",
  "description": "This unit is designed for students undertaking studies in mathematics, statistics, operations research and mathematical finance. It provides further mathematical training in the areas of multivariable and vector calculus, which is essential to the understanding of many areas of both pure and applied mathematics.",
  "approachToLearning": "This unit will require your full and continuous attention to maintain the highest possible grades. Some weeks you will spend more time on learning activities and assessments and in other weeks the workload will be somewhat less. It will be essential for you to keep up with the tutorial questions so that you are properly prepared for each assessment task. There is no easy way to learn any mathematics, but an analogy with a sport like tennis holds: it looks easy when you see someone else do it, but doing it yourself requires hours of practice. Read the definitions, look at examples in the book and in class, and then try doing problems yourself, and keep trying until you can do them alone. Talk with your fellow students about the problems. Not only because they may help you, but you may help them. One of the best ways to learn something is to try to explain it to someone else. Do tutorial problems, practise and then practise some more.",
  "outcome": " Outcomes\n\n1. Tackle and solve calculus problems in the multi-variable context\n2. Apply multi-variable calculus to practical situations\n3. Perform vector operations and apply to solving geometric problems\n4. Recognise continuous multi-variable functions\n5. Calculate limits of multi-variable functions\n6. Compute directional derivatives, partial derivatives, and gradients\n7. Find and classify critical points of differentiable multi-variable real valued functions\n8. Perform multi-variable integration and apply various techniques such as change of variables\n9. Apply integration to calculating arc lengths, surface areas, and volumes\n10. Recognise vector fields such as conservative vector fields\n11. Apply Fundamental Theorem and Green's Theorem to calculating line integrals and/or double integrals",
  "passCriteria": "<ul><li>achieve at least 50% overall.<br></li></ul>"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d0e7"
  },
  "id": "200030",
  "name": "Differential Equations",
  "sfiaSkills": [],
  "offer": [
    "sp"
  ],
  "prerequisites": [],
  "prerequisiteText": "",
  "category": "mat",
  "description": "Differential equations arise naturally both in abstract mathematics and in the study of many phenomena. This unit provides the theory of ordinary differential equations and an introduction to partial differential equations together with methods of solution. Examples are drawn from a wide range of biological, chemical, physical and economic applications.",
  "assumedKnowledge": "Algebra - competency in manipulation of algebraic terms including powers, sigma notation Elementary functions - polynomial, power, exponential, logarithmic, circular and hyperbolic, inverse functions Differentiation - derivatives of standard functions, product/quotient/composite function rules Integration - integrals of standard functions, change of variable, integration by parts.",
  "approachToLearning": "In order to do well in the unit 200030 Differential Equations you should be familiar with the concepts and techniques from 300672 Mathematics 1A and 300673 Mathematics 1B. You will have a high risk of failing this unit if you have not previously passed 300673 Mathematics 1B. Advanced techniques of integration from Mathematics 1B are used from lecture 1 onwards, throughout the entire semester. If you have not passed 300673 Mathematics 1B you should seriously consider your enrolment in this unit. Approximately 90% of students without the appropriate background fail this unit. Contact the unit coordinator if you require further information.\n\nLectures are designed to provide you with the basic theoretical concepts in differential equations and related topics. They also address various applications and many worked examples. There are three hours of lectures each week. Tutorials will help students to reinforce the concepts and techniques which are introduced in the lectures. There is a one hour tutorial each week.\n\nLectures\nSkeleton lecture notes are placed on vUWS for students to print and bring to lecture classes. The essential theoretical ideas and illustrative examples are discussed in great detail. Students will have an opportunity to complete the skeleton notes during class. If you miss a lecture class, for any reason, you should refer to the text to help you complete the skeleton notes by yourself. Under no circumstances should you ask for a complete set of notes. It is strongly recommended that you attend all scheduled lectures to support your learning. In previous semesters, students with a poor attendance record often found themselves at risk of not passing the assessment tasks.\n\nTutorials\nThe tutorials are designed to reinforce the essential techniques to understand the unit content. It is strongly recommended that you attend all scheduled tutorials to support your learning. In previous semesters, students with a poor attendance record often found themselves at risk of not\npassing the assessment tasks.\n\nvUWS\nYou should regularly check the Differential Equations vUWS site and your student email account for announcements and reminders.  In addition to lecture notes and practice questions, other study materials are available on vUWS.\n",
  "outcome": "Upon successfully completing this unit students will be able to:\n\n Outcomes\n\n1. Classify and solve various types of first order ordinary differential equations\n2. Classify and solve various types of second order ordinary differential equations\n3. Apply Laplace transforms to solve problems including second order ordinary differential equations\n4. Classify and solve various types of basic partial differential equations",
  "passCriteria": "1.\tParticipate in the class tests and the final examination, all of which are mandatory AND \n2.\tAchieve an overall mark of at least 50%.\n\nNote:  If you miss a class test, you must submit an application for Special Consideration online as soon as possible (there are very strict deadlines for doing this).  A successful application will mean that you will be given an estimate for that class test (provided you do not miss any others) based on your other tests and the final examination. There are no ‘catch-up’ class tests available. If you miss more than one assessment item (before the final examination) then your situation will be reviewed and you will be referred to a university counsellor. If you miss the final examination you should also submit an application for Special Consideration online as soon as possible (there are very strict deadlines for doing this).\n\t"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d0e8"
  },
  "id": "200032",
  "name": "Statistics for Business",
  "sfiaSkills": [
    {
      "id": "INAN",
      "level": 2
    },
    {
      "id": "VISL",
      "level": 2
    },
    {
      "id": "METL",
      "level": 2
    }
  ],
  "offer": [
    "sp",
    "au",
    "sua"
  ],
  "prerequisites": [],
  "prerequisiteText": "",
  "category": "datsci",
  "description": "Statistics for Business introduces the basic concepts and techniques of statistics that are particularly relevant to problem solving in business. It also provides a sound base for more advanced study in statistics and forecasting in subsequent sessions. Topics include: presentation of data; descriptive statistics; the role of uncertainty in business decision making; hypothesis testing; and basic forecasting.",
  "assumedKnowledge": "HSC Mathematics/Mathematics Extension 1 is desirable.",
  "approachToLearning": "The theory for each topic as well as examples will be presented in the online lecture. The online lectures have been broken into small sub topics. Students are expected to view each of the sub topic videos for the weekly topic. \n\nThis unit is one in which the later topics build on material covered earlier in the unit. As such, it is critical that students work consistently on this unit throughout the semester. Through the exams, it is intended to examine a student's understanding and ability to apply appropriate techniques rather than the ability to rote learn. \n\nIt is advised that students cover a topic each week as per the Teaching activities. Information will be put onto vUWS for both internal and external students (there will be a folder especially for the external class).  You are advised to look through all this material (not just that for the external class) as it will be helpful to you in progressing through this unit. \n\nThere will be a discussion board on the vUWS site just for the external class.  It is open to anyone to respond to the items that are placed there.  I will monitor the external class discussion board and add comments as necessary and appropriate.\n",
  "outcome": "Upon successfully completing this unit, students will be able to:\n\n Outcomes\n\n1. Organise and summarise data numerically\n2. Recognize the foundation behind inferential statistics\n3. Identify the underlying assumptions associated with each statistical technique and interpret the results\n4. Formulate economic and financial hypotheses into statistically testable forms\n5. Manipulate, analyse and graph data using Excel\n6. Employ the appropriate statistical methods and techniques in given situations",
  "passCriteria": "<ul>\n<li>Complete all assessment items (Assignment 1 &amp; 2 and the final exam); </li>\n<li>Obtain a minimum combined overall mark of 50/100; and</li>\n<li>Obtain at least 40% (20/50) in the final examination.<br>\n</li>\n</ul>"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d0e9"
  },
  "id": "200045",
  "name": "Quantitative Project",
  "offer": [
    "sp"
  ],
  "prerequisites": [],
  "prerequisiteText": [
    "Students must have successfully completed 30 credit points of Level 2 mathematics/statistics units from 200027 Linear Algebra,\r\n200028 Advanced Calculus,\r\n200030 Differential Equations,\r\n301031 Computer Algebra,\r\n301032 Making Sense of Data,\r\n301033 Introduction to Data Science,",
    "Students must also have completed 30 credit points of Level 3 mathematics/statistics units from 200022 Mathematical Modelling,\r\n200023 Analysis,\r\n200193 Abstract Algebra,\r\n300958 Social Web Analytics,\r\n301034 Predictive Modelling, 301035 Environmental Informatics"
  ],
  "sfiaSkills": [],
  "category": "mat",
  "description": "In this unit, students can deepen and/or apply knowledge gained during their course and practise oral and written presentation skills. Students will carry out a project under the supervision of an academic staff member. Assisted by their supervisor, students will define the problem to be studied and then acquire, develop and/or apply the appropriate theory or methodology. They will prepare a final report presenting theoretical results or methodology, an analysis and a discussion followed by an appropriate conclusion, and a literature review or a list of references as appropriate. Students will also give a talk on their project.",
  "approachToLearning": "This is a project based unit, so its main component is independent work on your project in consultation with your project supervisor.  In addition to that, there are the project allocation session, a formal lecture on giving presentations and writing reports, and two sessions of student presentations.\n\nStudents will work on a project in groups of two students.  However, every group project will contain a separate individual component for each student.  The joint and individual components of the project must be clearly identified in all presentations and written reports.\n\n<latex>\\textbf{To be allocated a project, you must attend the project allocation session in Week~1.}</latex>",
  "outcome": "The objectives of this unit are to deepen and apply theoretical and/or analytical skills gained during your course and to practise oral and written presentation skills.\n\nThe unit provides an opportunity for you to carry out a major project in the form of a directed investigation under the supervision of an academic staff member. With the assistance of your supervisor, you will define the problem to be studied and then acquire, develop and/or apply the appropriate theory or methodology. The final report will consist of a presentation of analytical and/or theoretical results, analysis and discussion followed by an appropriate conclusion and a literature review or a list of references as appropriate.  You will give two oral presentations on your project.\n\nProjects will be done in groups of two students, so you will also gain experience and skills in working in a team.\n\n Outcomes\n\n1. Plan and develop an investigative project\n2. Locate, identify and use information relevant to the problem being studied\n3. Undertake self-directed study relevant to the problem being investigated\n4. Undertake a theoretical and/or analytical investigation\n5. Write and produce a comprehensive research report in a logical, concise and professional manner\n6. Present a project and its results to an audience in a talk",
  "passCriteria": "Submit all assessment items and achieve an overall mark of at least 50%.  In all written reports, the contributions by each student in a project team, including the individual components of the project, must be clearly identified.\n\nNon-submission of any of the written reports or non-participation in any of the student presentation sessions will result in an FNS (Fail -- Non Submission) grade, unless Special Consideration is granted in accordance with UWS policies.\n"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d0ea"
  },
  "id": "200193",
  "name": "Abstract Algebra",
  "offer": [
    "au"
  ],
  "prerequisites": [
    "200025"
  ],
  "prerequisiteText": "200025 Discrete Mathematics ",
  "sfiaSkills": [],
  "category": "mat",
  "description": "This unit develops algebraic thought to a high level. The abstract concepts involved in the main topics (group theory and number theory) have many applications in science and technology, and the unit includes an application to cryptography.\n",
  "approachToLearning": "\nThis unit enhances learning through the following means:\n\n•\tThree hours of detailed lectures each week; theory, examples and various ideas are presented to the student;\n•\tA one hour tutorial each week; discussion of exercises;\n•\tFeedback on assignments and class tests, with solutions presented in vUWS for the student to review.\n\nFurthermore,  During the semester, students will prepare and present a solution to a tutorial question on the whiteboard in the class. This will help them to practice their presentation skills, as well as acquiring a deeper understanding of the subject. The Assignment is designed to provide an opportunity for solving problems without the pressure of time, to give feedback about students progress, and most importantly to help students learn the content of the unit.",
  "outcome": "Abstract Algebra is a vast field but in this unit we give an introduction to two areas: number theory and group theory, which find common ground in their application to encryption. The goals of the unit are to introduce the study of numbers and consider their generalization to rings and fields, to introduce the concept of a group and present some major results related to groups, to develop skills in reading and writing mathematics (including proving theorems), and to explore an application to the RSA cryptosystem.\n\n Outcomes\n\n1. Recognise, describe and manipulate the basic structures in abstract algebra and number theory; namely, groups, rings and integral domains\n2. Explain the links between these structures and the symmetries of natural objects\n3. Apply concepts from group theory and number theory to real life situations, such as RSA cryptography\n4. Demonstrate proficiency in both spoken and written mathematical communications, particularly constructing and communicating proofs",
  "passCriteria": "<p>-achieve an overall score of 50 marks or greater.\n\n</p>\n<p>Note: Results may be moderated before you receive your results. Moderation is a process whereby the unit coordinator regulates the marking of individual markers to achieve consistency in the application of unit objectives, performance standards and marking criteria. Marks for an individual piece of assessment will not be changed after you have your results. You should note that, consistent with the Assessment Policy - Criteria and Standards-Based Assessment (http://policies.uws.edu.au/view.current.php?id=00227), the final marks for the cohort may also be adjusted if marks are very high or low or there are inconsistencies between groups.</p>"
},{
  "_id": {
    "$oid": "605c576a250b7c1efc23629e"
  },
  "id": "200263",
  "name": "Biometry",
  "sfiaSkills": [
    {
      "id": "INAN",
      "level": 3
    },
    {
      "id": "RSCH",
      "level": 2
    }
  ],
  "offer": [
    "sp",
    "au"
  ],
  "prerequisites": [],
  "prerequisiteText": "",
  "category": "datsci",
  "description": "Biometry introduces students to various statistical techniques necessary in scientific endeavours. Presentation of the content will emphasize the correct principles and procedures for collecting and analysing scientific data, using a hands-on approach. Topics include effective methods of gathering data, statistical principles of designing experiments, error analysis, describing different sets of data, probability distributions, statistical inference, non-parametric methods, simple linear regression and analysis of categorical data.",
  "assumedKnowledge": "HSC Mathematics or equivalent.",
  "approachToLearning": "<p>Biometry introduces students to various statistical techniques commonly required when engaging in the scientific method. Using the resource material provided in Worksheets and software demonstration videos, students will perform statistical analyses and interpret results using the software called R-commander. Students are provided practical data sets which some have been collected through experiments done in their other units. </p>\n<p>R-commander has been installed correctly and runs effectively in all WSU IT lab computers. Instructions on how to use R-commander in the WSU IT lab computers are provided on Biometry vUWS site. Students are very strongly advised to use the WSU IT lab computers when using R-commander. Please note that R-commander is NOT installed in Library computers nor in SCDMS labs ( i.e. former SCEM labs). Students are strongly advised to contact the unit coordinator if they have software issues and such issues need to be addressed well before online quizzes start.</p>\n<p><br>In Autumn 2020, this unit is offered as a Composite delivery (i.e. External delivery). Unit learning material will be available online via vUWS site. There will not be any face to face weekly lectures and practicals except the two optional workshops held at Hawkesbury campus. First workshop will be held during the mid-session break and the second is scheduled during StuVac. Biometry is a 10 credit point unit and will require your full and continuous attention to maintain the highest possible grades. It is expected that you will spend at least 10 hours per week for 14 weeks on this unit. For example, 2 hours for lectures , 2 hours for practicals and a further 6 hours per week could be spent on R-commander demonstration videos/online lectures and textbook readings/questions. Hence you are strongly encouraged to adhere to the schedule of Teaching and Learning Activities which can be found in the Learning Guide. This schedule sets out clearly what you should be doing each week. Please keep up-to-date with the content as set out in this schedule so that your attendance at workshops will be worthwhile and also give you the best possible chance of successfully completing 200263 Biometry over Autumn 2020.</p>",
  "outcome": " Outcomes\n\n1. Apply the basic principles of statistical design incorporating error analysis\n2. Design a simple scientific experiment, and then carry out and analyse the data obtained\n3. Estimate population means using confidence intervals\n4. Test hypotheses about population means using parametric techniques and find appropriate sample sizes for experiments\n5. Use regression and correlation techniques to describe relationships between variables\n6. Use the chi-square test for goodness of fit and test for independence to analyse categorical type data\n7. Develop statistical computing skills as part of a 'tool-kit' for solving statistical problems",
  "passCriteria": "-Attempt the Computer Skills Assignment;\n<br>-Achieve a minimum of 40% in the final examination (or deferred exam if eligible);\n<br>-Achieve a combined overall mark (i.e. combining all assessment tasks) of at least 50%."
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d0ec"
  },
  "id": "300093",
  "name": "Computer Graphics",
  "sfiaSkills": [
    {
      "id": "METL",
      "level": 3
    },
    {
      "id": "PROG",
      "level": 4
    }
  ],
  "offer": [
    "au"
  ],
  "prerequisites": [
    [
      "300147",
      "300581",
      "300582"
    ]
  ],
  "prerequisiteText": "300147 Object Oriented Programming OR 300581 Programming Techniques OR 300903 Programming Techniques (Advanced) OR 300582 Technologies for Web Applications ",
  "category": "prg",
  "description": "Computer Graphics will examine elementary graphics concepts, algorithms and programming skills for producing graphical applications, in both two-dimension (2D) and three-dimension (3D). Techniques and algorithms will be programmed in Processing, which is a very easy-to-learn programming language yet powerful and comprehensive.",
  "approachToLearning": "This unit is a 10 credit point unit and will require your full and continuous attention to maintain the highest possible grades. It is expected that you will spend at least 10 hours each week (on average) which includes the four (4) face-to-face hours (lectures and tutorials/practicals) per week. Some weeks you will spend more time on learning activities and assessments and in other weeks the workload will be somewhat less. \n\nLectures are a key element of your learning environment in this unit. The lectures will focus on familiarising the students with the theoretical concepts of the unit content. Whilst attendance in lectures is not compulsory, it is highly recommended. All content covered in lectures is examinable. The lecture sets the context for the practical the following week and will highlight concepts and skills you will need for the formal final examination.\n\nPracticals/tutorials provide the opportunity for learning in a smaller class context. The practicals/tutorials are designed for further discussion of the theoretical concepts covered in lectures, as well as exploration of the practical concepts and samples involved in developing programs for computer graphics. Along with your lectures, the practicals/tutorials are designed to help you develop the knowledge and skills that will form the basis upon which you will be assessed in the final exam, as well as give you the knowledge and skills required to complete the assignments. The practicals/tutorials enables students to maintain adequate performance and continuity of their tutorial/practical program and tutors to maintain contact, monitor their students progress as well as provide verbal feedback of your work and understanding outside of formal assignment\nfeedback.\n\nStudents should access vUWS and/or check their student email account(s) at least twice a week for teaching materials, announcements and reading materials, documents and other information.",
  "outcome": "Computer Graphics will examine elementary graphics concepts, algorithms and  programming skills for producing graphical applications, in both two-dimension (2D) and three-dimension (3D). Techniques and algorithms will be programmed in Processing, which is a very easy-to-learn programming language yet powerful and comprehensive.\n\n Outcomes\n\n1. Explain the main concepts employed in two-dimension (2D) and three-dimension (3D) computer graphics\n2. Apply colour, geometry, transformation interaction, animation techniques in 2D graphics\n3. Evaluate image processing techniques in 2D graphics\n4. Apply primitives, geometric objects, transformation and interaction in 3D graphics\n5. Apply viewing, materials, lights, modelling, hierarchy, curves and surfaces in 3D graphics",
  "passCriteria": "Obtain at least 50% as a total value of all your assessment scores and submit mandatory assessments. The mandatory assessments are Tutorial Labs, Assignment 1, Assignment 2 and Final Exam."
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d0ed"
  },
  "id": "300095",
  "name": "Computer Networks and Internets ",
  "sfiaSkills": [
    {
      "id": "PORT",
      "level": 2
    },
    {
      "id": "NTDS",
      "level": 2
    },
    {
      "id": "NTAS",
      "level": 2
    }
  ],
  "offer": [
    "au"
  ],
  "prerequisites": [
    [
      "300565"
    ]
  ],
  "prerequisiteText": "300565 Computer Networking OR Computer Networking (Advanced) ",
  "category": "net",
  "description": "This unit extends on the work undertaken in the prerequisite unit and provides students with an in-depth explanation on the role of the architecture, components, and operations of routers and switches in a small network. Students will configure and troubleshoot routers and switches and resolve common issues with common routing protocols, virtual LANs, and inter-VLAN routing in both IPv4 and IPv6 networks. This is the second of three units that prepares the student for industry-based networking certification (CCNA).",
  "assumedKnowledge": "Fundamentals of data communications and computer networking, such as that covered in the prerequisite unit.",
  "approachToLearning": "In general the credit point value of a unit determines the number of hours per week you need to spend on a unit in order to pass the unit. The weekly face-to-face components of this unit total four (4) hours (2-hour lecture and 2-hour practical lab workshop) per week. This means that, provided you work efficiently in the face-to-face teaching/learning time, you will need to spend a minimum of an additional six (6) hours per week working on the material for this unit, including reading the online curriculum, preparation for the practical lab workshop exercises, completing online quizzes and studying for the final exam.\n\nIn this unit you will be engaged in a range of activities to support your learning. There are a range of resources available to assist you in this unit and university study more generally. The key activities and resources for this unit are outlined in section 3 of this learning guide.\n",
  "outcome": "This unit extends on the work undertaken in the prerequisite unit and provides students with an in-depth understanding of the role of TCP/IP, ICMP and routing protocols used in IP networks and internetworks. Students will learn about the critical role of routing protocols and how to design, construct and implement small internets. Students will also learn how to perform basic management and security tasks in a practical, hands-on fashion using Cisco routers and other networking equipment. This is the second of three units that prepares the student for industry based networking certification (CCNA).\n\n Outcomes\n\n1. Describe and explain basic switching concepts and the operation of switches\n2. Investigate and describe the purpose, nature, and operations of a router, routing tables, and the route lookup process\n3. Design a network addressing scheme using both classful and classless addressing\n4. Define, configure, and troubleshoot how VLANs create logically separate networks and how routing occurs between them\n5. Configure and manage routers used in small internets\n6. Configure and troubleshoot static routing and default routing\n7. Configure and troubleshoot dynamic routing\n8. Define, configure, and troubleshoot access control lists (ACLs)\n9. Configure and troubleshoot Dynamic Host Configuration Protocol (DHCP)\n10. Explain, configure, and troubleshoot Network Address Translation (NAT) operations",
  "passCriteria": "Attempt all assessment items AND achieve a passing mark in the final online test (quiz) AND attain a total unit mark of 50 or greater.\n\nStudents not meeting this minimum mark may have demonstrated good practical skills but would not have demonstrated the required conceptual and theoretical understanding required of someone studying at a university level."
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d0ee"
  },
  "id": "300096",
  "name": "Computer Organisation",
  "sfiaSkills": [
    {
      "id": "HWDE",
      "level": 2
    }
  ],
  "offer": [
    "sp"
  ],
  "prerequisites": [
      [
       "300580",
       "300027"
      ],
      [
       "200025",
       "200237"
      ]
],
  "prerequisiteText": [
    "The following pre-requisites apply to all courses except 3771:",
    "300580 Programming Fundamentals OR\r\n300027 Engineering Computing AND\r\n200025 Discrete Mathematics OR\r\n200237 Mathematics for Engineers 1",
    "The following pre-requisite unit applies to course 3771 only:",
    "301335 Engineering Programming Fundamentals"
  ],
  "category": "hw",
  "description": "This unit is designed for computer science students, particularly those interested in systems programming and hardware development. The students will learn about the interface between the hardware and software of a computer system. This will involve study of some aspects of computer architecture and low level interfacing to gain an insight into central processing unit (CPU) organisation at the assembly language level. After completing this unit students will be able to write procedures in an assembly language, use their understanding of the relationship between the instruction set architecture and the implementation of high level languages to write efficient programs.",
  "approachToLearning": "There are weekly face-to-face lectures to present related topics of the unit. The lectures and text reading will examine the theoretical aspects related to computer organisation and architecture. You are required to practice the topics by during tutorials for each module of the unit. The practical activities are designed to reinforce students’ understanding of theoretical concepts. In addition to lecture notes and laboratory worksheets, we may also provide some recorded lectures and online discussion to support the unit content so that you can practice further the presented concepts in your own time. Following this approach to learning, you will gain programming expertise in becoming a confident and competent system programmer and hardware developer.\n\nThis unit has been iteratively designed and implemented by following the key steps applying blended learning:\n\n•\tPlanning for integration of blended learning principles\n•\tDesigning the learning activities and assessment and developing them as required\n•\tImplementing the blended learning design\n•\tEvaluating the effectiveness of blended learning designs\n•\tMaking improvements for the next time of the unit delivery\n\nIt has been structured towards a blended delivery model, where the teaching activities consist of face-to-face lectures, some online-lecturing and on-campus practice. We’ll continue to revise the Blended Learning approach (e.g. implementing adaptable techniques and settings) to satisfy the needs for student-centered learning. This could be a long-run process.",
  "outcome": " Outcomes\n\n1. Describe the internal representation of different types of data\n2. Identify the major components of a computer system based on the von Neumann machine\n3. Describe how fundamental high-level programming constructs and data structures are implemented at the assembly language level\n4. Discuss a simple CPU organisation and Instruction Set Architecture (ISA) design principles including instruction formats and addressing modes\n5. Undertake a programming task at the hardware/software interface and carry out such task in the assembly language programming\n6. Identify the hardware mechanisms which support interrupt handling and explain how interrupts are used to implement I/O control\n7. Identify and discuss the levels in memory hierarchy. Explain how the hierarchical implementation relates to computer system performance\n8. Explain basic instruction level parallelism using pipelining; identify the major hazards and their impact on the processor performance\n9. Explain the structure of the datapath and control for a simple single-cycle processor\n10. Discuss fundamental issues in evaluating computer system performance and carry out calculations in this regard",
  "passCriteria": "-\tAchievement of at least 50% overall is required to pass this unit. \n-\tAt least 6 lab submissions must be attempted; at least one quiz must be attempted. \n\nNo mandatory pass assessment components."
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d0ef"
  },
  "id": "300103",
  "name": "Data Structures and Algorithms",
  "sfiaSkills": [
    {
      "id": "PROG",
      "level": 3
    },
    {
      "id": "TEST",
      "level": 1
    }
  ],
  "offer": [
    "au"
  ],
  "prerequisites": [
    [
      "300147",
      "300581",
      "301335"
    ]
  ],
  "prerequisiteText": "300147 Object Oriented Programming OR 300581 Programming Techniques OR 300903 Programming Techniques (Advanced) OR 301335 Engineering Programming Fundamentals ",
  "category": "prg",
  "description": "This unit introduces students to fundamental data structures and algorithms used in computing. The material covered forms the basis for further studies in programming and software engineering in later units and for further training in programming skills. The unit focuses on the ideas of data abstraction and algorithm efficiency. The issues of computational complexity of algorithms are addressed throughout the semester. The topics covered include the fundamental abstract data types (lists, stacks, queues, trees, hash tables, graphs), recursion, complexity of algorithms, sorting and searching algorithms, binary search trees and graphs.",
  "approachToLearning": "<p>This unit enhances learning through a variety of activities, including weekly scheduled lectures, onsite practicals, online tutorials and assignments (See the table in next page for more details). In addition, a peer assistant study group (PASP) may be organised and supervised by the unit coordinator to offer students more opportunities in programming training.</p>",
  "outcome": "<p>This unit introduces students to fundamental data structures and algorithms used in computing. It follows introductory programming units, such as Programming Fundamentals and Object Oriented Programming, further to train students with professional programming skills. The material covered forms the basis for further studies in all computing related courses. The unit focuses on the ideas of data abstraction, issues related to data typing, and software reuse. The issues of computational complexity of algorithms are addressed throughout the semester. The topics covered include the fundamental abstract data types such as lists, stacks, queues, hash tables, graphs, recursion, complexity of algorithms, internal and external sorting, searching algorithms, file structures, binary trees and B-trees. This unit assumes students have a working knowledge of programming in a language such as C, C++ or Java. Basic skills of programming as gained from the introductory units of programming such as Programming Fundamentals will be used. The students will have advantage in learning this unit if they have taken any level 2 or above programming units, such as Object Oriented Programming or Programming Techniques. Study of data structures can be challenging as both the concept of the structure, its implementation and coding must be understood. Students need to be thoroughly familiar with the concept of typing in computer languages as this can cause difficulties in implementing flexible data containers, which are able to hold different types of data. In this unit a particular approach using pointers is used. Thus an understanding of pointers is essential also to be successful in implementing the structures.</p>\n<p><br></p>\n\n Outcomes\n\n1. Select appropriate data structures to solve moderately complex programming problems\n2. Discuss time and space tradeoffs among different data structures that could be used to represent specific information\n3. Perform time-complexity analysis against multiple implementations of various abstract data types\n4. Write programs that use the fundamental abstract data types: linked list, stack, queue, hash table, binary search tree, heap, graph\n5. Select efficient sorting and searching algorithms to solve moderately complex programming problems",
  "passCriteria": "<p>50% of overall marks.<br></p>"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d0f0"
  },
  "id": "300104",
  "name": "Database Design and Development",
  "sfiaSkills": [
    {
      "id": "DTAN",
      "level": 2
    },
    {
      "id": "DBAD",
      "level": 3
    },
    {
      "id": "DBDS",
      "level": 2
    }
  ],
  "offer": [
    "sp",
    "sua"
  ],
  "prerequisites": [],
  "prerequisiteText": "",
  "category": "sys",
  "description": "The main purpose of this unit is to provide students with an opportunity to gain a basic knowledge of database design and development including data modeling methods, techniques for database design using a set of business rules that are derived from a case study and finally implementation of the database using a commercial relational database management system. The unit also examines a number of important database concepts such as database administration, concurrency, backup and recovery and security. At the same time student learning and intercommunication skills are enhanced by running tutorial presentations and group assignments.",
  "assumedKnowledge": "Basic programming skills, including variable declaration, variable assignment, selection statement and loop structure.",
  "approachToLearning": "This unit enhances learning through the following means:\n\nLectures - all regular lecture notes are available on the unit website.  They contain the main points and key issues for the unit, and indicate the depth of understanding expected of the students.  As such, lecturers may choose to elaborate more on certain more important or fundamental concepts or  techniques  during  the  class  and  leave  the  uncovered  slides  to  be  studied  by  the  students themselves.  Some  lectures  will  also  contain  a  few  slides  at  the  end  on  the  SQL  statements  for the  completeness  of  the  notes;  they  are  in  general  expected  to  be  read  by  the  students  again, and briefly explained by the tutors during the tutorials/practicals on the need-to basis.\n\nTutorials/Practicals  -  provide  students  with  hands-on  experience  working  with  database  design and construction as well as effectively formulating queries in SQL. The tutorial part will discuss with the students some selected topics in more detail.  The combination of tutorials and practicals will  typically  consolidate  what  the  students  have  already  learned  in  the  previous  week/s,  with possibly  some  relevant  additional  materials  as  well,  and  will  provide  feedback  immediately  in class and in person whenever possible so that students are aware of their level of understanding of the material being presented.\n\nAssignments - two assignments are set to go through the main aspects of database design and development. The design process entailed by these assignments will go a long way at enhancing the students' profound understanding on the design and the use of database. Making queries in SQL is another skill to be gained by the students through these assignments.\n\nTextbook - the text provides additional detail and examples on top of what is in the lecture notes. Students should refer to it if in difficulty with a concept or technique, and should try to read through the relevant parts as much as possible.\n\nAdvanced Content - There are a variety of slides or practical paragraphs marked explicitly as advanced or optional. These are meant for the students of 300941, and will not be assessed in any way for the students of 300104, although they will help students a great deal in better understanding the topics in this unit.\n\nvUWS and External Portal - all announcements and teaching materials, including all assignments, are accessible via vUWS, as well as the External Portal outside vUWS. All submissions must be electronic and through the submission page on the unit website. Students are required to visit the unit website for the latest announcement on a regular basis.\n\nUnit 300104 will share the website with the unit 300941 - Database Design and Development (Advanced).",
  "outcome": "This unit assumes basic programming knowledge and skills. The practicals will be mostly based on Microsoft SQL Server for the database construction and queries. Microsoft Access will also be briefly utilized in the practicals. The unit learning outcomes are summarised in the table at the end of this subsection.\n\nThis unit promotes teamwork - the two major assignments can be done in a group of two.\n\nThere are no prerequisites for this unit. However, basic programming skills, including variable declaration, variable assignment, selection statement and loop structure, are the assumed knowledge.\n\n Outcomes\n\n1. Describe components of a database system, advantages and disadvantages of a database system, roles peoples play and the historical development of a database system in the context of a Relational Database Management System (RDBMS)\n2. Apply basic skills in database modeling, including ER diagrams and normalization in RDBMS\n3. Explain the basic concepts of relational algebra and apply them in queries\n4. Describe the general concepts of transaction management\n5. Identify concepts in database administration\n6. Describe concepts in database security and backup\n7. Define and manipulate data using structured query language (SQL)\n8. Design and develop a database for a business application using a commercial database management system",
  "passCriteria": "Achieve 50% or more for the overall marks.\nPass the final examination."
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d0f1"
  },
  "id": "300111",
  "name": "Developing Web Applications with XML",
  "sfiaSkills": [
    {
      "id": "METL",
      "level": 2
    },
    {
      "id": "PROG",
      "level": 2
    }
  ],
  "offer": [
    "sp"
  ],
  "prerequisites": [],
  "prerequisiteText": "",
  "category": "dev",
  "description": "This third year unit provides a comprehensive coverage of XML, related emerging technologies and their use in web applications. Students will be given opportunities to develop web based information systems which rely upon these technologies. This unit is heavily oriented to practical based work.",
  "assumedKnowledge": "300582-Technologies for Web Applications, 300580-Programming Fundamentals",
  "approachToLearning": "Lecture:\nLectures are a key element of your learning environment in this unit. The lectures will focus on familiarising the students with the theoretical concepts of the unit content. Whilst attendance in lectures is not compulsory, it is highly recommended. All content covered in lectures is examinable. The lecture sets the context for the practical the following week and will highlight concepts and skills you will need for the final examination\n\nPractical:\nPracticals provide the opportunity for learning in a smaller class context. The practicals are designed for further discussion of the theoretical concepts covered in lectures, as well as exploration of the practical concepts involved in developing web applications with xml, including working on practical exercises and assignments. Along with your lectures, practicals are designed to help you develop the knowledge and skills that will be assessed and required to attempt and complete the assignments and the final exam. Practicals also give you the opportunity to discuss your assignment progress and develop your understanding of the unit content with your tutor through verbal feedback.\n\nvUWS:\nUnit material will be made available on the unit’s vUWS (E-Learning) site. You are expected to consult vUWS at least twice a week, as all unit announcements will be made via vUWS. Teaching and learning materials will be regularly updated and posted on vUWS.",
  "outcome": " Outcomes\n\n1. Create functional and practical client side web applications using XML\n2. Create functional and practical Web applications in XML utilising server side scripting\n3. Understand and explain the use of XML for document management, web sites and application development/integration\n4. Identify and explain how XML and related technologies are currently being applied in the real world\n5. Implement the concept of Document Type Definitions\n6. Implement the concept of XML Schema\n7. Implement transformation of XML documents using CSS, XSLT\n8. Explain the use of Xlink, Xpointer and Xpath to retrieve information from XML documents",
  "passCriteria": "1. Make a full attempt of the mandatory components (see below)\n2. Achieve a total mark of at least 50/100\n\nThe mandatory components of this unit are:\na. Client-side assignment\nb. Server-side assignment\nc. Final exam\nA student who has failed to complete a mandatory component will not be eligible to receive a passing grade regardless of the total mark achieved.\n\nThere are four (4) assessment components in this unit, and each have been designed to enable you to demonstrate that you have achieved the unit learning outcomes. Completion and submission of all assessment items which have been designated as mandatory or compulsory is essential to receive a passing grade.\n"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d0f2"
  },
  "id": "300115",
  "name": "Distributed Systems and Programming",
  "sfiaSkills": [
    {
      "id": "PROG",
      "level": 3
    },
    {
      "id": "NTDS",
      "level": 2
    },
    {
      "id": "ITOP",
      "level": 2
    },
    {
      "id": "METL",
      "level": 3
    }
  ],
  "offer": [
    "sp"
  ],
  "prerequisites": [
      "300565",      
      [
       "300147",
       "300581"
      ]
],
  "prerequisiteText": [
    "Successful completion of 300565 Computer Networking and either 300147 Object Oriented Programming or 300581 Programming Techniques."
  ],
  "category": "prg",
  "description": "This unit covers the concepts, design, and programming of distributed systems. It builds on basic network communication protocols (specifically IP) to cover client server programming using both the system level socket interface and remote procedure calls. It also examines large scale distributed system architectures particularly those based on distributed objects and considers the complexities inherent in distributed transactions. Key concepts covered include data and algorithmic distribution, idempotent protocols, stateless and statefull servers, and distributed system transparency. Illustrative case studies are included.",
  "approachToLearning": "The Lecture/Tutorials present and explore the theoretical aspects of the unit, and allow for discussion of ideas and theories.\nThe practical sessions allow students to explore the theory in a controlled way, receiving both instructor and peer mentoring along with feedback on their progress.",
  "outcome": " Outcomes\n\n1. Identify and explain distributed system models, client server in particular\n2. Write programs for client side applications (UDP and TCP sockets)\n3. Write programs for iterative and concurrent servers (UDP and TCP sockets)\n4. Describe and explain how RPC based systems work\n5. Explain the purpose and method of operation of system generated RPC based program code\n6. Write simple RPC based programs (client and server ends) and install/register such services\n7. Identify and describe the major distributed architectures in wide spread use, in particular those based on distributed object technologies\n8. Describe and explain the principal architectural components and working of one major distributed architecture implementation\n9. Explain how distributed transactions run in both partitioned and replicated data environments in terms of recovery, concurrency control, and commitment\n10. Deliver tested and documented programs and systems of significant complexity within specified project deadlines and in a form that meets IT professional standards",
  "passCriteria": "Attempt the Written Tutorial Exercises and the Two Quizzes and achieve a total mark of greater than 50%."
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d0f3"
  },
  "id": "300128",
  "name": "Information Security",
  "sfiaSkills": [
    {
      "id": "SCTY",
      "level": 3
    }
  ],
  "offer": [
    "sp"
  ],
  "prerequisites": [
    "200025",
    [
      "300103",
      "300581"
    ]
  ],
  "prerequisiteText": "200025 Discrete Mathematics AND 300103 Data Structures and Algorithms OR 300581 Programming Techniques OR 300903 Programming Techniques (Advanced) ",
  "category": "sec",
  "description": "Information Security is concerned with the protection and privacy of information in computer systems. The focus is primarily on introducing cryptography concept, algorithm and protocol in information security and applying such knowledge in the design and implementation of secure computer and network systems. The unit also addresses conventional and public key encryption, number theory and algebra and their application in public key encryption and signature. Students will learn the application of cryptography algorithm in current computer systems and information security management. This unit also provides students with the practical experience around security programming.",
  "assumedKnowledge": "Basic understanding of data structures and discrete mathematics\nBasic programming skills in C, C++, java, etc.",
  "approachToLearning": "Lecture: 2 hours face to face lecture per week from week 1.\nLectures are designed to present and explore the theory and practice of cryptography and information security techniques.\n\nPractical: 2 hours combined tutorial & practical per week from week 2.\nTutorials and lab practicals will enable students to investigate, practice and implement the security techniques presented in the lecture.\n",
  "outcome": " Outcomes\n\n1. Describe fundamentals in computer security and basic knowledge in cryptography\n2. Explain conventional encryption/decryption methods and the concepts of symmetric keys\n3. Design and implement block ciphers and stream ciphers\n4. Explain principles of public key cryptosystems and public key algorithms\n5. Summarize the number theory used in the RSA algorithm, Diffie-Hellman key exchange and digital signatures\n6. Apply authentication functions and hash functions in message authentication\n7. Illustrate Kerberos authentication protocols\n8. Apply security requirements and design in electronic mail systems and in electronic commerce\n9. Explain principles and mechanisms of security management",
  "passCriteria": "Achieve at least 50% overall and 50% in the final exam. It applies to other grades as well. e.g. to achieve a \"C\"\ngrade, you must achieve 65% overall and 65% in the final exam."
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d0f4"
  },
  "id": "300130",
  "name": "Internet Programming",
  "sfiaSkills": [
    {
      "id": "PROG",
      "level": 3
    },
    {
      "id": "TEST",
      "level": 1
    }
  ],
  "offer": [
    "sp"
  ],
  "prerequisites": [
    [
      "300147",
      "300581",
      "300027"
    ]
  ],
  "prerequisiteText": "300147 Object Oriented Programming OR 300581 Programming Techniques OR 300027 Engineering Computing OR 300903 Programming Techniques (Advanced) ",
  "category": "dev",
  "description": "This unit offers students basic concepts and latest technologies of internet programming and web-based application development. Utilising one of the popular internet programming languages, such as Java, it aims to develop the programming skills and methodologies required for both client-side and server-side programming as well as general purpose programming. The range of topics covered by the unit includes HTML, XML, Java applets, desktop application in Java, servlets, JavaServer Pages and JDBC.",
  "assumedKnowledge": "Basic knowledge on Internet browsing and any object-oriented programming language.",
  "approachToLearning": "- Two hour lecture per week.\n- Two hour tutorial and lab practical per week\n\nPractical sessions will be scheduled for 12 weeks of the semester beginning in the 2nd week; less any class times falling on public holidays.\n\nLectures are designed to present and explore the theory and practice of Java programming techniques. Tutorials and lab practicals will enable students to investigate, practice and implement the java programming techniques presented in the lecture.",
  "outcome": "Upon successfully completing this unit, students will be able to:\n\n Outcomes\n\n1. Explain the basic principles and concepts in programming design and implementation for the Internet\n2. Write programs that efficiently utilize basic data structures and algorithms, applets, threads, and basic GUI components\n3. Design web pages by using web forms, applets and CGI scripts\n4. Apply the Java features for Internet application development, including Servlets, JSP, and JDBC\n5. Explain the concepts of encapsulation, inheritance and polymorphism in terms of the design and implementation of Java classes and applications\n6. Use Java API packages",
  "passCriteria": "- Achievement of at least 50% overall.\n- Satisfactorily complete all assessment items.\n\nIn order to qualify for a passing grade in the unit a student must satisfy the School that they have appropriately completed all assessment items of the unit. Satisfactory completion of an assessment item includes a full attempt at the work designated and the demonstration of an appropriate level of knowledge of the assessment content. Failure to do so will result in a 'Fail' grade, regardless of the total mark achieved in the unit by the student."
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d0f5"
  },
  "id": "300134",
  "name": "Introduction to Information Technology",
  "sfiaSkills": [],
  "offer": [
    "sp",
    "au"
  ],
  "prerequisites": [],
  "prerequisiteText": "",
  "category": "sup",
  "description": "This introductory unit gives students an insight into the history, structure, operations and uses of computers, and their impact on society. This will be complemented by hands-on use of computers and popular application software packages in a graphical user interface environment. Students gain a basic understanding of the uses of computers, and the skills necessary to use popular applications software, including word processing, spreadsheet and database packages, and Internet tools and services.",
  "approachToLearning": "<p>There are NO traditional face-to-face lectures in this unit, but there are online lecture modules. Instead of attending lectures physically, you watch online lecture modules that present the major topics of this unit. The online lectures and text reading will examine the theoretical aspects related to information technology.\n</p>\n<p>\nThe practical activities are designed so that you will gain expertise in becoming a confident and competent user of information technology. The weekly on-campus practicals start from week 2. On-campus students are required to attend tutorials. External students do not have to attend the on-campus tutorials except the PPT presentation and practical exam (unless alternative options are provided).\n</p>\n<p>\nIt has been structured towards a blended delivery model, where the teaching activities consist of online-lecturing and on-campus practice. We run this unit in a manner of \"small lecture but big tutorial\" and \"light presentation but heavy practical\". This model builds upon the nature of university study of being effective and independent learners.\n\nWe'll continue to revise the Blended Learning approach (e.g. implementing adaptable techniques and settings) to satisfy the needs for student-centered learning. This could be a long-run process.</p>",
  "outcome": " Outcomes\n\n1. Recognise and describe the function(s) of the fundamental components of any computer system\n2. Demonstrate an understanding of the principles of operation of computer hardware, software, peripheral devices and the integration of these components into computer systems\n3. Competently use a range of common applications software packages to complete tasks commonly encountered in educational, work and leisure environments\n4. Effectively utilise electronic networks to communicate\n5. Demonstrate the ability to successfully search and retrieve information from online sources\n6. Critically discuss issues raised by the use of computers in society",
  "passCriteria": "<p>- Achievement of at least 50% overall is required to pass this unit. There is no threshold for any individual assessment item.</p>\n<p>\n- Satisfactory attempt: In order to pass this unit you must make a satisfactory attempt at ALL continuous assessment items:\n</p>\n\n\n\n<ul>\n<li>Presentation\n</li>\n<li>Practical Exam\n</li>\n<li>Portfolio\n</li>\n<li>Project\n</li>\n</ul>\n<p>\nIf the tutor does not consider it a satisfactory attempt it will be returned and you will be asked to re-submit within a set timeframe (usually the next tutorial). If the item is resubmitted and considered a satisfactory attempt, the marks will be released. (Note - the marks given will be for the original attempt). All assessment items must be submitted as satisfactory attempts before the end of teaching (Week 14) unless an extension has been granted otherwise you will automatically fail the unit.</p>"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d0f6"
  },
  "id": "300136",
  "name": "I.T. Support Practicum",
  "offer": [
    "au"
  ],
  "prerequisites": [
    "300150",
    [
      "300138",
      "300576"
    ]
  ],
  "prerequisiteText": "300150 PC Workshop AND 300138 LAN Workshop OR 300576 Networking Workshop ",
  "sfiaSkills": [
    {
      "id": "PORT",
      "level": 3
    }
  ],
  "category": "sup",
  "description": "This unit provides students real-world experience in the area of Information Technology (IT) support. Students are located with industry partners in the Greater Western Sydney region in IT support positions for 10 hours per week over a 12 week period. In addition, students receive instruction and tuition in aspects of professional practice such as code of ethics.",
  "approachToLearning": "<p>The unit consists of a two hour orientation session in the first week of semester, then 120 hours of work experience. Announcements will be posted from time to time on vUWS. Students are advised to check vUWS regularly for updates.\n</p>\n<p>\nThe placement provides real-world experience in the area of Information Technology (IT) support by placing students with industry partners in the Greater Western Sydney region in IT support positions for 10 hours per week over a 12 week period.\n</p>\n<p>\nThe orientation session covers the requirements and operation of the unit, covers professional Code of Practice and professional ethics, includes a section on working with children (legal, ethical and moral obligations) as many students have access to school students during their placement, and is used to collect information as to students' personal preferences.\n</p>\n<p>\nThe meetings with unit lecturer review progress and related issues, and provide an opportunity for the unit lecturer to get feedback on the providers. Review meetings are expected to take 10 to 15 minutes. Students will be asked to make appointments with the unit lecturer. There are two compulsory meetings.\n</p>\n<p>\nStudents are required to complete 120 hours of work experience with their work experience provider. Normally this equates to an average of 10 hours per week over a period of 12 weeks. However, students must negotiate exact details of working hours with their work supervisor, subject to their needs and those of the provider.</p>",
  "outcome": "Upon successfully completing this unit, students will be able to:\n\n Outcomes\n\n1. Apply the knowledge and skills learned throughout the course in an effective, efficient, and appropriate manner\n2. Elicit, analyse, and interpret client requirements for general and specific appropriate information technology solutions; design (or assist in the design), implement, test, maintain, and document those solutions\n3. Use and apply team work, empowerment methods, meeting concepts, group techniques, and listening skills to address and resolve problems\n4. Communicate effectively, both in writing and orally, with clients, vendors, colleagues, employees, employers, and other people at all levels of the community and organisations within the community\n5. Explain the technical, economic, legal, ethical, moral, and social implications, constraints, costs and benefits of adopting and applying particular technological solutions to address personal and corporate objectives\n6. Participate in, and direct if necessary, a project to investigate, identify, specify, implement, test, install, and maintain an information system involving the identification and control of a set of project activities",
  "passCriteria": "<p>\n- Complete 120 hours of work experience\n</p>\n<p>- Receive a satisfactory supervisors report</p>"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d0f7"
  },
  "id": "300138",
  "name": "LAN Workshop",
  "sfiaSkills": [
    {
      "id": "NTAS",
      "level": 3
    },
    {
      "id": "METL",
      "level": 3
    },
    {
      "id": "TECH",
      "level": 2
    }
  ],
  "offer": [
    "sp"
  ],
  "prerequisites": [],
  "prerequisiteText": "",
  "category": "net",
  "description": "This unit provides students with the knowledge and skills necessary to install, test, tune, customise, repair and maintain networking hardware and software necessary to create a Local Area Network (LAN). Students also learn how to administer a LAN by setting up user accounts, access privileges, security procedures and back-up/recovery procedures.",
  "assumedKnowledge": "Ability to list, discuss and compare the elements of information coding and signal transmission. List, describe and explain the elements and functional relationships of communications hardware and software. Identify, locate, distinguish and describe the individual hardware components of a personal computer (PC) and explain their purpose, functions and operations. Install PC components, devices and peripherals in accordance with installation procedures and operational standards.",
  "approachToLearning": "This unit contains four hours of weekly face-to-face teaching components (a 2-hour lecture and a 2-hour workshop). Besides, students should spend at least 6 hours in self-study each week in the unit learning. The extra hours are to be used for reading lecture notes, preparing for practical exercises, taking online self-tests, completing the assignment and studying for quizzes and the final examination. \n\nAcademic activities carried out in the unit teaching/learning include lectures, workshops (practicals), self-tests, and the assignment (applied project). \n\nLectures\nLecture notes (and other teaching materials) will be made available at the unit website (vUWS) before the corresponding class commences. The material introduced in each lecture is to familiarise you with the key theoretic concepts of the unit and is usually contained and strengthened in the corresponding tutorial/ practical of the following week workshop. \n\nWorkshops\nTutorial questions and hands-on exercises are designed in the workshop session to consolidate what students have learnt in the lecture. The practical exercises, while closely related to the unit, some of the questions are designed to deepen the study of a particular topic that may not be directly included in the lecture notes. Students are welcome to discuss among themselves and search on-line resources during such exercise time. Please be advised that the workshop session is compulsory and the two quizzes will be conducted in the workshop time.\n\nSelf-Tests\t \nA large number of self-testing questions will be provided to help students to check their understanding at each stage of unit learning. Some of the test questions may not be covered by lecture notes and are designed to extend the scope of the unit.\n\nApplied Project\nShould be each student's individual work as an extension of the workshop exercises. ",
  "outcome": "Upon successfully completing this unit, students will be able to:\n\n Outcomes\n\n1. Install and configure network protocols and applications according to client requirements\n2. Plan, organise and provide basic LAN systems administration and security functions\n3. Contribute to the preparation of a disaster recovery plan for a LAN and set up appropriate backup and recovery procedures\n4. Identify, diagnose, and correct network breakdowns, conflicts, errors and problems\n5. Install, connect, configure, monitor, and tune LAN systems comprising wiring, networking hardware, networking operating systems, and presentation layers\n6. Explain telecommunications systems performance measures and ensure adequate performance and reliability for a LAN\n7. Explain, install, and test networking equipment such as modems, multiplexors, ethernet components, bridges, routers, and terminal emulators\n8. Explain telecommunications requirements for transmission of voice, audio, data, still images, motion video, and multimedia",
  "passCriteria": "Achievement of at least 50% overall is required to pass this unit. \nAll assessment components are mandatory unless being indicated not compulsory explicitly. A student will receive an FNS (Fail Not Submission) grade if he/she has not completed one or more of the mandatory assessments as required. Other grades will be determined according to the usual WSU grading scheme. \nFinal marks and grades are subject to confirmation by the School Assessment Committee which may scale, modify or otherwise amend the marks and grades for the unit, as may be required by University policies.\n"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d0f8"
  },
  "id": "300143",
  "name": "Network Security",
  "sfiaSkills": [
    {
      "id": "NTDS",
      "level": 3
    },
    {
      "id": "SCAD",
      "level": 3
    },
    {
      "id": "PENT",
      "level": 2
    },
    {
      "id": "INAS",
      "level": 2
    }
  ],
  "offer": [
    "sp"
  ],
  "prerequisites": [
    [
      "300094",
      "300565"
    ]
  ],
  "prerequisiteText": "300094 Computer Networking Fundamentals OR 300565 Computer Networking OR Computer Networking (Advanced) ",
  "category": "sec",
  "description": "This unit is concerned with the protection of information transferred over computer networks. It includes discussion of techniques for securing data transported over local and wide area networks. At the conclusion of the unit students will have a good understanding of the practical aspects of securing a computer network against internal and external attacks.",
  "assumedKnowledge": "Good understanding of the principles of information security, and computer networks and internets.",
  "approachToLearning": "To achieve the learning outcomes of this unit, students need to acquire knowledge of security threats, security protocols, and security protection techniques. The unit is delivered through a series of lectures, tutorials and practicals.\n\nLecture:\nLectures are designed to introduce students the required knowledge in the areas of network security, including security threats, security protocols, and security protection techniques. Lecture materials are supported by written tutorial exercises and hand-on practicals.\n\nTutorial and Practical:\nTutorials and practicals serve as a platform for the students to increase their understanding of the acquired knowledge through more in-depth discussions as well as some hand-on practical tasks. Real-time feedbacks will be given to the students on tutorial and practical exercises during the tutorial and practical sessions. ",
  "outcome": " Outcomes\n\n1. Identify security threats in LAN and WAN environments\n2. Identify current network security protocols and where they should be implemented\n3. Explain how popular operating systems handle secure communications\n4. Analyse and describe the security services provided by internetworking protocols\n5. Explain the purpose and basic configuration requirements of an internet firewall\n6. Describe the major components needed for secure electronic commerce\n7. Describe techniques for detecting and mitigating security threats to a networked system",
  "passCriteria": "To pass the unit, a student must attend the mid-session test and the \ffinal examination, and the \ffinal overall mark must be greater than or equal to 50%."
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d0f9"
  },
  "id": "300144",
  "name": "Object Oriented Analysis",
  "sfiaSkills": [
    {
      "id": "SWDN",
      "level": 2
    },
    {
      "id": "REQM",
      "level": 2
    },
    {
      "id": "PRMG",
      "level": 2
    },
    {
      "id": "DESN",
      "level": 2
    }
  ],
  "offer": [
    "au"
  ],
  "prerequisites": [
    "300585"
  ],
  "prerequisiteText": "300585 Systems Analysis and Design ",
  "category": "sys",
  "description": "The core strength of this unit is to analyse and model business objectives and critical requirements of software systems to be developed using object-oriented (OO) approaches. The system analysis is taken to greater depths within the context of Object Orientation. The Unified Modelling Language version 2.0 (notably use cases, user case diagrams, activity diagrams, class diagrams and sequence diagrams) is used as the modelling standard for creating OO models in the problem space. The unit also covers the rational unified process methodology and applications of design patterns for software development through practical case studies.",
  "assumedKnowledge": "General understanding of what an information system is and how information systems development is undertaken and\n•\tIntroductory knowledge about system analysis and design, including \n- basic problem solving experience in computerised information systems\n- ability to derive systems requirements from problem definitions\n- ability to produce system models using process, data, object and network modelling.\n- understanding design and implementation issues include, (but may not be limited to), elementary database design, input, output and user interface design and prototyping.\n•\tGeneral knowledge on programming languages\n- Understanding difference between procedure programming  and object oriented programming   \n- Introductory knowledge of classes and objects and the class construction\n- Introductory knowledge on object orientation, including encapsulation, inheritance\n",
  "approachToLearning": "This unit is a 10 credit point unit (so need averagely 10-hour studying time per week)  and will require your full and continuous attention to maintain the highest possible grades. Some weeks you will spend more time on learning activities and assessments and in other weeks the workload will be somewhat less. We will provide lecture notes, tutorials and reading materials to support the unit content so that you can practice further in your own time.\n\nAttendance at the tutorials/practicals (face-to-face activities) is compulsory. The participation  mark for each tutorial/practical class can only be achieved through attending the session.  Before each class you need read carefully the question sheet and start to work on some of them as the two hour tutorial time is usually not enough for completing all the exercises. Attendance at the lectures (face-to-face activities) is highly desirable as it will reflect students' participation, performance and understanding. You should go through the lecture notes before attending the class\n\nStudents should access vUWS and check their student email accounts at least  three times per week for announcements,  teaching materials, recommended readings, documents and other  relevant information.",
  "outcome": " Outcomes\n\n1. Explain the theoretical fundamentals underpinning Object Oriented Analysis\n2. Identify Unified Modelling Language (UML) of the Object Management Group (OMG) for analysing software requirements\n3. Outline an object oriented lifecycle and methodology and explain the process of object oriented analysis, especially within the context of iterative and incremental nature of the process\n4. Apply the iterative and adaptable process frame work of RUP in software development\n5. Construct well-documented UML-based artefacts from the early phases of the development process for the case study\n6. Construct the Model of the Problem Space based on the analysis in an industrial CASE tool\n7. Apply team work skills in a small development team, including: distributing the development workload, resolving disputes, running meetings, and taking minutes\n8. Identify and create operational (non-functional) requirements of a system including performance and security\n9. Develop a report based on verbal and written instructions about the performance of software development tasks and associated administrative duties\n10. Illustrate quality assurance, quality control and user-expectations via reports and theoretical explanation\n11. Explore possibilities of applying design patterns in software design",
  "passCriteria": "- Achieve at least 50% overall. \n- Attend all mandatory assessments including Intra-session Exam, Applied Project (students with very low participation are not allowed to attend the applied project), and Final Exam.\n"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d0fa"
  },
  "id": "300147",
  "name": "Object Oriented Programming",
  "sfiaSkills": [
    {
      "id": "PROG",
      "level": 3
    },
    {
      "id": "METL",
      "level": 2
    }
  ],
  "offer": [
    "sp"
  ],
  "prerequisites": [
    [
      "300580",
      "301335"
    ]
  ],
  "prerequisiteText": "300580 Programming Fundamentals OR 301335 Engineering Programming Fundamentals ",
  "category": "prg",
  "description": "This unit presents the concepts and principles of programming languages with the emphasis on object oriented paradigm. It addresses the importance of the separation of behaviour and implementation as well as effective use of encapsulation, inheritance and polymorphism. The students will gain intensive training in programming skills with supervised laboratory sessions and task oriented assignments.",
  "approachToLearning": "TEACHING ACTIVITIES:\n- Two hours lecture per week, 13 lectures in total.\n- Two-hour compulsory practical session per week, ten practical sessions and three online tutorials in total.\n\nTo achieve all the learning outcomes, the students are required to attend all teaching activities. Attendance of practical sessions and attempt of online tutorials are compulsory. Each practical session is two hours, sitting in a three hours time slot.  Students work on practical tasks will be checked face-to-face by the tutors during the practical sessions. No email submission is acceptable. There is no practical class in Week 1 but an online survey is due at the end of the first week. \n\nTIPS OF LEARNING:\n- Attend all lectures, which are where you learn the theory of object-oriented programming.\n- Pay particular attention to the example code your lecturer demonstrates during each lecture. Download the code and run it offline.\n- Prepare your answer of practical tasks before you attend practical class. It will save your time.  Practice is most important for learning programming languages.\n- Watch out for the deadlines of the three online tutorials. They are important practice for multiple choice questions in the final examination. You cannot access online tutorials after their deadlines.\n- Object-oriented may not be the most intuitive way of programming but once you get used to it, it might be the simplest and most efficient way of programming.",
  "outcome": "Upon successfully completing this unit, students will be able to:\n\n Outcomes\n\n1. Explain the principles of object oriented programming\n2. Explain the concepts of abstract data types, encapsulation and information hiding, class inheritance and polymorphism\n3. Write programs to demonstrate understanding of encapsulation, data hiding, compositions and basic data operations\n4. Write program in object oriented style to solve real-world problems using inheritance and polymorphism",
  "passCriteria": "achieve 50% overall marks, including marks of assignments, practicals, online tutorials and the final examination."
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d0fb"
  },
  "id": "300150",
  "name": "PC Workshop",
  "offer": [
    "au"
  ],
  "prerequisites": [],
  "prerequisiteText": "",
  "sfiaSkills": [
    {
      "id": "PORT",
      "level": 2
    },
    {
      "id": "HSIN",
      "level": 2
    },
    {
      "id": "NTAS",
      "level": 2
    }
  ],
  "category": "sup",
  "description": "This unit introduces the student to the hardware and software components of a stand-alone personal computer (PC). Students become familiar with the CPU,\nmemory, secondary storage, I/O peripherals and communications devices\ncommonly found in a PC. They learn to assemble and disassemble a PC, and to install hardware and software components according to supplier specifications.  Students also learn to use and customise the PC operating system to maintain and optimise PC performance.",
  "assumedKnowledge": "Basic knowledge of personal computers",
  "approachToLearning": "<p>This unit consists of 2 hours of lecture and 3 hours of supervised practical work exercises (also referred to as \"laboratories\", \"practicals\" or \"tutorials\"). It is expected that the students will spend some additional time studying the subject material, preparing for the laboratory, and completing the required laboratory tasks. On average students should dedicate 10 hours per week to this unit, including the lecture and the supervised laboratory class. All labs are on Penrith campus room Y115.\n</p>\n<p>\nThis unit enhances learning through the following means:</p>\n<p>a) Eight laboratory tasks, on-going, as described in each lab sheet, 8x5% 20%\n</p>\n<p>b) Two progressive laboratory assessments, weeks 5 and 10; 2 x 10% 30%\n</p>\n<p>c) One home assignment, due end week 10 20%\n</p>\n<p>d) Practical (nal) demonstration, week 14 40%\n</p>\n<p>\nUnit Content:\n</p>\n<p>a) PC architectures, CPU, Motherboard, bus, memory, disk systems, ports, monitor, video and sound cards, modems, pointers and joysticks.\n</p>\n<p>b) Basics of Windows operating system, le management, process management, device management, utility software.\n</p>\n<p>c) Technical specications, manuals and standards, connectivity, portability, performance, capacity.\n</p>\n<p>d) Hardware suppliers, vendors, ordering procedures.\n</p>\n<p>e) Device installation: Interrupts, DMA channels, IRQs, procedures, settings, switches, customisation, device conflict resolution.\n</p>\n<p>f) PC Performance measurement and optimisation.\n</p>\n<p>g) System les, Windows registry, RegEdit, version control.</p>\n<p>\nh) System recovery, rescue disks, backup and recovery procedures.\n</p>\n<p>i) System extension: batch les, scripts, macros</p>",
  "outcome": "This unit introduces the student to the hardware and software components of a stand-alone personal computer (PC). \n\nStudents become familiar with the CPU, memory, secondary storage, I/O peripherals and communications devices commonly found in a PC. \n\nThey learn to assemble and disassemble a PC, and to install hardware and software components according to supplier specifications. \n\nStudents also learn to use and customise the PC operating system to maintain and optimise PC performance.\n\n Outcomes\n\n1. Identify, locate, distinguish, and describe the individual hardware components of a PC and explain their purpose, functions and operations.\n2. Explain and discuss the interaction between computer hardware components and devices and systems software.\n3. List, explain and effectively use the major functions of a PC operating system to manage processes, programs, files, and devices.\n4. Determine user requirements for new hardware components, devices and peripherals.\n5. Explain technical specifications for PC hardware components, devices and peripherals and discuss these with suppliers and vendors.\n6. Install PC components, devices and peripherals in accordance with installation procedures and operational standards with minimum disruption to clients.\n7. Measure PC system performance and efficiency and tune and optimise components to meet operational requirements.\n8. Use and extend the functionality of the PC operating system to monitor and manage the effective and secure operation of the PC and its devices.",
  "passCriteria": "- Achievement of at least 50% overall is required to pass this unit.\n- The practical/nal demonstration mark must be greater or equal then 50%\n- Mandatory assessment items are: practical/final demonstration and lecture attendance"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d0fc"
  },
  "id": "300165",
  "name": "Systems Administration Programming",
  "sfiaSkills": [
    {
      "id": "PORT",
      "level": 3
    }
  ],
  "offer": [
    "au"
  ],
  "prerequisites": [
    "300167"
  ],
  "prerequisiteText": "300167 Systems Programming 1 ",
  "category": "sup",
  "description": "This unit covers programming techniques and tools used to administer standalone and networked computer systems. The unit focuses on the use of high level interpretive scripting languages to automate everyday administrative tasks, and to monitor and control running systems. Techniques to extend scripting language capabilities by dynamic linking to compiled code are examined, particularly in terms of access to operating system level functions. The unit also examines the use of administrative programs and tools to monitor and adjust system performance and capacity.",
  "assumedKnowledge": "Students should have a thorough grounding in systems programming and operating systems basics.",
  "approachToLearning": "This unit has been restructured towards a new delivery model, where the teaching activities consist of online lecturing and on-campus hands-on practice. This model builds upon the nature of university studies - being effective and independent learners. \n\nThere are NO traditional face-to-face lectures in this unit. Lectures are in on-line format and hence no attendance is required for this component; you undertake a self-study of the lecture modules that present the major topics of this unit. The lectures and text reading will examine the key topics of your learning environment related to systems administration.\n\nThe practical activities are designed to reinforce students’ understanding of theoretical concepts and that you will gain programming expertise in becoming a confident and competent systems administrator. The weekly on-campus practicals start from week 2; each session is in three hours: ten minutes for quiz, fifty minutes for tutorial and the rest of two hours for practical tasks. Students are required to attend tutorials.\n\nWe’ll continue to revise the Blended Learning approach (e.g. implementing adaptable techniques and settings) to satisfy the needs for student-centered learning.",
  "outcome": "This unit aims to help students build up the basic skills in scripting for Windows system administration, web server maintenance, and network setting. The unit focuses on the use of high level interpretive scripting languages to automate everyday administrative tasks, monitor and control running systems, as well as adjust system performance and capacity. Students will learn scripting techniques through working on a set of common administrative tasks, from simple logon to automated system management. This unit also provides students with more training in understanding programming principles for studying other computing-related subjects.\n\n Outcomes\n\n1. List and define the key types of system administration tasks that are suitable for full or partial automation programmatically\n2. Select the most appropriate programming implementation method for a required system administration task from the range: shell scripts, scripting languages, and low level compiled languages; and explain the reasons for the selection\n3. Write, test and document system administration programs in a scripting language for various administration tasks that are synchronised or asynchronised (serial, parallel, or event driven) in nature\n4. Write programs to automate tasks like user management, software management, backup & recovery, and system security for both local (centralised) and distributed systems\n5. Extend the capabilities of a high level scripting language\n6. Explain the fundamental principles of performance and capacity planning in regards to systems administration\n7. Write programs to collect performance and capacity data for performance and capacity planning purposes. Explain the meaning and significance of the data collected, recommend system administration actions based on this interpretation, and write programs to implement the recommended actions\n8. Deliver tested and documented programs with significant complexity within specified project deadlines and in a form that meets IT professional standards",
  "passCriteria": "<p><br></p>\n<p>- Achievement of at least 50% overall is required to pass this unit. \n- At least half of the quizzes must be attempted. \n\nNo mandatory pass assessment components.</p>"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d0fd"
  },
  "id": "300166",
  "name": "Systems and Network Management",
  "sfiaSkills": [
    {
      "id": "NTDS",
      "level": 3
    },
    {
      "id": "NTAS",
      "level": 3
    }
  ],
  "offer": [
    "sp"
  ],
  "prerequisites": [
    [
      "300095",
      "300952"
    ]
  ],
  "prerequisiteText": "300095 Computer Networks and Internets OR 300952 Wireless and Mobile Networks ",
  "category": "sup",
  "description": "With the advent of the era of Internet of Things, the Internet has become a huge infrastructure in which various kinds of systems are running to deliver a plethora of network services. To ensure the efficient utilization of network resources (e.g., bandwidth) and the convenient access to network services, systems and networks must be managed in a proper way. Facing this demand, this unit covers the standards, protocols and skills pertinent to the management of systems and networks. Moreover, this unit introduces Software Defined Networking (SDN), a new paradigm for conducting network management with programmability, flexibility and scalability.",
  "assumedKnowledge": "Students should be familiar with the fundamentals of computer networking and data communications. In particular, they should have a good understanding of the TCP/IP protocol suite, the OSI model, and current networking and internetworking technologies.",
  "approachToLearning": "This unit includes weekly lectures, practical classes and online activities on vUWS. The recommended approaches to these activities are given below. \n\nLectures: Lectures are designed to explain and demonstrate knowledge and skills related to system and network management. All knowledge and skills needed in tutorial questions and labs will be covered by lectures. Students are strongly encouraged to attend lectures.\n\nPractical classes: Each 2-hour practical class consists of roughly 0.5-hour tutorial discussion and 1.5-hour lab work. In the tutorial discussion, the tutor will discuss the online quiz questions with you. In the 1.5-hour lab work, you should complete practical exercises according to the lab instructions posted on vUWS. You can get help from tutors during lab work.\n      You should show your lab report to your tutor before the end of the lab. If you cannot finish within the lab, the only chance to be marked is in the next lab class; however, you will receive 50% late penalty for this if no extenuating circumstances are present. To prevent losing marks due to late completion, you should start working on labs before you enter lab classes.\n\nvUWS: Unit materials, including lecture slides, online quizzes and lab instructions, will be made available on the unit vUWS site. Also, all unit announcements will be made via vUWS. Therefore, you are expected to consult vUWS at least three times a week.",
  "outcome": "This unit has the following learning outcomes.\n\n Outcomes\n\n1. Describe the basic components involved in network and system management\n2. Apply the network management architecture to an existing network\n3. Interpret data represented by the languages of ASN.1 or SMI\n4. Describe how an MIB is organised\n5. Explain how SNMPv1, SNMPv2 and SNMPv3 work, and apply them to manage a network\n6. Explain how RMON1 and RMON2 work, apply them to manage a network\n7. Configure Web servers, Email servers, DNS servers and DHCP servers\n8. Apply Software Defined Networking in campus networks and data centre networks",
  "passCriteria": "1. Achieve at least 50% of final mark.\n2. Submit the unit project, which is a Fail Non-Submission (FNS) item.\n3. Attend the final exam, which is a Fail Non-Submission (FNS) item."
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d0fe"
  },
  "id": "300167",
  "name": "Systems Programming 1",
  "sfiaSkills": [
    {
      "id": "PROG",
      "level": 3
    },
    {
      "id": "TEST",
      "level": 2
    }
  ],
  "offer": [
    "au"
  ],
  "prerequisites": [
    [
      "300581",
      "300582",
      "300147",
      "300027"
    ],
    "300018"
  ],
  "prerequisiteText": "300581 Programming Techniques OR 300903 Programming Techniques (Advanced) OR 300582 Technologies for Web Applications OR 300147 Object Oriented Programming OR 300027 Engineering Computing AND 300018 Digital Systems 1 ",
  "category": "prg",
  "description": "This unit provides an introduction to the knowledge and skills required for the design, writing and support of technical software and other such functions normally falling within the role of the systems programmer. It provides for detailed study of a systems programming environment and its application to systems programming tasks.",
  "assumedKnowledge": "This unit requires a knowledge base of at least the level of a completed first year in a professional Computing degree.   Ability to apply fundamental concepts in data structures, algorithms, programming principles will be assumed",
  "approachToLearning": "<p>• Two hours lecture per week</p>\n<p>• Two hours tutorial and lab practicals per week </p>\n<p>\n\nPractical sessions will be scheduled for 12 weeks of the semester beginning in the 2nd week; less any class times falling on public holidays. \n\nThe Lectures present and explore the theory and practice of systems programming techniques. Tutorial and lab practicals enable students to investigate, practice and implement the programming techniques presented in the lecture.</p>",
  "outcome": "Upon successfully completing this unit, students will be able to:\n\n Outcomes\n\n1. Exhibit facility with the predominant systems programming language - C.\n2. Demonstrate their understanding of the interface to the operating system by applying this knowledge to write and explain programs making system calls.\n3. Discuss the nature of a systems program and put into practice the canons of good programming style and of sound software engineering in designing and writing short system utilities.\n4. Analyse and maintain longer and more complex programs.\n5. Demonstrate further development and reinforcement of their grasp on abstract concepts of data and programming structures by being able to explain how these ideas are realized in a specific programming language and environment.\n6. Identify the Central role of concurrency in systems programming\n7. Be able to solve relatively simple problems requiring concurrency.",
  "passCriteria": "<p> – Satisfactorily complete ALL assessment items;\n</p>\n<p> – Receive a minimum of 50% overall;\n</p>\n<p> – Receive a minimum of 40% in the final exam\n</p>\n<p>\nIn order to qualify for a passing grade in the unit a student must satisfy the School that they have appropriately completed all assessment items of the unit. Satisfactory completion of an assessment item includes a full attempt at the work designated and the demonstration of an appropriate level of knowledge of the assessment content. Failure to do so will result in a 'Fail' grade, regardless of the total mark achieved in the unit by the student.</p>"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d0ff"
  },
  "id": "300404",
  "name": "Formal Software Engineering",
  "sfiaSkills": [
    {
      "id": "PROG",
      "level": 2
    },
    {
      "id": "SWDN",
      "level": 3
    },
    {
      "id": "METL",
      "level": 4
    }
  ],
  "offer": [
    "sp"
  ],
  "prerequisites": [
    "200025",
    "300103"
  ],
  "prerequisiteText": "200025 Discrete Mathematics AND 300103 Data Structures and Algorithms ",
  "category": "prg",
  "description": "This unit is concerned with the design, development and  maintenance of computer software systems. The unit focuses on current formal specification and system verification technologies and methodologies. Foundations of model checking such as LTL and CTL, as well as a particular practical model checker SPIN will be thoroughly studied in this unit. The SPIN model checker with programming language PROMELA will be used for all software development and verification practices throughout this unit.",
  "approachToLearning": "Lecture: The lectures present and explore the theoretical aspects of this unit, and allow for discussions of relevant theories, algorithms and problem solving tasks.\n\nTutorial: The tutorial sessions allow students to review and absorb the knowledge they study in lectures, and to communicate directly with the lecturer and other students for enhancing their learning.\n\nPractical: The practical sessions allow students to undertake programming exercises related to the theories studied in lectures, and to receive the lecturer mentoring along with feedback on their progress.",
  "outcome": "This unit is concerned with the design, development and maintenance of computer software systems. The unit focuses on current formal specification and system verification technologies and methodologies. Foundations of model checking such as LTL and CTL, as well as a particular practical model checker SPIN will be thoroughly studied in this unit. The SPIN model checker with programming language PROMELA will be used for all software development and verification practices throughout this unit.\n\n Outcomes\n\n1. Describe the general concepts and principles of formal methods for software development and verification\n2. Model concurrent systems using the concepts and formal notions of transition systems and program graphs\n3. Apply Linear Temporal Logic (LTL) and Computation Tree Logic (CTL) to specify the required properties\n4. Perform model checking using SPIN model checker\n5. Formulate PROMELA programs and using SPIN to specify and check the correctness of given software systems and programs\n6. Apply the advanced verification tools to undertake essential formal specification and verification tasks",
  "passCriteria": "achieve 50% of overall assessment tasks (i.e. 50 marks), and 50% of the two unit tests (i.e. 10 marks for each of these tests)."
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d100"
  },
  "id": "300491",
  "name": "Games Technology",
  "sfiaSkills": [
    {
      "id": "METL",
      "level": 3
    }
  ],
  "offer": [
    "au"
  ],
  "prerequisites": [],
  "prerequisiteText": "",
  "category": "mult",
  "description": "This unit provides an introduction to the game industry as well as introducing students to the techniques of game design and construction. Students will be exposed to the history of game development and the key aspects of different genres of computer games.",
  "approachToLearning": "<p>In general the credit point value of a unit determines the number of hours per week you need to spend on a unit in order to pass the unit. The weekly face-to-face components of this unit total four (4) hours, a two (2) hour lecture and a two (2) hour tutorial per week. This means that, provided you work effciently in the face-to-face teaching/learning time, you will need to spend a minimum of an additional six (6) hours per week working on the material for this unit, including reading the textbook chapters, reviewing the weekly lecture materials, and studying for the final exam.\n</p><p>\nIn this unit you will be engaged in a range of activities to support your learning. There are a range of resources available to assist you in this unit and university study more generally. The key activities and resources for this unit are outlined in section 3 of this learning guide.\n\n</p><p>Lectures: - Lectures are a key element of your learning environment for this unit. The lectures will focus on familiarizing you with the theoretical concepts of the unit content. Whilst attendance in lectures is not compulsory, it is highly recommended. All content covered in lectures is examinable. Each lecture will set the context for that weeks tutorial and will highlight concepts you will need for the final examination.\n</p><p>\nTutorials: - The tutorials are designed to give you the opportunity to further discuss the theoretical aspects of the unit. The tutorial activities include:\n</p><p>- Learning content exercises;\n</p><p>- Small group and whole class discussions;\n</p><p>- Web research and online activities and;\n</p><p>- Q&amp;A sessions.</p><p>Attendance in the tutorials is mandatory. Along with your lectures, tutorials are designed to help you develop theoretical knowledge and research skills.\n\nvUWS (e-learning): - To support your learning in this unit, you will have access to the units site on the Universitys e-learning system, vUWS. The unit vUWS site is the place where you can find all relevant information related to this unit. You will find a weekly schedule, staff contact details, details of assessments, notes and announcements. vUWS will be used as the main communication channel between the unit coordinator and students, and should be checked for updates at least twice a week. Login to vUWS at: https://vuws.westernsydney.edu.au/webapps/login/</p>",
  "outcome": "This unit provides an introduction to the game industry by introducing students to the techniques of game design and construction. Students will discover the history of computer games, their development and the key aspects of different computer game genres. \n\n Outcomes\n\n1. Describe the role of games in individual psychological and social development\n2. Identify the role of games in society\n3. Analyse the basic concepts of game design\n4. List the elements of computer game software\n5. Classify the basic concepts of the software development process\n6. Summarise the history of computer games and the various game genres\n7. Discuss the structure of the computer game industry\n8. Demonstrate the preparation and presentation of game design documents",
  "passCriteria": "A) Obtain a minimum combined overall mark of 50%.\n<br><br>B) Make a satisfactory attempt at the continuous assessment tasks (Case Study Report, Game Design Document &amp; Tutorial exercises).\n<br><br>C) Attain at least 50% in the final examination.\n<br><br>NOTE: Results may be moderated before you receive your results. Moderation is a process whereby the unit coordinator regulates the marking of individual markers to achieve consistency in the application of unit objectives, performance standards and marking criteria. Marks for an individual piece of assessment will not be changed after you have your results. You should note that, consistent with the Assessment Policy - Criteria and Standards-Based Assessment (http://policies.uws.edu.au/view.current.php?id=00227), the final marks for the cohort may also be adjusted if marks are very high or low or there are inconsistencies between groups.\n<br><br>"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d101"
  },
  "id": "300565",
  "name": "Computer Networking",
  "sfiaSkills": [
    {
      "id": "NTAS",
      "level": 1
    },
    {
      "id": "NTDS",
      "level": 1
    }
  ],
  "offer": [
    "sp"
  ],
  "prerequisites": [],
  "prerequisiteText": "",
  "category": "net",
  "description": "Computer Networking is an introductory unit in computer systems networking. It covers basic networking technologies, Ethernet fundamentals, ISO OSI model, routing, switching and subnetting, the Internet architecture, networking protocols including TCP/IP, important OSI layer 2 and 3 networking device fundamentals, basic network management and security issues. This unit is also the first of three units, which will prepare students for industry based networking certification (CCNA).",
  "assumedKnowledge": "Fundamentals of computer architecture, binary and hexadecimal numbering systems, and programming principles. Students should also have a working knowledge of the World Wide Web.",
  "approachToLearning": "Lecture\nLectures are a key element of your learning environment for this unit. The lectures will focus on familiarising you with the key theoretical concepts in the online material and textbook. To get the most out of your lectures you should read the required material listed in the weekly schedule prior to the weeks lecture. The lectures will also set the context for that weeks practical lab workshop and will highlight concepts and skills you will need for the formal final examination. Whilst attendance in lectures is not compulsory, it is highly recommended.\n\nWorkshop\nPractical lab workshops\nThe practical lab workshops are designed to give you the opportunity to discuss the theoretical aspects of the unit and obtain real-life hands on experience building network topologies and configuring the associated networking equipment. The practical lab workshop activities include:\n\n*Theory work, lab exercises and activities;\n*Small group and whole class discussions;\n*Web research and online activities and;\n*Design activities and Q&A sessions.\n\nAttendance in the practical lab workshops is mandatory. Practical lab workshops are designed to help you develop the practical skills that will form the basis upon which you will be assessed in the skills based practical test.\n\nvUWS\ne-Learning: vUWS & Cisco NetAcad\nTo support your learning in this unit, you will have access to the units site on the universitys e- learning system, called Virtual UWS (vUWS: pronounced views). The units vUWS site is the\nplace where you can find all relevant information related to this unit. You will find a weekly schedule, staff contact details, details of assessments, notes and announcements. You also will\nfind a link to the online Cisco NetAcad curriculum material for each module, which includes detailed notes, practical lab workshop exercises and a link to the Cisco NetAcad assessment server where you will find the online quizzes.\n\nvUWS will be used as the main communication channel between the unit coordinator and students, and should be checked for updates at least twice a week. To access vUWS, go to: https://vuws.westernsydney.edu.au, you will require a current WSU account to login to vUWS. Once logged in, you will see links to all the units you are currently enrolled in that use vUWS. Clicking on the 300565 Computer Networking link will take you to the site for this unit.",
  "outcome": " Outcomes\n\n1. Examine the fundamental concepts and protocols for computer networking and internetworking\n2. Investigate and analyse the Internet architecture\n3. Analyse the significance of the OSI and TCP/IP models, protocol stacks and their operation in computer networks\n4. Evaluate modern technologies in computer networking\n5. Investigate the functions of important OSI layer 2 and OSI layer 3 networking devices\n6. Assess the management practices and security requirements of computer networks\n7. Construct, test and troubleshoot a small LAN\n8. Subnet a small business network given design criteria",
  "passCriteria": "Attempt all assessment items AND achieve a passing mark of 50% in the Intra-session Exam (Online Quiz) AND attain a total unit mark of 50 or greater. \nStudents not meeting this minimum mark may have demonstrated good practical skills but would not have demonstrated the required conceptual and theoretical understanding required of someone studying at a university level."
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d102"
  },
  "id": "300566",
  "name": "Introduction to Health Informatics",
  "sfiaSkills": [
    {
      "id": "DTAN",
      "level": 2
    },
    {
      "id": "INAN",
      "level": 1
    },
    {
      "id": "SCTY",
      "level": 1
    },
    {
      "id": "QUST",
      "level": 1
    },
    {
      "id": "BSMO",
      "level": 1
    }
  ],
  "offer": [
    "sp",
    "au"
  ],
  "prerequisites": [],
  "prerequisiteText": "",
  "category": "health",
  "description": "This introductory unit aims to give the student an insight into the key knowledge and skill set required in the emerging domain of Health Informatics. Critical topics include: The Australian healthcare system, health care improvement modelling, health information systems and management, paper-based v's electronic health records, clinical documentation and data quality, health information management, consumer information security, privacy and ethics, decision support and clinical delivery support systems, healthcare data representation and interchange standards, telehealth and Information Communication technologies (ICT). \nThis will be complemented by practical exercises and assessment support sessions. Through these experiences students will gain an understanding of the application of ICT to the healthcare domain and the skills necessary to play a pivotal role in the design and delivery of healthcare systems and health information management.",
  "assumedKnowledge": "Familiarity with use of common business software, eg word proceesing, spreadsheets, database.",
  "approachToLearning": "In this unit, you will be engaged in a range of activities to support your learning. There are many resources available to assist you in this unit and university study more generally. The key activities and resources for this unit are outlined below. Learning materials for all the units will be accessible to enrolled students by login to the WSU online learning site ‘vUWS'. Copies of the lecture slides and audio/video recordings of the lectures will also be posted there, normally within 24 hrs of the lecture. Announcements and discussions on the units will also be placed on the vUWS site from time to time, and you should consult the site often so that you are aware of these. Failure to stay up-to-date with information on vUWS will not be accepted as an excuse.\n\nInteraction with the unit coordinator at their scheduled consultation times each week is possible for online mode students in person or by e-mail, telephone contact, or skype (by arrangement). \n\nOnline Students\nAll information and material relating to this unit will be available on vUWS. This unit will be run simultaneously in on-campus classroom delivery mode (internal students) and online. This means that the same learning materials will be made available to all sub-groups of students at the same time. Also, any within-semester continuous assessment work tasks will be identical and due for submission at the same time and by the same method, for all sub-groups.\n\nOnline mode students will be required to take any final exam scheduled in a unit at the same time as the on-campus mode students. Arrangements for online mode students to write final exams in these units will be announced close to the end of the semester after the official exam schedule becomes available.\n\nPlease feel free to contact the unit coordinator at any time, should you be experiencing difficulties or have any queries or comments about any unit: we would like to offer you any extra support necessary as an external/online mode student.",
  "outcome": "Upon completion of this unit, students will be able to:\n\n Outcomes\n\n1. Describe the fundamental aspects of the Australian healthcare system and the application of ICT to healthcare\n2. Describe the different standards for health data representation and interchange\n3. Apply technical skills in healthcare data modelling\n4. Explain the current status of health record data capture and storage (paper v's electronic) and the importance of data quality and clinical documentation to patient safety and quality\n5. Describe the impact of electronic health records on health informatics and healthcare delivery\n6. Summarise the different types of patient administration and health information systems available within various healthcare settings including Hospital, primary care and community/allied health\n7. Describe consumer issues and professional governance matters applicable in the Health Informatics domain including data security and privacy\n8. Identify opportunities for the use of Telehealth/Telemedicine\n9. Describe the domain of health information management, and the foundational concepts associated with disease classification and terminologies\n10. Describe the issues associated with indigenous cultural safety relating to health system designs, functionality and use",
  "passCriteria": "-\tAchieve a mark of at least 50% overall;\n-\tComplete and submit all the assessment activities; (Failure to submit all components without approval from the unit coordinator may result in a Fail Non Submission (FNS) grade).\n-\tMake equal contributions to the Group Assignment; (Failure to contribute equally to the group assignment may result in a Fail Non Submission (FNS) grade). Please see additional notes in relation to this matter in the individual assignment description below.\n"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d103"
  },
  "id": "300569",
  "name": "Computer Security",
  "sfiaSkills": [
    {
      "id": "METL",
      "level": 2
    },
    {
      "id": "NTAS",
      "level": 2
    },
    {
      "id": "DGFS",
      "level": 2
    }
  ],
  "offer": [
    "sp"
  ],
  "prerequisites": [],
  "prerequisiteText": "",
  "category": "sec",
  "description": "This unit aims in particular at, but is not limited to, the implementation and management of security and privacy policies of organisations within the standards and legal framework that is also applicable to the Australian standards.",
  "assumedKnowledge": "Students are expected to have general understanding on computer systems; computer fundamentals, databases, and web technologies.",
  "approachToLearning": "Lectures and labs are designed to scaffold student learning and assist students to complete their assessment tasks. Students should endeavour to attend all lectures and labs. In labs, you will be able to select whether you want to focus on research and governance, or on the technical aspect of the cyber security. Technical labs will deliver recipes on hacking network systems, databases and accounts. Research stream focuses on deep understanding of security governance, law and ethics.",
  "outcome": "This is a second year core unit in the course of Bachelor of Information Systems and Bachelor of Information Systems Advanced.  It is also a core unit for the Information Security major in the course of Bachelor of Information and Communications Technology, and the Systems Security major in the course of Bachelor of Computer Science. \n\nThis unit is responsible for developing skills and knowledge in major aspects of computer security, such as information security, program security, database security, and network security, and introducing students to the techniques essential for a security engineer/analyst in industry. \n\n Outcomes\n\n1. Explain fundamental theories related to computer security, and apply them to computer systems and organisations\n2. Describe the modern authentication, authorisation and access control mechanisms used in computer systems; and look at a few methods of access operations and ownership issues\n3. Explain basic concepts in encryption and cryptography and describe application of various cryptographic techniques and algorithms in accomplishing security\n4. Examine security issues within various hardware systems, operating systems and application software and present the general causes that lead to system security failures\n5. Analyse the security issues specific to databases, and understand how to protect sensitive information and statistical systems within an organisation\n6. Identify security threats and risks associated with web and related technologies; and the capacity to make corrective and preventative measures against these threats and risks in organisations\n7. Describe the relevant standards and the legal framework related to security and privacy; and implement security and privacy policies in organisations",
  "passCriteria": "There are 4 assessment items in this unit, designed to enable you to demonstrate that you have achieved the unit learning outcomes. Completion and submission of all assessment items which have been designated as mandatory or compulsory is essential to receive a passing grade. \n\nTo pass this unit you must:\n1. Complete all four assessment tasks below\n2. Achieve at least 50% overall. "
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d104"
  },
  "id": "300570",
  "name": "Human-Computer Interaction",
  "sfiaSkills": [
    {
      "id": "HCEV",
      "level": 3
    },
    {
      "id": "RSCH",
      "level": 2
    },
    {
      "id": "USEV",
      "level": 3
    },
    {
      "id": "SWDN",
      "level": 2
    },
    {
      "id": "UNAN",
      "level": 3
    }
  ],
  "offer": [
    "au",
    "sua"
  ],
  "prerequisites": [],
  "prerequisiteText": "",
  "category": "sys",
  "description": "A key component to the discipline of Information Systems is the understanding and the advocacy of the user in the development of IT applications and systems. IT graduates must develop a mind set that recognises the importance of users and organisational contexts. They must employ user centered methodologies in the development, evaluation, and deployment of IT applications and systems. This unit examines human-computer interaction in order to develop and evaluate software, websites and information systems that not only look professional but are usable, functional and accessible.",
  "approachToLearning": "This unit supports the followings three learning activities:\n<br> 1- Lecture: Both face to face and online lectures and the reading materials will revolve around the theoretical and research aspects of Human-Computer Interaction. State of the art and advanced concepts will be dealt with in the lectures.\n<br> 2- Practicals: The practicals during the semester are scheduled on a weekly basis (students are encouraged to attend all practicals). The practicals will build on the knowledge learned in the lectures as well as devoting effort to the project development in close consultation with the tutor.\n<br> 3- vUWS: Various supplementary materials will be provided on vUWS including reading material, video snippets, assessment templates, exemplars, FAQ’s, etc. All these materials will be made available in a learning planner module.\n",
  "outcome": " Outcomes\n\n1. Apply cognitive models to the design of application user interfaces.\n2. Indicate ways in which users' characteristics (i.e., age, education, cultural differences, disability etc.) require adaptation of a user interface to increase effectiveness.\n3. Integrate appropriate user-centred design methodologies into the development of an application or website and recognise advantages and disadvantages of doing so.\n4. Describe major usability guidelines and standards, for e.g. ISO or Nielsen.\n5. Develop both low-fidelity and high-fidelity prototypes and produce user interfaces for domain specific applications.\n6. Create an appropriate user evaluation plan with carefully chosen subjective and objective measures.\n7. Discuss state of the art research issues and novel interaction technologies under the umbrella of HCI.",
  "passCriteria": "-Receive 50% or more on the marked tutorial activities (in class component)\n<br>-Receive 50% or more on the marked tutorial activities (homework component)\n<br>-Receive 50% or more in Assessment 3B.\n<br>-Receive 50% or more in Assessment 3C.\n<br>-Submit HCI Project (Components). The HCI Project (Components) consists of three assessments (3A, 3B, and 3C) <br> -And lastly by default an overall 50% mark in the unit. "
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d105"
  },
  "id": "300572",
  "name": "Information Systems Deployment and Management",
  "sfiaSkills": [
    {
      "id": "SINT",
      "level": 3
    },
    {
      "id": "SYSP",
      "level": 2
    },
    {
      "id": "PRMG",
      "level": 2
    }
  ],
  "offer": [
    "sp"
  ],
  "prerequisites": [
    "300580",
    "300585"
  ],
  "prerequisiteText": "300580 Programming Fundamentals AND 300585 Systems Analysis and Design ",
  "category": "ops",
  "description": "This unit provides a detailed overview of system implementation and deployment stages taking into consideration the steps that are necessary to place a newly developed system into production. In this unit students learn the skills required for accurate requirements gathering, timely and effective system development, and successful implementation that would result in effective system performance. For this to be achieved successfully this unit also addresses the importance of project management skills. The unit also highlights the issues of transition processes after the development phase, the activities required in systems support and maintenance in the system's operational stage.",
  "assumedKnowledge": "A general understanding of various Information Systems in the eBusiness environment - familiarity with information system development processes\n",
  "approachToLearning": "Each week, unless stated otherwise in the Learning Guide or the vUWS announcements, there will be two hour session allocated to class activities. Please check schedule regularly. Please note that you are also required to spend time outside the scheduled class time studying. This should include revisions, readings, assignment work, group meetings and preparations for the assessments. \nFurthermore, you are expected to check vUWS at least twice a week as all unit announcements will be made via vUWS. ",
  "outcome": "On successful completion of this unit, students should be able to:\n\n Outcomes\n\n1. Describe how system deployment fits within the system development life cycle\n2. Explain System implementation stages and action performed at each stage\n3. Assess the organisation and system deployment audience\n4. Make a plan for system deployment reflecting organisational culture\n5. Explain deployment strategies and know how to select the one that will suite the problem\n6. Evaluate if a newly developed system can be placed into production\n7. Apply project management skills and keep updated deployment and transition schedules\n8. Describe what needs to be taken into the consideration so that system users and customers get required training and documentation\n9. Describe and identify stages of system deployment and management\n10. Assess possible risks and develop backup plans and strategies\n11. Explain transitioning phase\n12. Analyse the change management requirements for implementing and managing successful system\n13. Critically analyse and assess proposed solutions and identify possible improvements",
  "passCriteria": "To pass this unit you will need to attempt all assessments and achieve at least 50% overall. "
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d106"
  },
  "id": "300573",
  "name": "Information Systems in Context",
  "sfiaSkills": [
    {
      "id": "RSCH",
      "level": 2
    },
    {
      "id": "DESN",
      "level": 3
    },
    {
      "id": "IRMG",
      "level": 3
    },
    {
      "id": "INCA",
      "level": 2
    }
  ],
  "offer": [
    "sp",
    "au"
  ],
  "prerequisites": [],
  "prerequisiteText": "",
  "category": "sys",
  "description": "This unit aims to give students the ability to recognise and explain business information systems with regard to type, function, purpose, and the frameworks within which these systems are used. Topics in this unit include computing fundamentals; computer hardware and software; computers and society; use of business application packages - spreadsheets, word processing, database, graphics; organisational information systems; information systems development and acquisition; data and knowledge management; electronic commerce, internets, extranets; networking; enterprise-wide information systems; the internet and information systems security; privacy, ethics and computer crime.",
  "assumedKnowledge": "2 Unit Mathematics and 2 Unit English (General)",
  "approachToLearning": "This unit will require both face to face participation as well as the ability to utilise electronic resources. This unit furthermore, requires you to have the access to Pearson online labs. The labs will support your learning, provide instantaneous feedback and assure you gain required skills by completing the set activities. \n\nFurthermore, lab activities will support your learning and understanding of the material covered in classes. In addition, you are expected to prepare for the exam by completing the set tutorial and practice activities. ",
  "outcome": "This unit aims to give students the ability to recognise and identify business information systems with regard to type, function, and purpose, and the frameworks within which these systems are used.  Topics in this unit include computing fundamentals; computer hardware and software; computers and society; use of business application packages – spreadsheets,  word processing, database, graphics; organisational information systems;  information systems development and acquisition; data and knowledge management; electronic commerce, intranets, extranets;  networking; enterprise-wide information systems; the internet and information systems security; privacy, ethics and computer crime.\n\n Outcomes\n\n1. Identify and explain an information system with regards to its type, functionality, role and impact\n2. Recognise and explain the role of management, information system professionals and end users when developing and implementing information systems in a business environment\n3. Discuss the implications of contemporary issues effecting business information systems\n4. Identify and explain the structure and business uses of data, information and knowledge banks\n5. Apply the knowledge of common business application packages to present information at a professional level\n6. Summarise, analyse and present data collected through research",
  "passCriteria": "Gain a total mark of 50 or above and complete and submit all mandatory activities:\n \n1. Complete Portfolio activities (1, 2, 3) \n2. Complete Final Exam"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d107"
  },
  "id": "300575",
  "name": "Networked Systems Design",
  "sfiaSkills": [
    {
      "id": "NTDS",
      "level": 4
    },
    {
      "id": "NTAS",
      "level": 3
    }
  ],
  "offer": [
    "au"
  ],
  "prerequisites": [
    "300095"
  ],
  "prerequisiteText": "300095 Computer Networks and Internets ",
  "category": "sys",
  "description": "This unit builds on and consolidates the skills and knowledge gained in Computer Networking and Computer Networks and Internets. Students successfully completing this unit will acquire the necessary design skills and knowledge required to build and configure enterprise scale networks. The unit provides students with an opportunity to develop problem-solving techniques and decision-making skills to resolve networking issues. Students completing this unit and its prerequisites should also now be prepared to attempt world recognized network industry certification (CCNA).",
  "approachToLearning": "This unit consists of a 1-hour lecture and a 3-hour supervised practical lab workshop session per week.\n\nIt is also expected  that  you will need to  spend a  minimum of an  additional  six (6)  hours per week outside  the  for- mal classes studying the unit material, doing the weekly online quizzes and preparing for the labs in order to be successful in the unit.\n\nBlended Learning: vUWS & Cisco Networking Academy\nTo support  your learning in this unit,  you will have access to the units site on the universitys e-learning system, called Virtual UWS (vUWS: pronounced views). The units vUWS site is the place where you can find all relevant information related to this unit.  You will find a weekly schedule, staff contact details, details of assessments, notes and announcements. You also will find a link to the online Cisco Academy curriculum material for each module, which includes detailed notes, lab workshop practical exercises and a link to Cisco Academy assessment server where you will find the online quizzes. vUWS will be used as the main communication channel between the unit coordinator and students,  and should be checked for updates at least twice a week.\n\nTo  access vUWS, go to:   http://vuws.westernsydney.edu.au,  you will require a  current  MyUWS account  to  login to vUWS. Once logged in, you will see links to all the units you are currently enrolled in that  use vUWS. Clicking on the 300575 Networked Systems Design link will take you to the site for this unit.\n\n <latex>\\begin{tabular}{|m{0.15\\textwidth}|m{0.8\\textwidth}|}\n\\hline \n\\rowcolor{lightgray}\\textbf{Type}&\n\\textbf{Approach}\\\\\\hline\nLecture&\nLectures are a key element of your learning environment for this unit. The lectures will focus on familiarising you with the theoretical concepts of the unit content. Whilst attendance in lectures is not compulsory, it is highly recommended. All content covered in lectures is examinable. Each lecture will set the context for that weeks practical lab workshop and will highlight concepts and skills you will need for the formal final examination.\\\\\\hline\nWorkshop&\nThe practical lab workshops are designed to give you the opportunity to further discuss the theoretical aspects of the unit and obtain real-life hands on experience building network topologies and configuring the associated networking equipment. The practical lab workshop activities include:\n\\begin{itemize}\n\\item Practical lab exercises and activities;\n\\item Small group and whole class discussions;\n\\item Web research and on-line activities and;\n\\item Design activities and Q\\&A sessions.\n\\end{itemize}\nAlong with your lectures, lab workshops are designed to help you develop the theoretical knowledge and practical skills that will form the basis upon which you will be assessed in the final skills based practical tests. \\par \\newline\n\\newline \nWhilst attendance in the practical lab workshops is not compulsory only the practical exercises for which the student is present will be marked.\\\\\\hline\n\\end{tabular}</latex>",
  "outcome": "This unit along with its prerequisites provides you with the minimum skills and knowledge required to design and build enterprise scale networks to industry recognised standards.   When you successfully complete this unit you will also be suitably prepared to gain world recognised network industry certification (CCNA) therefore making you readily employable.\n\n Outcomes\n\n1. Design the physical layout of the network and produce a specification diagram\n2. Provide detailed network documentation in the appropriate format\n3. Design an Internet Protocol (IP) subnetting scheme using Variable Length Subnet Mask (VLSM) & Classless Inter-Domain Routing (CIDR)\n4. Design and propose appropriate router and switch configurations\n5. Verify and troubleshoot various types of network connections\n6. Provide a written final report/network design proposal to a professional standard\n7. Correctly configure a Wireless Local Area Network (WLAN)\n8. Correctly configure single-area Open Shortest Path First (OSPF) protocol\n9. Correctly configure Virtual Local Area Networks (VLANs) and 802.1q trunking\n10. Correctly configure Frame Relay\n11. Correctly configure Dynamic Host Configuration Protocol (DHCP)\n12. Correctly configure Network Address Translation (NAT)\n13. Create and apply Access Control Lists (ACLs)\n14. Create a Hierarchical Network Design",
  "passCriteria": "- Attain a mark of at least 10/20 for the Online Test AND\n- Attain a mark of at least 25/50 for the Network Design Assignment AND\n- Attain at total mark of at least 50/100.\n\n"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d108"
  },
  "id": "300578",
  "name": "Professional Development",
  "sfiaSkills": [
    {
      "id": "PRMG",
      "level": 3
    }
  ],
  "offer": [
    "au",
    "sua"
  ],
  "prerequisites": [],
  "prerequisiteText": "",
  "category": "proj",
  "description": "This is a final year unit that builds on foundation and intermediate computing units to prepare students for professional experience. The unit covers the content in three modules as 1) Ethics and Professional Code of Conduct, 2) Project Management, and 3) Legal, Social, Environmental issues, Quality Assurance and IT Compliance. The content covered in these three modules are carefully designed to fill in the gaps in knowledge that is not so far covered in previous units in preparing students for the challenging projects units and professional working life ahead. This unit is a pre-requisite to the capstone project, covered in Professional Experience Project unit.",
  "assumedKnowledge": "Understanding of systems analysis and design",
  "approachToLearning": "<p><b>Lecture: <br></b>Attendance in lectures is expected. For online students this will involve using the lecture recordings available on vUWS. This is the only face-to-face component of this unit. During the lectures the learning material is presented and discussed, along with announcements regarding assessment and administrative issues. If you miss a lecture it is advised you go through the lecture notes in your own time, and ensure you listen to the recording. If there is a lack of understanding the consultation hours provided by the teaching team should be utilised. It is the responsibility of the student to facilitate a way to catch up on material they have missed because of lack of attendance. The lectures and readings will examine the theoretical aspects related to the three content modules in this unit: (1) Ethics and Professional Code of Conduct, (2) Project Management, and (3) Legal, Social, Environmental issues, Quality Assurance and IT Compliance. The group project and independent learning activities in this unit are designed for you to further research and explore\nthe topics and issues introduced in the weekly lectures, as well as consolidate knowledge from earlier units</p><p><b>vUWS:</b>\n<br>You are expected to consult vUWS at least twice a week:<br>- Access learning and assessment material <br>- Submit assessments and receive assessment feedback<br>- Collaborate on the group project <br>- Check for messages from the teaching team</p>",
  "outcome": " Outcomes\n\n1. Describe ethics and professional code of conduct associated with the professions related to computing and Information & communications technologies (ICT)\n2. Communicate in a professional manner for IT projects among team members and with outside parties\n3. Plan, schedule and manage ongoing project activities as a group and an individual\n4. Carry out cost benefit analysis of software related projects\n5. Manage team dynamics that involves working with people of varying skill levels, from different work/life experiences and diverse cultural backgrounds\n6. Articulate the concepts related to security, privacy and freedom of information as it relates to electronic data\n7. Explain legal, social and environmental issues in relation to computing and ICT\n8. Describe the importance of quality assurance and techniques used in verifying quality of software development projects\n9. Articulate the core concepts of IT compliance in order to develop a plan that addresses IT control elements\n10. Recognise indigenous culture and safety issues in proposed system designs",
  "passCriteria": "<p>1. Make a full attempt of all the mandatory assessment components (see below), and submit these when they are due\n<br>2. Contribute equally to the group project\n<br>3. Submit a progress and final peer review form based on your fellow group members\n<br>4. Achieve at least 50% in the final exam\n<br>5. Achieve a total mark for the unit of at least 50/100\n</p><p>\nThe mandatory assessment components of this unit are:\n<br>a. Module 1 and 2 Tutorial Submissions\n<br>b. Group project part A and part B (including the peer assessment forms)\n<br>c. Final exam\n</p><p>\nFailure to submit ONE or more assessment component may result in a Fail Non Submit (FNS) grade.</p>"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d109"
  },
  "id": "300579",
  "name": "Professional Experience",
  "sfiaSkills": [
    {
      "id": "SINT",
      "level": 2
    },
    {
      "id": "PRMG",
      "level": 4
    },
    {
      "id": "DLMG",
      "level": 3
    },
    {
      "id": "DESN",
      "level": 4
    }
  ],
  "offer": [
    "sp",
    "au"
  ],
  "prerequisites": [
    [
      "300104",
      "300941"
    ],
    "300582",
    "300578"
  ],
  "prerequisiteText": "300104 Database Design and Development OR 300941 Database Design and Development (Advanced) AND 300582 Technologies for Web Applications AND 300578 Professional Development ",
  "category": "proj",
  "description": "Professional Experience is a final year 'capstone' project unit. This unit provides opportunities for students to gain hands-on experience in software systems requirements definition, analysis, design and implementation, in a real-world setting. Students work in groups, guided by an academic supervisor or an industry mentor, in achieving the goals set by the client that provides the project. Suitable projects are sourced from external organisations or within Western Sydney University by way of giving the students professional experience in independent learning and reflective practice.",
  "assumedKnowledge": "Software development methodologies; Software analysis and design modelling tools and techniques; Programming languages; Implementing databases management systems; Software construction and testing.",
  "approachToLearning": "Professional Experience is the final year 'capstone' project unit. This unit provides opportunities for students to gain hands-on experience in software systems requirements definition, analysis, design and implementation, in a real-world setting. Students work in groups, guided by an academic supervisor, in achieving the goals set by an industry-based client. Suitable projects are sourced from external organisations or within Western Sydney University by way of giving the students professional experience in independent learning and reflective practice. \n\nThe overall process of the unit involves:\n1.    Before Week 0  - The unit coordinator will source the projects in consultation with the industry based clients \n2.   Week 0 -  Students will be grouped and allocated to projects and an academic supervisor. \n3.   Week 1 - In the week 1 compulsory information session, students will be informed of their group, project, client and academic supervisor. \n4.   Week 1 to 13 - Students work on the project liaising with the client and academic supervisor \n5.   Week 14 (or 15) - Final presentations, system demonstration and handover of the project to the client.\n6.   Week 16 - Final marks calculation \n",
  "outcome": "Upon successful completion of this unit, students will be able to:\n\n Outcomes\n\n1. Successfully complete all tasks from Requirements Analysis to Implementation of SDLC in producing a software product or a component of a software product as needed by the client\n2. Produce a full set of professional level documents as needed by the project covering all phases of the SDLC\n3. Integrate skills and knowledge gained from multiple units the student has undertaken in their course to date and also put together knowledge from many and varied sources as required by the project.\n4. Discover, investigate and self-learn technologies needed for completion of project activities\n5. Develop skills in foreseeing or predicting probable risks; and plan, organise and control project activities to mitigate such risks\n6. Duly, responsibly and independently complete the assigned tasks, under various constraints and pressure\n7. Reflect back on the learning experience and identify own professional maturity to approach software development problems with a wide understanding of the issues involved and managing software development projects\n8. Present and demonstrate the developed system to a panel of professionals, stakeholders and other interested parties",
  "passCriteria": "<p class=\"hang-indent\">Complete 1 and 2 below:</p>\n<p class=\"hang-indent\">(1) As a group submit:    <br>(a) all DOCUMENTATION,\n<br>(b) CODE and relevant DATA of the final system, and\n<br>(c) CLIENT CONFIRMATION form;</p>\n<p class=\"hang-indent\">(2) Individually:<br>(a) submit the final PEER-ASSESSMENT form,\n<br>(b) score a minimum of 50 INDIVIDUAL MARKS** (not a group mark),\n<br>(c) attend at least 80% of all Academic Supervisor, Client and Group MEETINGS; and\n<br>(d) attend the FINAL PRESENTATION.\n</p>\n<p class=\"\">\nFailure to comply with ALL of the above requirements will result in a FAIL grade.\n</p>\n<p class=\"\">\n** <b>Students should note that members of the same group may not receive the same grade in this unit, even though 95% of activities are group-based. In this unit, INDIVIDUAL MARKS are calculated using an individual marks calculation tool.</b> Example use of this tool is given on the vUWS site and this tool will be explained in the week 1 session.</p>"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d10a"
  },
  "id": "300580",
  "name": "Programming Fundamentals",
  "sfiaSkills": [
    {
      "id": "PROG",
      "level": 1
    },
    {
      "id": "TEST",
      "level": 1
    }
  ],
  "offer": [
    "sp",
    "au"
  ],
  "prerequisites": [],
  "prerequisiteText": "",
  "category": "prg",
  "description": "As a first unit in computer programming, Programming Fundamentals covers the basics of developing software with an emphasis on procedural programming. Students will learn about basic data structures, the concept of algorithms, fundamental programming constructs, common programming language features and functions, program design and good programming style. A high level programming language is combined with a highly visual framework to teach problem solving using software.",
  "assumedKnowledge": "High School Mathematics at Year 10 level",
  "approachToLearning": "What is expected of you?\n\nThis unit is a 10-credit point unit. It is expected that you spend 10 hours each week working on this unit. The face-to- face component of this unit is a two (2) hour lectures each week and a two (2) hour practicals each week. This means that, provided you work efficiently in the face-to-face teaching/learning time, you are expected to spend an additional 6 hours each week working on material for this subject, including reading the textbook and other references, undertaking tutorial/homework exercises, working on assignments, reviewing lecture material, reflecting on your learning and preparing for the final exam.\n\nIn this unit you will be engaged in a range of activities to support your learning. There are many resources available to assist you in this unit and university study more generally. The key activities and resources for this unit are outlined below.\n\nAttendance\n\nAs this is the foundational programming unit and is required as a pre-requisite to subsequent units - attendance is strongly recommended for all lectures and practical sessions.\n\nLectures\n\nLectures are a key element of your learning environment in this unit. The lectures will focus on familiarising the students with the theoretical concepts of the unit content. Each lecture will set the context for the tutorial to follow and will highlight concepts and skills you will need for the formal final examination. Attendance in lectures is not compulsory, but is strongly recommended. Based on the previous experience, lecture attendance has a direct correlation with the exam marks of the students, as attending the lectures significantly improves understanding of the covered material. All content covered in the lectures is examinable.\n\nLectures provide strong theoretical foundations to develop understanding of the programming concepts and problem solving through coding. They contribute to learning outcomes 1-5.\n\nTutorials/Practicals\n\nTutorial classes provide an opportunity for learning in a more hands-on and interactive setting and focus on solving a set of practical programming problems. The term practical represents a document containing a list of practical problems for students to solve before the due date specified in this document. The tutorial class is solely dedicated to helping students with their practicals and the major assignment. Practical exercises will mainly provide students with hands-on experience working with data types, input and output, conditional statements, variables, loops, function construction and calling, as well as the use of arrays. These exercises will require the students to tackle various common problems during development and implementation of a typical application program. Most exercises are designed for learning and practicing, and the solution or hints will mostly be discussed during the tutorial classes.\n\nPracticals help to develop the necessary practical training and complement lectures through training students to independently apply the knowledge covered in the class to a range of new problems. They contribute to learning outcomes 1-5.\n\nOnline Learning\n\nOnline learning is supported through the vUWS platform as well as the Clara Online website. All lecture notes, video recordings, sample problems covered in the class and their solutions are provided online. All the practicals, marking and feedback are provided online. Online learning also contributes to learning outcomes 1-5.\n\nStudents should access the Programming Fundamentals vUWS site and check their stu- dent email account at least four times a week. Access to the units vUWS site is only available to students who are enrolled in the unit. Student enrolment can be cancelled for failure to meet financial obligations to the University, e.g. failure to pay library fines. If you do not have access or find that access is lost, you should contact the Student Centre to check enrolment.",
  "outcome": "As a first unit in computer programming, Programming Fundamentals teaches the basics of developing software with an emphasis on procedural programming. You will learn about basic data structures, concept of algorithms, fundamental programming constructs, common programming language features and functions, program design and good programming style. A high level programming language is combined with a highly visual framework to teach problem solving using software.\n\nThe art of programming is complex. It requires the exercise of several different skills. It is at the same time analytical and synthetic. It demands both precision and imagination. The written form of a program must be suitable for consumption by both computers and humans. Program writing is similar in some ways to the composition of music commissioned for a specific purpose and just as a sheet of music is effectively a set of commands to a musician, so too a program is a set of instructions to a computer.\n\nProgramming is a special kind of reasoning. To become a programmer requires significant amount of practice in designing and in analysing programs. So although programming goes on in your head and is mostly thinking, learning to program means spending a lot of time practicing to gain fluency and experience.\n\nWhen learning your first programming language, it is easy to get the impression that the hardest part of solving a problem on a computer is translating your ideas into the specific language that will be fed into the computer. This is definitely not the case. The most difficult part of solving a problem on a computer is coming up with the method of solution. After you have developed a method of solution, it is routine to translate your method into the required language; be it Java or any other programming language. When solving a problem with a computer, it is therefore helpful to temporarily ignore the language and to concentrate instead on formulating the steps of the solution and write them down in plain English, as if the instructions were to be given to a human being. A set of instructions expressed in this way is frequently referred to as an algorithm.\n\nReading a book or listening to lectures is not enough to make you a programmer. In order to learn programming you must practice. Reading textbooks should make the ideas plausible to you. That is the first stage of your learning, and the one, which requires the least effort. The second stage of understanding is to be able to follow other peoples’ reasoning.\n\nProgramming must be creative, but nobody can teach you creativity. You can learn it but only if you work at it consistently. Practice and more practice is what you will need. One of the difficulties you may face - and overcome - arises from the need for precision and the need for simplicity when writing programs. The need for precision makes some programs large, but even the largest program must be kept simple enough to understand. The most effective way to keep a program simple is to make it out of a small number of pieces, joined together to form one of the standard programming structures. Understanding a program that is constructed in this way is a matter of understanding its various components separately and then understanding the way they fit together.\n\nNo pre-requites are required for this unit.\n\n Outcomes\n\n1. With a chosen programming language in mind , analyse a given problem and from a simple problem description, identify desired inputs, outputs, and the necessary processing operations to convert input into output\n2. Develop an algorithm that applies structured programming techniques that solve the given problem\n3. Choose suitable data types to store relevant data for the given problem\n4. Design and code programs which use standard programming concepts: variables, sequence, loops, decision making constructs, mathematical and boolean operators, as well as functions\n5. Apply top-down modular design principles to programming problems and implement the solution using the chosen programming language",
  "passCriteria": "a) Obtain a passing mark (over 50%) in workshop portfolios (practicals) 1-6.\nb) Obtain a passing mark (over 50%) in the Final Exam.\nc) Obtain a passing mark (over 50%) overall (Workshop portfolios + Mid-Semester Test + Major Assignment + Final Exam).\nd) Obtain a passing mark (over 80%) in the Mathematics test"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d10b"
  },
  "id": "300581",
  "name": "Programming Techniques",
  "sfiaSkills": [
    {
      "id": "TEST",
      "level": 2
    },
    {
      "id": "PROG",
      "level": 3
    }
  ],
  "offer": [
    "sp"
  ],
  "prerequisites": [
    "300580"
  ],
  "prerequisiteText": "300580 Programming Fundamentals ",
  "category": "prg",
  "description": "This unit is intended as a second unit of study in programming. It builds on a basic understanding of procedural programming as would be developed in a first unit. This unit continues the development of programming skills and methodologies required for professional programming and for further study in later computing units. Topics covered include multi-dimensional arrays, file I/O, searching and sorting, and an introduction to object-oriented programming involving classes and inheritance.",
  "approachToLearning": "It is important that students engage in, and take responsibility for, their learning. However, there are a number of useful learning aides that are available in this unit to help students succeed. These include, but are not limited to, Lectures, Practical classes, PASS, MyProgrammingLab, and Assessments. You may find any number of them useful during the semester.\n<latex>\n\\\\\n\\\\\n\\textbf{PASS (Peer Assisted Study Sessions)}\n\\\\\nPeer Assisted Study Sessions (PASS) are free, weekly ‘super-group’ learning sessions. PASS is facilitated by senior students who have successfully completed the unit before. During the sessions you will meet and work collaboratively with other students from Programming Techniques to understand the unit content and develop study strategies to help improve your academic performance.\n\\\\\n\\\\\nSome students find this unit challenging, and PASS has a strong record of helping all students to excel. PASS sessions are available both face to face on campus and online, offering you more opportunities to achieve more together with PASS! To see the PASS timetable visit westernsydney.edu.au/pass\n\\\\\n\\\\\n\\textbf{Assessments}\n\\\\\nThe assessments in this unit are sets of practical exercises (Practical Sets), a Programming Project, and a Practical Programming Test.\n\\\\\n\\\\\nA selection of the weekly practical exercises will be assessable. These exercises are assessable to encourage students to develop their problem solving and programming skills throughout the entire semester rather than just prior to a major assessment falling due; this cannot be emphasised enough since development of good programming skills needs regular practice. Practical exercises are an important aspect of the learning and assessment in this unit since they provide the necessary building blocks of practical programming skills. Students will develop these skills by completing two sets of practical exercises during the semester. As part of the development of the solutions to these practical exercises students will be required to briefly demonstrate their practical exercises to their tutor in class one (1) week before the assessment is due; this is known as a checkpoint; checkpoints are explained in detail in section 2.5.1 of this learning guide.\n\\\\\n\\\\\nThe problem solving and programming skills obtained through lectures, tutorial and practical exercises, use of MyProgrammingLab and appropriate reading will be expanded and applied to a more in-depth programming project that is due toward the end of semester. Hence, it is important that students apply themselves to the smaller practical exercises to be able to pick up the skills needed to solve this more complex problem. More details on the programming project are found in section 2.5.2 of this learning guide.\n\\\\\n\\\\\nBeing a very practically oriented unit there is no final written examination at the end of session. Instead, one partial-open-book practical programming test will be run during session that will assess various problem solving and programming skills in a controlled invigilated environment. More details on the practical programming test are found in section 2.5.3 of this learning guide.\n\\\\\n\\\\\n\\textbf{MyProgrammingLab}\n\\\\\nMyProgrammingLab is a website provided by the publisher of the textbook. The website contains extra exercises relating to each of the textbook chapters and is of particular use for students that need extra drill exercises to aid their understanding. The UI of the website enables students to solve simple programming tasks online without the need for a compiler and will provide immediate personalised feedback on each exercise attempted. Details about how to register in MyProgrammingLab will be provided in a separate document at the start of semester in vUWS (Registration will only be possible if you have a valid access code which comes with the textbook Value Pack or may be purchased separately). \n\\\\\n\\\\\n\\textbf{Note:} the use of MyProgrammingLab is not a requirement of any of the assessments of this unit and so its use is purely optional but may benefit some students to assist their learning through further exposure to programming problems.\n</latex>",
  "outcome": " Outcomes\n\n1. With a chosen programming language in mind, analyse a given problem and: a). Develop an algorithm that applies structured programming techniques such as sequence, selection, iteration and modularisation that solve the given problem; b). Choose suitable data types to store relevant data for the given problem; c). Implement the solution algorithm using the chosen programming language, data types and control structures; d). Test and debug the program code to produce a working computer program\n2. Write and implement programs that use data structures such as arrays to solve problems in programming involving multiple data items.\n3. Demonstrate how different searching and sorting methods operate and be able to implement them in working computer programs\n4. Store, retrieve and manipulate data programmatically from secondary storage\n5. Use object-oriented methodology to analyse relatively simple problems and develop object-oriented computer program solutions",
  "passCriteria": "To pass this unit you must:\n-\tComplete all mandatory assessment items that are listed in the following table*\n-\tObtain a minimum total assessment mark of 50% in the unit.\n-\tObtain a minimum mark of 40% (i.e., 12/30) in the Practical Programming Test.\n* For Assessment item 1 (Practical Exercises) at least one (1) Prac Set must be submitted\n\n\n"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d10c"
  },
  "id": "300582",
  "name": "Technologies for Web Applications",
  "sfiaSkills": [
    {
      "id": "PORT",
      "level": 3
    },
    {
      "id": "METL",
      "level": 3
    },
    {
      "id": "EMRG",
      "level": 1
    }
  ],
  "offer": [
    "au",
    "sua"
  ],
  "prerequisites": [
    "300580"
  ],
  "prerequisiteText": "300580 Programming Fundamentals ",
  "category": "dev",
  "description": "Building on material covered in Programming Fundamentals this unit introduces students to some of the key technologies for developing interactive and dynamic web applications from both the client and server perspective. The unit covers web site design, web site development, web page accessibility and usability, HTML, CSS, client side and server side scripting, database interaction, web site promotion (Search Engine Optimisation) and web security.",
  "assumedKnowledge": "Basic programming principles and program control structures equivalent to that covered in Programming Fundamentals. Basic file management and PC operation including how to access and search the World Wide Web.",
  "approachToLearning": "\n<latex>\n\\textbf{Lectures}\\\\\nLectures are designed to provide students with the essential building blocks of knowledge required to successfully complete this unit. Lectures will provide students with an understanding of the material covered at a level that is not possible to attain through mere reading of resources alone.\nTwo hours of lecture will be held each week. Lecture slides are downloadable from vUWS on a weekly basis; bring a copy along to the lecture each week to annotate to make review of the notes more beneficial. Also read the relevant chapter from the textbook before attending the lecture each week.\n\\\\\n\\\\\n\\textbf{Practicals}\\\\\nThis unit is very 'hands-on'; during practicals, students will be exposed to many skills that are best learnt by doing. During practicals, students work at their own pace, but need to meet the deadlines for submission of their practical work. The practicals also include checkpoints, in which students show their work-in-progress to their tutor, who will mark the work.\\\\\n\\\\\nBeing a very practically-oriented unit, there is no final written examination at the end of the semester. Instead, a restricted open book practical quiz will be run during a practical session which will assess various coding and other technical skills in a controlled environment.\n\\\\\n\\\\\n\\textbf{vUWS}\\\\\nAll lecture slides, code samples, and the specifications for the practical exercises and the major Web Application Assignment will be available on vUWS. The marking for the practical exercises and the assignment will also be conducted via rubrics on vUWS.\n</latex>",
  "outcome": " Outcomes\n\n1. Create simple web pages demonstrating a working knowledge of HTML and Cascading Style Sheets\n2. Create web pages that include appropriate multimedia content to enhance presentation and/or usability\n3. Create web-based forms incorporating client side scripting to validate user input on the browser\n4. Construct simple dynamic web pages with server side database interaction and server side scripting\n5. Create functional and usable web sites using technologies outlined in learning outcomes 1, 3, and 4 and incorporating: basic principles of human-computer interface design; current accessibility principles and standards; current search engine optimisation techniques\n6. Implement appropriate server-side code to provide simple authentication and access control to a web application",
  "passCriteria": "<p>1. Complete and submit the Practical Exercises<br>\n2. Complete and submit the Web Application Project<br>\n3. Achieve at least 40% in the Practical Test<br>\n4. Achieve a unit total of at least 50%</p>"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d10d"
  },
  "id": "300583",
  "name": "Web Systems Development",
  "sfiaSkills": [
    {
      "id": "PORT",
      "level": 3
    },
    {
      "id": "METL",
      "level": 3
    },
    {
      "id": "SINT",
      "level": 3
    },
    {
      "id": "EMRG",
      "level": 2
    },
    {
      "id": "TEST",
      "level": 2
    }
  ],
  "offer": [
    "sp"
  ],
  "prerequisites": [
    "300582"
  ],
  "prerequisiteText": "300582 Technologies for Web Applications ",
  "category": "dev",
  "description": "In this unit students further develop their theoretical and practical skills in designing and developing web based information systems using systems analysis, programming, database, human computer interaction and web technologies skills that they have learnt in previous units. Current web development technologies and/or frameworks will be utilised to build a complex web information system in a collaborative web development team. Techniques of porting web systems to mobile platforms will also be explored.",
  "assumedKnowledge": "- Fundamental web development skills such as HTML, CSS, Javascript and PHP.\n- Principles of relational database design and development, practical skills in SQL.\n- Principles of systems analysis and design including the specification of end-user requirements and a good knowledge of the SDLC and its application to solving computer system related problems.",
  "approachToLearning": "This unit involves face-to-face lectures and practical classes. The recommended approaches to these activities are given below. \n\nLectures: Lectures aim to explain and demonstrate knowledge and skills in ASP.NET Core programming. Lectures cover or provide references to everything needed in completing practical sets and unit project, so students are strongly encouraged to attend lectures.\n\nPractical classes: Practical classes allow students to put their learning into practice by doing practical programming exercises. Tutors are available in practical classes to help students. To gain full benefit of the practical classes, students should study the lecture materials thoroughly and attempt the practical assignments prior to the classes and then seek help from tutors. It will be impossible for students to complete the practical assignments without prior preparation.\n\nvUWS: Lecture materials (slides and sample codes) and assignment specifications will be made available on vUWS. Also, unit announcements are posted on vUWS regularly. Moreover, practical assignments are submitted via vUWS. Therefore, students are expected to visit vUWS at least three times a week.",
  "outcome": "This unit has the following learning outcomes.\n\n Outcomes\n\n1. Apply CSS framework to lay out and style website\n2. Apply LINQ to construct database queries\n3. Apply Entity Framework Core to bind objects with database records\n4. Implement both client-side and server-side data validation\n5. Implement dynamic webpages with Razor syntax\n6. Apply MVC framework to develop web systems\n7. Implement user authentication and authorization for web systems\n8. Apply collaborative skills to work in a team in developing complex web systems",
  "passCriteria": "1. Achieve at least 50% of overall marks. \n2. Submit at least two out of three sets of practical exercises. \n3. Submit the project, which is a mandatory assessment item.\n4. Attempt the final exam, which is also a mandatory assessment item.\n"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d10e"
  },
  "id": "300584",
  "name": "Emerging Trends in Information Systems",
  "sfiaSkills": [
    {
      "id": "EMRG",
      "level": 2
    },
    {
      "id": "RSCH",
      "level": 2
    },
    {
      "id": "ISCO",
      "level": 3
    },
    {
      "id": "DATM",
      "level": 3
    }
  ],
  "offer": [
    "au"
  ],
  "prerequisites": [
    "300573",
    "300582"
  ],
  "prerequisiteText": "300573 Information Systems in Context AND 300582 Technologies for Web Applications ",
  "category": "sys",
  "description": "This unit provides a means for students to self-reflect on their future career and their possible involvement in the field of Information Systems and explore the changing nature of information systems in organisations via one of the following: engagements with local businesses, specifically crafted study tours or focused internships. In this unit students will study the role that emerging technologies play in selection, design and development of information systems. Students will be able to research and assess new technologies while networking and engaging with real life businesses, as well as develop and introduce effective strategies for achieving change and improvement that can be delivered by successfully implementing emerging technologies.",
  "approachToLearning": "There is two hour seminar each week unless otherwise specified (please see weekly schedule for details). \n\n10 weeks of semester will be allocated to seminar activities. 3 weeks will be allocated to data collection activities. \n\nPlease note, to complete data collection activities students may do one of the following: attend planned study tour, undertake planned internship, undertake observational study, undertake a case study review of a business.\n\nPlease note: study tour or internship may be completed just before or during the semester. \n\nDuring the 10 weeks of seminars major concepts will be reviewed and discussed. You will be expected to participate in class activities and discussions. Furthermore, within this unit you will be expected to work individually and in teams which will help you learn skills needed in the industry. \n\nIt is expected that while undertaking this unit you will actively seek clarifications and feedback, so that you can improve. \n\nThis unit will require both face to face participation as well as the ability to utilise electronic resources. \n",
  "outcome": "After successful completion of this unit, students will be able to: \n\n Outcomes\n\n1. Review and analyse current and emerging trends in Information System technologies as well as implementation challenges\n2. Analyse requirements and develop plans for IS applications and integration of systems\n3. Examine the roles and suitability of developing business intelligence and data mining strategies for IS applications\n4. Identify issues related to IS in organisations\n5. Examine and evaluate collaborative IS technologies and applications\n6. Develop a set of skills for applying strategies in future career settings\n7. Review, analyse and summarise current literature in selected topic areas in Information Systems discipline",
  "passCriteria": "Achieve 50% overall and attempt and submit all three assessments:\n\n1.\tAssignment 1 - Analysis Report \n2.\tAssignment 2 - Group Presentation\n3.\tAssignment 3 - 3-5 min video and 1A4 size Static Power Point Page "
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d10f"
  },
  "id": "300585",
  "name": "Systems Analysis and Design",
  "sfiaSkills": [
    {
      "id": "SWDN",
      "level": 2
    },
    {
      "id": "REQM",
      "level": 2
    },
    {
      "id": "GOVN",
      "level": 2
    },
    {
      "id": "SCTY",
      "level": 1
    },
    {
      "id": "DESN",
      "level": 3
    }
  ],
  "offer": [
    "au"
  ],
  "prerequisites": [],
  "prerequisiteText": "",
  "category": "sys",
  "description": "This unit introduces the concepts of System Analysis and Design. The study of methodologies and techniques for problem recognition, requirement analysis, process modelling and/or data modelling are essential elements of this unit. The Systems Development Life Cycle model is employed as the prime approach to teach the unit, providing students with the basic skills required for analysis and design of logical solutions to information systems problems. The use of Computer Aided System Engineering tools will be discussed in practical sessions.",
  "assumedKnowledge": "Students should have knowledge of the fundamentals of information systems, computer systems, computer applications and information processing.",
  "approachToLearning": "<p>The <b>lectures</b> will examine the theoretical aspects and the practical workshop and assessment activities will make use of this knowledge. </p><p>The <b>workshop</b> activities are designed so that students will gain experience in becoming confident and competent in concepts and modelling techniques in Systems Analysis and Design. Links to workshop resources are published on vUWS. These can be used by students to gain understanding of concepts related to the unit and apply them to scenarios.</p><p><b>Practice quizzes and questions</b> on each of the topics in the unit are available for students to practice Multiple Choice questions related to each topic. Links to each quiz and practice questions are available via the 'Mindtap' site for the textbook. <u>This will help students to prepare for the quiz and final exam.</u> Please refer to the schedule for the relevant chapter of the textbook for each topic. </p><p>To revise the learning on various topics, students can access<b> powerpoint slides and flash cards</b> related to each topic. Students can either test their understanding on various items under each topic via the flash cards or play a game to match the description to the topic. This offers a playful and interactive learning mechanism. <u>This will help students to prepare for the quiz and final exam. </u><b>Powerpoint slides and Flashcards</b> for each topic are available via the 'MindTap' site for the textbook. Please refer to the schedule and the vUWS learning materials section for the relevant chapter of the textbook for each topic. </p><p>vUWS: You are expected to consult vUWS at least twice a week: - Access learning and assessment material - Submit assessments and receive assessment feedback - Check for messages from the teaching team</p>",
  "outcome": " Outcomes\n\n1. Recognise the key role of a systems analyst and describe the generic roles and responsibilities of users, developers and managers within the context of business information systems\n2. Recall the fundamental building blocks and architecture of information systems\n3. Describe and apply the various phases of the System Development Life Cycle, including related documentation and appropriate project management approaches\n4. Analyse user and system requirements for the purposes of producing abstract models based on real business problems\n5. Explain the use and application of Computer Aided Software Engineering (CASE) Tools in the creation of systems development artefacts\n6. Explain the issues around information systems governance, consumer and information security and professional ethics in regards to their impact on information systems design and operation",
  "passCriteria": "Submit all assessments including subparts of an assessment \nAchieve at least 40% in the Final Exam\nAchieve a total mark of at least 50% in the unit"
},{
  "_id": {
    "$oid": ""
  },
  "id": "300672",
  "name": "Mathematics 1A",
  "sfiaSkills": [],
  "offer": [
    "au","sp"
  ],
  "prerequisites": [],
  "prerequisiteText": "",
  "category": "mat",
  "description": "This Level 1 unit provides a solid foundation in the theory and applications of differential calculus, as well as some introductory work on complex numbers. It is the first of two units developing aspects of calculus.",
  "assumedKnowledge": "",
  "approachToLearning": "",
  "passCriteria": ""
},{
  "_id": {
    "$oid": ""
  },
  "id": "300673",
  "name": "Mathematics 1B",
  "sfiaSkills": [],
  "offer": [
    "sp"
  ],
  "prerequisites": ["300672"],
  "prerequisiteText": "",
  "category": "mat",
  "description": "",
  "assumedKnowledge": "",
  "approachToLearning": "",
  "passCriteria": ""
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d110"
  },
  "id": "300698",
  "name": "Operating Systems Programming",
  "sfiaSkills": [
    {
      "id": "PROG",
      "level": 3
    },
    {
      "id": "HWDE",
      "level": 2
    },
    {
      "id": "TECH",
      "level": 2
    }
  ],
  "offer": [
    "au"
  ],
  "prerequisites": [
    [
      "300581",
      "300147"
    ]
  ],
  "prerequisiteText": "300581 Programming Techniques OR 300903 Programming Techniques (Advanced) OR 300147 Object Oriented Programming ",
  "category": "prg",
  "description": "This unit provides the knowledge of the internal structure and functionality of Operating Systems. An operating system defines an abstraction of hardware behavior and provides a range of services more suitable for ICT application development than what raw hardware could deliver, in terms of convenience, efficiency and security. It is important that ICT Professionals have some understanding of how these services are realized. For ICT Professionals whose role includes supporting the operating system this unit provides the introduction to the relevant theory and practice.",
  "assumedKnowledge": "Students are expected to have a general understanding on computer systems; computer fundamentals, and programming techniques.",
  "approachToLearning": " <latex>\\begin{tabular}{|m{0.15\\textwidth}|m{0.8\\textwidth}|}\n\\hline\n\\rowcolor{lightgray}\\textbf{Type}&\n\\textbf{Approach}\\\\\\hline\nLecture&\nThe Lectures present and explore the theoretical aspects of the unit.\\\\\\hline\nPractical&\nThe practicals allow students to explore the theory in a controlled way, receiving feedback on their progress.\\\\\\hline\n\\end{tabular}</latex>",
  "outcome": "Upon successful completion of the unit students will be able to:\n\n Outcomes\n\n1. Identify the functions, services and basic structure of operating systems, and describe their role in a computer system\n2. Discuss operating systems fundamental concepts: process, process synchronisation, process scheduling and dispatch, memory management, virtual memory, I/O system management, file systems, hierarchical directory systems\n3. Identify some of the performance issues involved, and carry out elementary calculations in this regard\n4. Identify the central role of concurrency in operating systems programming; and solve relatively simple problems requiring concurrency\n5. Write programs illustrating the application of the theoretical concepts, and explore these concepts in a simulated environment\n6. Analyze and evaluate an operating systems suitability for a task based on requirement",
  "passCriteria": "Attempt all assessment items, achieve a mark of at least 45% in the final exam, and achieve a total mark of at least 50%."
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d111"
  },
  "id": "300700",
  "name": "Statistical Decision Making",
  "sfiaSkills": [
    {
      "id": "INAN",
      "level": 3
    },
    {
      "id": "TECH",
      "level": 2
    }
  ],
  "offer": [
    "au"
  ],
  "prerequisites": [],
  "prerequisiteText": "",
  "category": "datsci",
  "description": "Statistical Decision Making introduces students to various statistical techniques supporting the study of computing and science.  Presentation of the content will emphasize the correct principles and procedures for collecting and analysing scientific data, using information and communication technologies. Topics include describing different sets of data, probability distributions, statistical inference, and simple linear regression and correlation.",
  "approachToLearning": "<p>This unit will be offered on the Parramatta, Kingswood and Campbelltown campuses over a semester.   In each teaching week there will be a two hour lecture, as well as a two hour workshop class held in the computer labs.  The workshop class will consist of a one hour tutorial and a one hour practical.</p>\n<p>The assessment will consist of weekly short workshop exercises, of which the best 8 marks are counted; an online test with a threshold requirement and unlimited attempts allowed; a group project; and a final examination.   The assessment items during the semester are designed to gauge your achievement and performance in relation to the unit learning outcomes; they are also an excellent preparation for the final examination, which is a summative examination with a threshold requirement.</p>\n<p>All teaching materials will be released on vUWS as the semester progresses.  Moreover, all lectures will be recorded and uploaded to vUWS. – Please note that <b>these online resources are meant to aid revision; ONLINE RESOURCES CANNOT REPLACE FACE TO FACE TIME during the weekly lecture and workshop classes</b>.   Active participation in lectures and workshops is crucial for mastering the learning outcomes:  Records from previous years show that <b>poor attendance in lectures and workshops is highly correlated with failing the unit</b>.  We cannot prevent you from ignoring this advice and choosing not to attend classes, but in this case, please don't blame the teaching team if you fail the unit:  The members of the teaching team are there to help you achieve the learning outcomes and succeed in this unit, but you need to make use of this offer.</p>\n<p><br></p>\n<p><b>Lectures</b>\n\n</p>\n<p>Mathematics/statistics is not a collection of recipes and formulae which you rote-learn \"because the teacher says so\"; the very reason why mathematics and statistics are powerful is that they <b>prove</b> that the methods they use are correct.</p>\n<p>While this unit is too short to give rigorous proofs for the correctness of the techniques you will see, it is crucial that you know <b>why</b> and <b>when</b> a statistical method works; only then can you decide whether it is applicable to a situation in which you're interested.   Moreover, understanding the reasons behind the techniques helps remember them.</p>\n<p>The objective of the lectures is to explain both, <b>how</b> a statistical technique is used, and <b>why/when</b> it works.</p>\n<p>Some students, especially those who did no mathematics or only a lower level of mathematics at high school, may find parts of the lectures somewhat intimidating.  If you find that this applies to you:<b> DON'T PANIC!</b></p>\n<ul>\n<li>You will <b>not</b> be tested on proofs as such.</li>\n<li>You may find the explanations from the textbook more accessible; this is perfectly OK:  Textbook and lectures complement each other in that they use slightly different approaches to the material, but both cover the entire assessable content.  (The rationale for this is that seeing things twice from different angles should make it easier for many students.)</li>\n</ul>\n<p><br></p>\n<p><b>Workshops</b></p>\n<p>Understanding how and why a method works is the first step; being able to apply it in practice is the second.</p>\n<p>The workshops have a tutorial and a practical component.   The former will reinforce the \"how and why\" behind the methods we teach you; the latter will give you the opportunity to use them in practice:  We use the powerful open source statistics software R for teaching; it is a standard for professional statisticians all over the world.</p>\n<p>Short tasks conducted during the workshops every week starting in Week 3 form part of the assessment for the unit.</p>\n<p><b>STUDENTS CAN ONLY ATTEND THE WORKSHOP CLASS FOR WHICH THEY ARE REGISTERED.</b></p>",
  "outcome": "<p>This Level 1 unit introduces students to various statistical techniques supporting the study of computing and science.</p>\n\n Outcomes\n\n1. Analyse data using traditional methods or modern resampling methods\n2. Use technology to assist in performing statistical analysis\n3. Recognise the limitations of data collection methods and demonstrate awareness of the influence of these limitations on inference\n4. Choose the correct statistical method for analysis and correctly interpret the results",
  "passCriteria": "<ul>\n<li>submit at least 8 Workshop Exercises;</li>\n<li>submit the Team Project;</li>\n<li>achieve a mark of at least 75% in the online Short Answer Test;</li>\n<li>achieve a mark of at least 40% in the Final Exam; and</li>\n<li>achieve an overall mark of at least 50%.</li>\n</ul>"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d112"
  },
  "id": "300830",
  "name": "Analysis of Change",
  "offer": [
    "sp"
  ],
  "prerequisites": [],
  "prerequisiteText": "",
  "sfiaSkills": [
    {
      "id": "INAN",
      "level": 2
    }
  ],
  "category": "mat",
  "description": "This Level 1 unit introduces students to the mathematical modelling techniques that are used to formulate and solve problems in the physical and biological sciences. To use these techniques successfully, students must develop the ability to formulate a problem mathematically and then be able to use the appropriate knowledge to test conclusions by analytical and numerical means. These skills will be emphasized as each technique in introduced. Apart from some introductory work on logarithms and exponentials (essential concepts in the sciences), the main techniques developed involve aspects of differential calculus, culminating in the use of differential equations to model real phenomena in the sciences.",
  "assumedKnowledge": "General Mathematics background achieved at bands 5 or 6, or Mathematics, achieved at band 4, or equivalent or 300831 Quantitative Thinking.",
  "approachToLearning": "This unit has been developed to provide many opportunities for you to gain confidence (and knowledge) in your pursuit of the study of mathematics. You will gain this confidence and knowledge by reading through all the lecture material, attempting all the tutorial questions and online activities. While some of the content is strictly mathematical, a good number of the exercises and examples given show how the mathematics is used in a computational or scientific context. Transferring your mathematical knowledge into a scientific context can be very difficult; hence a variety of methods (reading material, practice questions, etc.) have been provided to help you achieve this goal.\n\nBe sure to keep up-to-date as it is very tempting to miss doing some work each week, believing that you can catch-up later. This rarely happens and, before you know it, the semester is drawing to a close! The skills you will learn in this unit will prepare you for solving scientific problems and, conversely, you will be able to take a scientific problem and extract the mathematics from it. You will receive feedback on your progress via your class tests, and you are strongly encouraged to contact your lecturer, Dr Brent Le Cornu (brent.lecornu@westernsydney.edu.au), at any time regarding your progress. Feedback plays a critical role in assessing your progress so you are strongly encouraged to participate in all activities\n\n <latex> {\\begin{table}[ht]\n\\centering\n\\begin{tabular}{|l|p{14cm}|}\n\\hline\n\\rowcolor{gray!40!white}\n\\textbf{Type}   & \\textbf{Approach}   \\\\\n\\hline\n\\textsf{Lecture}  & Prior to the lecture each week, skeleton lecture slides will be posted on vUWS as a PDF file. Spaces will be left in relevant sections of the slides to allow for student annotations. Students can either download the slides and annotate them electronically (e.g. using an appropriate iPad viewer and stylus), or they can print them off and annotate them by hand. \\\\\n\\hline\n\\textsf{Tutorial} & Prior to the tutorial each week, a tutorial worksheet will be posted on vUWS as a PDF file. Students are expected to work through the questions in the worksheets in advance of the tutorial so that they can seek help with those questions and subject areas they find challenging. It is not expected that all of the questions be completed prior to the tutorial but maximum benefit will come to those students who attempt a good proportion of them and seek help from their tutor about any areas of conceptual difficulty they encounter while doing so. \\\\\n\\hline\n\\textsf{vUWS} &  Lecture slides and tutorial sheets will  be  provided  on  vUWS.  It  is  suggested  that  you  print  or  download\nskeleton lecture slides prior to lecture classes so that you can add annotations to them while in class. Visit vUWS at least twice a week for announcements or updates.\\\\\n\\hline\n\\end{tabular}\n\\end{table}\n}</latex>",
  "outcome": " Outcomes\n\n1. Define, graph and manipulate exponential, logarithmic and trigonmetric functions\n2. Apply correctly the techniques of differential calculus to solve biological and chemical- based problems\n3. Apply correctly algebraic techniques and manipulate basic limits\n4. Communicate mathematical ideas using standard practices",
  "passCriteria": "- achieve at least 50% overall; AND\n- achieve a minimum of 40% in the final examination."
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d113"
  },
  "id": "300831",
  "name": "Quantitative Thinking",
  "sfiaSkills": [],
  "offer": [
    "sp",
    "au",
    "sua"
  ],
  "prerequisites": [],
  "prerequisiteText": "",
  "category": "mat",
  "description": "This level 1 unit develops the quantitative skills that underpin many fields of study in the sciences. The content covered includes basic algebra, functions, graphs, equations, linear and quadratic, introductory probability and descriptive statistics. These mathematical/statistical concepts will be revised and developed using scientific concepts such as molarity and dilution, optical density, population growth, and predator-prey models. In all aspects of this unit, students will be developing and using critical thinking skills to solve mathematical/statistical problems set in a scientific context.",
  "assumedKnowledge": "Basic competence in algebraic manipulation and some familiarity with elementary probability and statistical concepts.",
  "approachToLearning": "<p>This unit has been developed to provide many opportunities for students to gain confidence (and knowledge) in their pursuit of the study of mathematics. You will gain this confidence and knowledge by attending all lectures, tutorials and computer lab sessions where various techniques and strategies will be discussed and where the mathematical content will be presented. In these face-to-face sessions, you will have the opportunity to learn new skills, revisit already learned skills and to practice both. You will then apply these skills to solve scientific problems, and conversely, you will be able to take a scientific problem and ‘extract’ the mathematics from it. You will receive feedback on your progress in the face-to-face sessions, and also via your responses to the online activities in the computer lab sessions. Feedback plays a critical role in assessing your progress so you are strongly encouraged to participate in all activities and to make one-on-one appointments throughout the session with your lecturer and/or tutor, to monitor your progress.\n\nIn addition, this unit will emphasize the following areas that will help you meet the challenges that studying mathematics at university presents: identifying your particular learning style and the study strategies that complement your style; enhancing your knowledge of mathematical concepts while building your confidence in your own mathematical ability.\n\nHowever, you will achieve the maximum benefit from this unit only if you put these strategies into practice IN YOUR OWN TIME, out of class. This may mean ch<latex></latex>anging your long-held attitudes/beliefs towards study and mathematics in general.\n\nYou will also find that this unit is linked to the content and learning activities of the other first year units that you could be studying. This relationship further emphasises the importance and relevance of mathematics in the study of science.\n\n</p><p>There is no easy way to learn any mathematics, but an analogy with a sport like tennis holds: it looks easy when you see someone else do it, but doing it one’s self requires hours of practice. Read the definitions, look at examples in the book and in class, and then try doing it yourself, and keep trying until you can do it alone. Do tutorial problems, practice and then practice some more.\n\nLectures are available online and can be viewed at any time. The lecture notes also provide problems. Work through them rather than just reading the solutions. You will learn so much more by doing rather than just watching or reading solutions. You will get stuck; but in the struggle to understand and solve you will begin to master the material.\n\nHistorically this unit has quite a high failure rate each semester; and this is largely due to lack of student engagement. If you do not wish to be one of these students, you are strongly encouraged to work hard at this unit. Attend all scheduled classes; work on the tutorial questions both in and out of class time; and utilise not only sample assessments and past papers but also tutorial problems and examples from lectures to study for all your assessments. </p><p class=\"MsoPlainText\">If you ﬁnd you are struggling, you should also make use of all the free support services: PASS (Peer Assistance Study Scheme), MESH (Mathematics Education Support Hub) or you are also encouraged to seek help from your unit coordinator and/or the teaching staff during their consultation times. MESH provides free drop-in Maths &amp; Stats Help (for locations and times http://www.westernsydney.edu.au/meshroving), plus online help ``I Don't Get It'' (in the Improve Your Maths vUWS site) and unit specific test and exam preparation workshops (http://www.westernsydney.edu.au/mesh_events).</p><p><b>Lectures:</b>\nLectures are a two (2) hour class each week where information on each topic will be presented. Theory and examples will also be presented. Students are welcomed to ask questions as this often avoids misunderstanding. Lecture notes will be available from vUWS and students are expected to have read these notes at least once before the lecture.\n\n</p><p><b>Tutorial:</b>\nThere is a one (1) hour tutorial class each week where students have the opportunity to consolidate their understanding of the previous weeks lecture material. To pass this unit students should attend at least 80% of the tutorial sessions. Tutorial problems will be set each week and students will need to attempt to solve each of these problems before the tutorial class. This may require re-reading lecture notes or textbook, and/or looking at examples provided in lectures and textbook. Students are expected to work individually but discussion with fellow students is encouraged. By completing these tutorial questions you are preparing for the tutorial quizzes, the class test and the final examination. In the tutorial class students may seek further guidance on understanding the theory and/or have solution to problems fully explained.\n\nThere will only be sufficient time to solve a few tutorial problems during the tutorial class, so preparation is essential if tutorials are going to be used effectively. The danger is time could be wasted going over problems that students would have been able to solve on their own if they had done the required preparation, leaving no time for more difficult  problems.\n\n</p><p><b>Practical:</b>\nThere is a one (1) hour computer practical class each week where students have the opportunity to consolidate their understanding of the previous weeks lecture material. A Practice Computer Practical Quiz will be set each week which will prepare students for the next week's Computer Practical Quiz. These quizzes make up 10% of the assessment for this unit.\n\n</p><p><b>vUWS:</b>\nThe following learning resources will be provided on vUWS for the unit:\n\nLecture notes:\nLecture notes with the worked examples omitted will be posted before each lecture, so that you don't have to copy down everything during the lectures and can focus on listening instead. You should print out these notes, bring them to the lecture, and fill in the examples during the lecture.\n\nTutorial exercises and worked solutions to these:\nA sheet with tutorial questions will be posted one week before each tutorial. You should work through these questions before the tutorial and in the tutorial raise any problems you may have had. Complete worked solutions for all tutorial questions will be posted after each tutorial. Doing the tutorial questions and checking your own work against the worked solutions is the best way of preparing for Class Tests and for the Final Exam.\n\nWorked solutions to Class Tests:\nComplete worked solutions for Class Tests will be posted after each Class Test.\n\nA sample final exam paper will be posted before Stuvac. The main purpose of this paper is to give you a rough idea of the style of the questions which you should expect in the exam. The selection of sample questions should not be taken as a hint regarding the actual content of the exam. Do not base your exam preparation primarily on this (or any other) sample exam paper. Merely being able to reproduce solutions to sample exam questions will not be sufficient to pass the Final Exam.</p>",
  "outcome": " Outcomes\n\n1. Manipulate algebraic and numeric expressions.\n2. Recognise and draw graphs representing linear, quadratic , logarithmic and exponential functions.\n3. Solve linear equations, and quadratic equations.\n4. Use modelling techniques to represent basic biological systems.\n5. Describe data in both numerical and graphical forms.\n6. Communicate mathematical and statistical ideas using standard practices.\n7. Employ critical thinking skills to solve mathematical and statistical problems set in a scientific context.",
  "passCriteria": "<ul><li>Achieve at least 50% or more overall from the assessment tasks, AND</li><li>Score at least 40% in the final examination.<br></li></ul>"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d114"
  },
  "id": "300862",
  "name": "Video Games Development",
  "sfiaSkills": [
    {
      "id": "PORT",
      "level": 3
    },
    {
      "id": "PROG",
      "level": 3
    },
    {
      "id": "ADEV",
      "level": 1
    },
    {
      "id": "TECH",
      "level": 1
    },
    {
      "id": "EMRG",
      "level": 1
    },
    {
      "id": "TEST",
      "level": 2
    },
    {
      "id": "METL",
      "level": 3
    }
  ],
  "offer": [
    "sp"
  ],
  "prerequisites": [
    "300580"
  ],
  "prerequisiteText": "300580 Programming Fundamentals ",
  "category": "mult",
  "description": "This unit provides students with an in-depth understanding of the development and structure of game engines. It provides the student with a unifying overview of the many modules that are incorporated in a game engine as well as a detailed examination of game-play and engine programming.",
  "assumedKnowledge": "Understanding of programming concepts and details of programming. Good programming skills in C#, Java or C++. Knowledge of systems analysis methods including object orientated analysis and design. Basic knowledge of vector algebra, matrixes and fundamentals of mathematics.",
  "approachToLearning": "What is expected of you?\nThis unit is a 10-credit point unit. It is expected that you spend 10 hours each week working on this unit. The face-to-face component of this unit is a two (2) hour lecture each week and a two (2) hour practical each week. This means that, provided you work efficiently in the face-to-face teaching/learning time, you are expected to spend an additional 6 hours each week working on material for this subject, including reading the textbook and other references, undertaking tutorial/homework exercises, working on assignments, reviewing lecture material, reflecting on your learning and preparing for the final exam.",
  "outcome": "This unit is concerned with the provision of an in-depth understanding of the development and structure of game engines. It provides the student with a unifying overview of the many modules that are incorporated in a game engine as well as a detailed examination of game-play and engine programming. It will also focus on major theoretical concepts and algorithms that are currently being used in games development. After completing this unit the students will understand how game engines are built and will be able to use a selected game engine for building their own game.\n\n Outcomes\n\n1. Explain the fundamental concepts behind computer game engines\n2. Understand the technological details behind various modules that comprise a game engine\n3. Write basic modules to interface with a game engine\n4. Design modules to meet a given set of requirements\n5. Develop their own game using the selected game engine",
  "passCriteria": "To pass this unit you must:\na) Achieve a mark of at least 50% overall\nb) Complete and submit all the assessment activities; (Failure to submit all components without approval from the unit coordinator may result in a Fail Non Submission (FNS) grade)."
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d115"
  },
  "id": "300950",
  "name": "Fundamentals of Medical Concepts and Terminology",
  "offer": [
    "au"
  ],
  "prerequisites": [
    "300566"
  ],
  "prerequisiteText": "300566 Introduction to Health Informatics ",
  "sfiaSkills": [
    {
      "id": "KNOW",
      "level": 2
    }
  ],
  "category": "health",
  "description": "This unit is designed to provide the student with the knowledge necessary to understand the information contained in the health record, to function in a medical environment through an understanding of the fundamentals of medicine and to effectively use disease classification systems. Within each body system, the student will study anatomy and physiology, disease processes and their treatment, and medical terminology (disease titles, symptomatic terms, surgical terms and investigations). The unit will also focus on specialist topics such as mental health, obstetrics, paediatrics, infectious diseases, oncology, radiotherapy, nuclear medicine, diagnostic and surgical interventions.",
  "approachToLearning": "In this unit you will be engaged in a range of activities to support your learning. There are many resources available to assist you in this unit and university study more generally. The key activities and resources for this unit are outlined below.\n\nThis unit will be run simultaneously in Day mode (on-campus classroom delivery) and Composite Mode (mixture of on-campus and online delivery). This means that the same learning materials will be made available to all sub-groups of students at the same time. Also, any within-semester continuous assessment work tasks will be identical and due for submission at the same time and by the same method, for all sub-groups.\n\nAll lectures and tutorials in this unit will run simultaneously across all campuses using teleconferencing facilities located in the Access Grid rooms. The same learning materials will be made available to all students at the same time. \n\nBoth Day and Composite mode students are required to attend compulsory assessments in person within their enrolled campus. Composite mode students attend Lectures in weeks 5, 10 and 12 of session in order to perform their compulsory assessments, in addition to their Final Exam on-campus attendance. \n\nLearning materials for this unit will be accessible to enrolled students by login to the WSU online learning site vUWS.  Copies of the lecture slides of the lectures will be posted there, normally before the lecture. Copies of the video/audio recordings of the lectures will also be posted there, normally within 24 hrs of the lecture. Announcements and discussions on this unit will also be placed on the vUWS site from time to time, and you should consult the site often so that you are aware of these. Failure to stay-up-to-date with information on vUWS will not be accepted as an excuse.\n\nInteraction with the unit coordinator at their scheduled consultation times each week is possible in person or by e-mail, telephone contact, or video-conferencing (by arrangement). Please feel free to contact the unit coordinator at any time, should you be experiencing difficulties, have any queries or comments about this unit.",
  "outcome": " Outcomes\n\n1. Analyse clinical terms structurally into roots, suffixes, prefixes and combining forms;\n2. Accurately spell and pronounce clinical terms;\n3. Explain the basic structure, function, disease processes and treatment relating to the major body systems;\n4. Identify commonly used drugs and understand how to utilise the Monthly Index of Medical Specialities (MIMS) as a pharmaceutical prescribing reference guide.\n5. Use and interpret clinical terms documented in health records.",
  "passCriteria": "- Achieve a mark of at least 50% overall;\n- Attend and submit all the assessment activities: Quiz 1, Quiz 2, Verbal Quiz and Final Exam; (Failure to submit all components without approval from the unit coordinator may result in a Fail Non Submission (FNS) grade).\n- All four assessment activities require attendance at the student's enrolled campus, for both Day and Composite mode students."
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d116"
  },
  "id": "300951",
  "name": "Clinical Classification and Coding",
  "sfiaSkills": [
    {
      "id": "QUST",
      "level": 1
    },
    {
      "id": "INAN",
      "level": 2
    },
    {
      "id": "KNOW",
      "level": 2
    },
    {
      "id": "CORE",
      "level": 1
    }
  ],
  "offer": [
    "au"
  ],
  "prerequisites": [
    "300950"
  ],
  "prerequisiteText": "300950 Fundamentals of Medical Concepts and Terminology ",
  "category": "health",
  "description": "This unit is designed to enable the student to classify diseases and interventions using the current version of the International Statistical Classification of Diseases and Related Health Problems, Tenth Revision, Australian Modification, the Australian Classification of Health Interventions and the Australian Coding Standards (ICD-10-AM/ACHI/ACS). The unit will also include the historical development of clinical classification systems as well as the purpose and value of classifying diseases and interventions within the health system. The student will become familiar with the structure and content of ICD-10-AM ACHI/ACS and be introduced to the rules and conventions associated within ICD-10-AM/ACHI. The primary ACS for ICD-10-AM/ACHI will be studied and applied when coding from line diagnoses/interventions, case studies, simple discharge summaries and clinical record reports. They will gain skills in data abstraction for clinical coding, specifically, the selection of principal and additional diagnoses and interventions.",
  "approachToLearning": "<p>The unit content will be delivered in 12 modules. Generally, one module will be covered in one week. Weekly class time is 4 hours, which is divided into two parts as a lecture (2 hrs) and a workshop (2hrs). <br></p>\n<p>The lecture and tutorial will be delivered in a Parramatta South campus SoCDMS specialised lab. The other two campuses will be linked up with through zoom from Penrith (Y.2.39) and Campbelltown (26.1.50). Students have the following options in attending the classes:<br>(1) attend the class in Parramatta (preferred)<br>(2) attend the session via zoom from Campbelltown or Penrith locations and connect to Parramatta. <br>(2) join from outside the university and connect with the Parramatta location using Zoom technology (see below for zoom meeting details). </p>\n<p>\n\nZOOM Video Conferencing Details<br> ---------------------------------------------\n<br>TIME: Tuesdays from 2nd March 2020 –4th June 2020 (see the schedule of activities for more information) from 6:00 pm-10:00 pm\n<br>Go to https://uws.zoom.us, click on 'Join a Meeting' button and enter the meeting ID 5769033312. <br>First time setup may take about 10 mins. <br><br>Resources for the class: <br> It is expected that students have access to the TurboCoder Software* on your computer or hard-copies of the latest edition (10th) of ICD-10-AM/ACHI/ACS books**. <br><br> * TurboCoder Software can be purchased from https://www.ecompress.com/buyICD10AMs10th.htm.\n<br>**ICD-10-AM/ACHI/ACS books can be purchased from - http://ar-drg.laneprint.com.au/ (student discounts are available). <br><br> TurboCoder Software is available in SCEM lab machines. Details on how to use the software in SCEM labs will be provided via vUWs site.  Please note <b>TurboCoder Software only works on Windows operating system</b>. If you have a Mac computer, it is suggested that you install Windows on your Mac with Boot Camp (see instructions here https://support.apple.com/en-au/HT201468).\n<br><br>To support your learning in this unit, you will have access to the unit’s site on the university’s e-learning system vUWS. The unit’s vUWS site is the place where you can find all the relevant information related to this unit. You will get access to module content including lecture notes, workshop notes and exercises. To access vUWS, go to https://vuws.westernsydney.edu.au. You will require a current WesternAccount to login to vUWS. Once logged in, you will see links to all the units you are currently enrolled in. vUWS will be used as the main communication channel between the unit coordinator and students. The students should consult vUWS at least twice a week, as all unit announcements will be made via vUWS.</p>",
  "outcome": "<p>ICD-10 (International Classification of Diseases, 10th Edition) is the foundation for the identification of health trends and statistics globally, and the international standard for reporting diseases and health conditions. ICD defines the diseases, disorders, injuries and other related health conditions. ICD coded data allows:<br>- easy computer-based storage, retrieval and analysis of health information for evidence-based decision-making; <br>- sharing and comparing health information between hospitals, regions, settings and countries; and <br>- data comparisons in the same location across different periods. </p>\n<p>ICD-10-AM is the Australian Modification of the international standard, used in Australia. In this unit, students will get an introduction to ICD-10-AM latest edition and associated classification systems. These associated classification systems include ACHI (Australian Classification of Health Interventions) and ACS (Australian Coding Standards). </p>\n<p>As future health informaticians, students must have a sound comprehension of these classification systems. Hence at the successful completion of this unit students can:</p>\n\n Outcomes\n\n1. Summarise the history and development of ICD-10-AM/ACHI/ACS.\n2. Explain the difference between a statistical classification and a nomenclature.\n3. Understand and correctly apply the principles and techniques of clinical classification to code diagnoses and interventions using ICD-10-AM/ACHI/ACS.\n4. Identify and interpret diagnostic and therapeutic test results and accurately classify findings based on qualification from within the clinical record.\n5. Analyse diagnostic and procedural statements, case studies and simple discharge summaries/clinical record reports to determine which clinical statements to abstract and classify.\n6. Source further information to clarify complex clinical coding issues.\n7. Explain the use of clinical classification systems in health care, describing their purpose and value.\n8. Integrate the knowledge acquired in other units of study in this course with the knowledge learnt in this unit.",
  "passCriteria": "<p>- Complete all assessment items,<br>- Score a minimum of 90% (45 out of 50) of the total allocated marks in the FINAL QUIZ (students are allowed 3 attempts to achieve this score), and\n<br>- Score an overall mark of 50% or above in the unit.</p>"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d117"
  },
  "id": "300952",
  "name": "Wireless and Mobile Networks",
  "sfiaSkills": [
    {
      "id": "DBDS",
      "level": 0
    }
  ],
  "offer": [
    "au",
    "sub"
  ],
  "prerequisites": [
    [
      "300565"
    ]
  ],
  "prerequisiteText": "300565 Computer Networking OR Computer Networking (Advanced) ",
  "category": "net",
  "description": "This unit helps the students gain in depth knowledge in the core concepts and principles in the areas of wireless and cellular networks. It provides them with the technical skills needed to do requirement analysis and evaluate a range of wireless networked systems to plan their institution or expansion. The unit covers the communication characteristics and architecture of wireless systems along with various types of wireless networks, including wireless LANs, personal area networks, sensor networks, mesh networks, and broadband wireless networks. Given the widespread use of mobile phones and devices, a substantial part of the unit is devoted to the study of cellular networks. The unit also covers mobility management and wireless security issues and solutions. Upon completion of this unit, the students will have the capabilities needed for long term and independent learning in the rapidly evolving area of wireless and mobile networking.",
  "approachToLearning": "<p>Lectures: The lectures examine theoretical aspects of wireless and mobile networks.</p>\n<p>Tutorials: Tutorial sessions will either discuss questions related to lecture contents or will be hands-on activities requiring completion of lab work. Tutorials are designed to test and deepen students’ understanding of unit content and to develop practical skills.<br></p>",
  "outcome": " Outcomes\n\n1. Demonstrate an in-depth knowledge of characteristics and architecture of wireless and mobile networks\n2. Describe, analyse, and manage the principle applications of wireless and mobile networks\n3. Demonstrate a broad understanding of concepts and technologies relevant to wireless and mobile networks\n4. Explain relevant industry standards\n5. Demonstrate technical skills needed for managing mobility\n6. Demonstrate creative skills to plan institution or expansion of wireless and mobile networks\n7. Describe security issues in wireless and mobile networks and identify their remedies\n8. Demonstrate capabilities for independent learning of evolving concepts in wireless and mobile networking and for communicating those concepts clearly",
  "passCriteria": "Submit all assessment activities and achieve at least 50% of the overall marks."
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d118"
  },
  "id": "300953",
  "name": "Advanced Clinical Classification",
  "sfiaSkills": [
    {
      "id": "INAN",
      "level": 3
    },
    {
      "id": "TECH",
      "level": 2
    },
    {
      "id": "QUST",
      "level": 1
    },
    {
      "id": "KNOW",
      "level": 3
    }
  ],
  "offer": [
    "sp"
  ],
  "prerequisites": [
    "300951"
  ],
  "prerequisiteText": "300951 Clinical Classification and Coding ",
  "category": "health",
  "description": "In this unit, the student will be introduced to disease notification and registration procedures. Mortality or cause of death coding will also be examined.Concepts of organising health information in a logical way to interface with an electronic information system will be investigated. The design and role of various health classification systems including the World Health Organizations Family of International Classifications (WHO FIC), specifically ICD 11 and casemix classification systems (e.g. AR DRGs, AN SNAP) will also be discussed. The practical component of this unit will focus on the student further developing their classification skills in the more complex areas of clinical coding including endocrine disorders, specifically diabetes mellitus, circulatory diseases and interventions, genitourinary disorders, specifically chronic kidney disease, obstetrics, paediatrics and congenital anomalies and trauma and procedural complications. The ACS will be applied in detail when classifying from complex discharge summaries and full clinical episodes of care. The student will also be exposed to electronic clinical coding tools that can be used in the classification process.",
  "approachToLearning": "In this unit, you will be engaged in a range of activities to support your learning. There are many resources available to assist you in this unit and university study more generally. The key activities and resources for this unit are outlined below.\n \nNOTE TO EXTERNAL/ONLINE STUDENTS: \nAll information and material relating to this unit will be available on vUWS. This unit will be run simultaneously in on-campus classroom delivery mode (internal students), external mode (external students) and online. This means that the same learning materials will be made available to all sub-groups of students at the same time. Also, any within-semester continuous assessment work tasks will be identical and due for submission at the same time and by the same method, for all sub-groups. Learning materials for all the units will be accessible to enrolled students by login to the WSU online learning site vUWS (see below for more details). External/Online mode students will be required to take any \ffinal exam scheduled in a unit at the same time as the on-campus mode students. \n\nExternal/Online students can consult the unit coordinator at the scheduled consultation times each week in person, telephone, or Zoom (by arrangement). Please feel free to contact the unit coordinator at any time via email, should you be experiencing difficulties or have any queries or comments about any unit: we would like to off\u000ber you any extra support necessary as an external/online mode student.",
  "outcome": "This is the advanced unit in clinical classification, that builds on the fundamental knowledge and skills developed in the pre-requisite unit 300951 Clinical Classification and Coding.  At the completion of this unit students will be able to: \n\n Outcomes\n\n1. Explain the key design principles which underpin the development of effective classification systems\n2. Accurately classify and group complex clinical records and discharge summaries using ICD-10-AM/ACHI/ACS (manually and electronically)\n3. Discuss the process of disease registration and notification procedures\n4. Apply the rules associated with mortality coding\n5. Explain the relationship between terminologies and classifications and discuss their application in relation to the electronic health record\n6. Select the appropriate term to apply to the key concepts in classification and explain the process by which concepts from related or disparate classifications can be linked\n7. Analyse critically a variety of classification systems and make judgements about the clinical, management and other settings where they are appropriately applied\n8. Discuss contemporary and emerging issues in data classification at the national and international level",
  "passCriteria": "- Submit the Group Assessment report and do the presentation,\n- Take both Practical Exam & Final Exam,\n- Score a minimum of 50%  (i.e. 15 out of 30) in the Final Exam, and\n- Overall score a minimum of 50% in the unit. "
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d119"
  },
  "id": "300954",
  "name": "Activity Based Funding/Casemix and Data Quality",
  "offer": [
    "sp"
  ],
  "prerequisites": [
    "300951"
  ],
  "prerequisiteText": "300951 Clinical Classification and Coding ",
  "sfiaSkills": [
    {
      "id": "INAN",
      "level": 3
    }
  ],
  "category": "health",
  "description": "This unit will introduce students to Activity Based Funding and Casemix within the Australian healthcare system. It is designed to cover a variety of casemix classification systems for acute, non-admitted, sub-acute and mental health patients. Attention will be given to Diagnosis Related Groups (DRGs) with specific reference to the Australian Refined Diagnosis Related Groups (AR-DRGs) and the relationship to Activity Based Funding and purchasing models. Measuring performance with activity data and clinical costing methods will be explored. Emphasis will be placed on the impact of data quality as a critical component in achieving excellence in clinical costing, casemix and patient safety.",
  "assumedKnowledge": "Medical terminology and clinical classification",
  "approachToLearning": "In this unit, you will be engaged in a range of activities to support your learning. There are many resources available to assist you in this unit and university study more generally. The key activities and resources for this unit are outlined below. Learning materials for all the units will be accessible to enrolled students by login to the WSU online learning site ‘vUWS’. Copies of the lecture slides and audio/video recordings of the lectures will also be posted there, normally within 24 hrs of the lecture. Announcements and discussions on the units will also be placed on the vUWS site from time to time, and you should consult the site often so that you are aware of these. Failure to stay up-to-date with information on vUWS will not be accepted as an excuse.\n\nInteraction with the unit coordinator at their scheduled consultation times each week is possible for online mode students in person or by e-mail, telephone contact, or skype (by arrangement).\n\nOnline Students\nAll information and material relating to this unit will be available on vUWS. This unit will be run simultaneously in on-campus classroom delivery mode (internal students) and online. This means that the same learning materials will be made available to all sub-groups of students at the same time. Also, any within-semester continuous assessment work tasks will be identical and due for submission at the same time and by the same method, for all sub-groups. \n\nOnline mode students will be required to take any final exam scheduled in a unit at the same time as the on-campus mode students. Arrangements for online mode students to write final exams in these units will be announced close to the end of the semester after the official exam schedule becomes available.\n\nPlease feel free to contact the unit coordinator at any time, should you be experiencing difficulties or have any queries or comments about any unit: we would like to offer you any extra support necessary as an online mode student.",
  "outcome": " Outcomes\n\n1. Apply casemix classification and grouping systems used in health\n2. Explain the current landscape associated with ABF and Purchasing Models including the impact of the NEP, weighting and fee for service\n3. Analyse, apply and communicate the relationship between DRGs, administrative/clinical data and episode/casemix funding/payment/revenue systems, including activity based funding\n4. Explain the relationship between casemix classification and clinical costing\n5. Analyse audits and quality checks for clinical coding, costing and appropriate DRG allocation\n6. Evaluate quality and safety principles and theory for quality and performance management in healthcare\n7. Comprehend the impact of data quality as a critical component in achieving excellence in clinical costing, casemix, service quality and improved patient safety\n8. Discuss the importance of engaging clinicians in outcome analysis and improved performance",
  "passCriteria": "- Achieve a mark of at least 50% overall;\n- Complete and submit all the assessment activities; (Failure to submit all components without approval from the unit coordinator may result in a Fail Non Submission (FNS) grade).\n- Make equal contributions to the Group Assignment; (Failure to contribute equally to the group assignment may result in a Fail Non Submission (FNS) grade). Please see additional notes in relation to this matter in the individual assignment description below."
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d11a"
  },
  "id": "300955",
  "name": "Healthcare Data Environments",
  "sfiaSkills": [
    {
      "id": "DATM",
      "level": 3
    },
    {
      "id": "KNOW",
      "level": 2
    },
    {
      "id": "CORE",
      "level": 2
    },
    {
      "id": "ISCO",
      "level": 2
    },
    {
      "id": "INAS",
      "level": 1
    }
  ],
  "offer": [
    "sp"
  ],
  "prerequisites": [
    "300566"
  ],
  "prerequisiteText": "300566 Introduction to Health Informatics ",
  "category": "health",
  "description": "This unit extends the student’s knowledge of Health Informatics by introducing concepts relating to electronic communications within the health industry. It exposes students to a variety of environments used to create, store, transfer and deliver healthcare data. Areas include minimum data sets, data linkage, messaging concepts/standards, terminologies, healthcare evaluation, electronic health records and related standards, security, privacy and trust, medico legal, epidemiology and population health together with TeleHealth/ TeleMedicine approaches, methodologies, tools and techniques.",
  "approachToLearning": "Lecture:\nLectures are a key element of your learning environment in this unit. The lectures will focus on familiarising the students with the theoretical concepts of the unit content. Each lecture will set the context for the tutorial to follow and will highlight concepts and skills you will need for the formal final examination. Attendance in lectures is strongly recommended, and all content covered in lectures is examinable. All lectures will be recorded and made available on vUWS.\n\nTutorial:\nTutorials provide the opportunity for reinforcing and extending your learning in a more hands-on and interactive setting. The tutorial is designed for further discussion of the theoretical aspects of the unit, discussion and exploration of the practical concepts involved in health informatics, as well as familiarisation with and practice in the use of websites and online tools. Along with your lectures, tutorials are designed to help you develop the knowledge and skills that will form the basis upon which you will be assessed in the final exam, as well as give you the knowledge and skills required to complete the assignments. Tutorials also give you the opportunity to discuss your assignment progress and understanding of the unit content with your lecturers.\n\ne-Learning: vUWS\nTo support your learning in this unit, you will have access to the units site on the university's e-learning system, vUWS. On the vUWS site students will get access to: weekly schedule, teaching materials for each module (lecture notes and tutorial exercises), recordings of the lecture/tutorial sessions (normally within 1-2 days after the session), details of assessments and any unit announcements.\nThe unit coordinator will use vUWS announcements as the main communication channel to send messages to students, and should be checked for updates at least twice a week.  Failure to stay-up-to-date with information on vUWS will not be accepted as an excuse.\n\nNOTES FOR EXTERNAL/ONLINE STUDENTS \nThis unit will be run simultaneously in on-campus classroom delivery mode (internal students) and external/online mode. This means that the same learning materials will be made available to both sub-groups of students at the same time. Also, any within-semester continuous assessment tasks will be identical and due for submission at the same time and by the same method, for both sub-groups. \nExternal/online students can join the live lecture/tutorial sessions via the Zoom session by following the instructions given on the vUWS site.",
  "outcome": " Outcomes\n\n1. Evaluate the use of minimum data sets in LHD (local health district), State and National reporting and the importance of data linkage\n2. Evaluate the impact of Security, Privacy, Trust, Medico-Legal aspects and Ethics related to health data\n3. Analyse messaging concepts and standards and how it affects the interoperability between EMR systems\n4. Interpret the use of clinical terminology and classification systems in health\n5. Characterise the concepts of epidemiology and population health in relation to data capture, analysis and research\n6. Evaluate the purpose of healthcare evaluation in relation to accreditation/certification standards\n7. Critically evaluate and articulate purpose of electronic medical record (EMR) systems and functional e-Health applications",
  "passCriteria": "- Complete and submit all the assessment activities (4 x workshop portfolio, 3 x quizzes and report) AND\n- Achieve a mark of at least 50% overall."
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d11b"
  },
  "id": "300956",
  "name": "Healthcare Software and Systems",
  "sfiaSkills": [
    {
      "id": "IRMG",
      "level": 2
    },
    {
      "id": "DATM",
      "level": 3
    },
    {
      "id": "BSMO",
      "level": 2
    },
    {
      "id": "DESN",
      "level": 2
    }
  ],
  "offer": [
    "sp"
  ],
  "prerequisites": [
    "300566"
  ],
  "prerequisiteText": "300566 Introduction to Health Informatics ",
  "category": "health",
  "description": "In this unit students will learn the concepts underpinning the services computing paradigm of \"bridging the gap between Business Services and IT Services\". Services Computing technology includes Web services and serviceoriented architecture (SOA), business consulting methodology and utilities, business process modelling, transformation and integration. Students will learn, through the development of practical examples, how to utilise these technologies within a healthcare context.",
  "approachToLearning": "All information and material relating to this unit will be available on vUWS. This unit will be run simultaneously in on-campus classroom delivery mode (internal students) and online. This means that the same learning materials will be made available to all sub-groups of students at the same time. Also, any within-semester continuous assessment work tasks will be identical and due for submission at the same time and by the same method, for all sub-groups. \n\nLearning materials for all the units will be accessible to enrolled students by login to the WSU online learning site ‘vUWS”. Copies of the lecture slides and video/audio recordings of the lectures will also be posted there, normally within 24 hrs of the lecture. Announcements and discussions on the units will also be placed on the vUWS site from time to time, and you should consult the site often so that you are aware of these. Failure to stay-up-to-date with information on vUWS will not be accepted as an excuse. \n\nInteraction with the unit coordinator at their scheduled consultation times each week is possible for all students in person. A 1-hour weekly tutorial session will be delivered for both online and campus delivery students via an online ‘chat-style’ platform which will provide the opportunity for students to interact with the tutor as well as ask any questions on unit subject matter.",
  "outcome": " Outcomes\n\n1. Describe the purpose and the basic functional and practical elements of Web Services for healthcare applications (including an overview of XML related technologies)\n2. Design high level user and technical specification of Web Services for healthcare applications\n3. Identify and articulate areas within healthcare where Web Services can be utilised, and how this might be achieved\n4. Identify and articulate the particular needs of business process modelling, transformation and integration within healthcare\n5. Describe and analyse the operations of specific Web Services in healthcare applications, including Clinical Decision Support and Health Portals\n6. Apply highly developed and technically advanced written presentation skills in describing Web Services for healthcare applications",
  "passCriteria": "-\tAchieve a mark of at least 50% overall;\n-\tComplete and submit all the assessment activities (2 assignments, class quiz and final exam); (Failure to submit all components without approval from the unit coordinator may result in a Fail Non Submission (FNS) grade)"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d11c"
  },
  "id": "300958",
  "name": "Social Web Analytics",
  "sfiaSkills": [
    {
      "id": "IRMG",
      "level": 3
    },
    {
      "id": "INAN",
      "level": 3
    }
  ],
  "offer": [
    "sp"
  ],
  "prerequisites": [
      [
       "300700",
       "200263",
       "200032"
      ]
],
  "prerequisiteText": [
    "For students not enrolled in 3734 Bachelor of Data Science: 300700 Statistical Decision Making or 200263 Biometry or 200032 Statistics for Business"
  ],
  "category": "datsci",
  "description": "The Social Web provides everyone with a voice, information from Facebook, Twitter and Google+ should allow us to identify trends and relationships in society. Whilst this has interest on a personal level, the killer-apps will be in analyzing such data for business; tracking the buzz around a new product, understanding the links between customers etc. This unit will introduce its students to the Social Web data that is available, and blend computational, mathematical and statistical concepts to allow extraction and analysis of such data.",
  "assumedKnowledge": "Students are expected to be familiar with fundamental computer programming concepts.",
  "approachToLearning": "This unit will be offered on the Parramatta, Kingswood and Campbelltown campuses over a thirteen week period. Each week will consist of a two hour lecture and a two hour computer lab class.\n\nThe assessments will consist of weekly online quizzes, of which the best 5 marks are counted, a group project, and a final examination. The assessment items during the semester are designed to gauge your achievement and performance in relation to the unit learning outcomes; they are also an excellent preparation for the final examination, which is a summative examination with a threshold requirement. Students are encouraged to study learning materials weekly, since later topics are related to the early topics. It may be difficult to understand latter topics without understanding the former topics.\n\nAll teaching materials will be released on vUWS as the semester progresses. Moreover, all lectures will be recorded and uploaded to vUWS. – Please note that these online resources are meant to aid revision; they are NOT MEANT TO, AND CANNOT, REPLACE FACE TO FACE TIME during the weekly lectures and computer lab classes. Active participation in lectures and labs is crucial for mastering the learning outcomes: Records from previous years show that poor attendance in lectures and labs is highly correlated with failing the unit. The members of the teaching team are there to help you achieve the learning outcomes and succeed in this unit, but you need to make use of this offer. \n\nLectures \nData Analysis is based on understanding the logic behind the techniques which requires understanding mathematics/statistics. While this unit is too short to give all theoretical explanations of the techniques you will see, it is crucial that you know how a statistical method works; only then can you decide whether it is applicable to a situation in which you’re interested. The objective of the lecture is to explain both how a statistical technique works and how to apply it.\n\nComputer Labs\nUnderstanding how a method works is the first step; being able to apply it in practice is the second. These computer lab classes will give you the opportunity to use theory in practice: We use the powerful open source statistics software R for teaching; it is a standard for professional statisticians all over the world. Students are encouraged to spend time with R in their own time, since they are assumed to have a basic understanding in R programming language, and expected to excel their programming skills as the semester progresses.",
  "outcome": "Students are expected to gain an understanding of the fundamental concepts of Web based social networks as well as the ability to apply modern mathematical and statistical techniques to analyse the social network properties.  Each of the assessment tasks has been designed to evaluate the extent to which you have achieved the learning outcomes.\n\n Outcomes\n\n1. Extract and process formatted data from social Web sources.\n2. Use computer algorithms to visualise complex social Web interactions.\n3. Use mathematical and statistical methods to identify significant trends in the social Web.\n4. Use mathematical and statistical techniques to identify critical regions of a social network.\n5. Partition a social network into clusters.\n6. Choose an appropriate metric to measure the interaction between social network nodes.\n7. Compute the popularity, authority and hub scores for network nodes.",
  "passCriteria": "1. Obtain at least 40% for the Final Exam. \n2. Obtain at least 50% overall."
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d11d"
  },
  "id": "300960",
  "name": "Mobile Applications Development",
  "sfiaSkills": [
    {
      "id": "PORT",
      "level": 3
    },
    {
      "id": "TEST",
      "level": 2
    },
    {
      "id": "PROG",
      "level": 4
    },
    {
      "id": "EMRG",
      "level": 2
    }
  ],
  "offer": [
    "sp",
    "sua"
  ],
  "prerequisites": ["300581"],
  "prerequisiteText": [
    "For students enrolled in 3687 Bachelor of Information Systems, 3688 Bachelor of Information Systems Advanced, 3744 Bachelor of Information Systems/Bachelor of Business, 3745 Bachelor of Information Systems Advanced/Bachelor of Busines,  6036 Diploma in Information and Communications Technology/Bachelor of Information Systemss or 6040 Diploma in Information and Communications Technology/Bachelor of Information Systems - 300582 Technologies for Web Applications",
    "For students enrolled in 3639 Bachelor of Information and Communications Technology - 300581 Programming Techniques",
    "For students enrolled in 3684 Bachelor of Information and Communications Technology (Advanced)- 300903 Programming Techniques (Advanced)",
    "For students enrolled in 3506 Bachelor of Computer Science - 300147 Object Oriented Programming OR 300582 Technologies for Web Applications"
  ],
  "category": "dev",
  "description": "This unit teaches technologies and programming languages for developing applications on common mobile platforms, such as Android and iOS. Students will learn skills for developing programs on the above platforms, along with in-class sample applications that highlight platform-specific implementation details.",
  "approachToLearning": "This unit comprises lectures and laboratory/tutorial sessions. Lectures and tutorials are designed to scaffold learning and assist students to gain an understanding of the unit content and subsequently to complete their assessment tasks. Students should note that attendance is usually critical for students to gain full value from this unit and is closely correlated with student success and grades. Students will be encouraged to participate in all class activities as non-engagement may seriously undermine a student's ability to satisfactorily complete the unit.\nAttendance at laboratory/tutorial classes is considered mandatory. If a student is unable to attend a class their tutor should be notified so that an option to complete set work can be provided in the next session. Face to face sessions often highlight pitfalls and known difficulties not always apparent from purely on-line study and examples.",
  "outcome": "This unit teaches technologies and programming languages for developing applications on common mobile platforms, such as Android and iOS. Students will learn skills for developing programs on the above platforms, along with in-class sample applications that highlight platform-specific implementation details.\n\nUpon successfully completing this unit, students will be able to:\n\n Outcomes\n\n1. Explain the theoretical fundamental of mobile technologies\n2. Identify strengths, opportunity and limitation of platforms, development tools and programming languages for mobile applications\n3. Apply common user interface elements into applications\n4. Install mobile development tools, such as Android and iOS\n5. Develop programs for mobile platforms\n6. Implement input and interaction\n7. Manipulate files and databases\n8. Employ advanced user interface methods to produce graphical applications\n9. Apply data management and security in mobile applications",
  "passCriteria": "Obtain at least 50% as a total value of all your assessment scores and have submitted all mandatory assessments. The mandatory assessments are Tutorials and Labs, Assignment 1, Assignment 2 and Quiz."
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d11e"
  },
  "id": "300961",
  "name": "Social Computing",
  "sfiaSkills": [
    {
      "id": "RSCH",
      "level": 2
    },
    {
      "id": "CNSL",
      "level": 3
    },
    {
      "id": "BPRE",
      "level": 2
    },
    {
      "id": "ORDI",
      "level": 3
    }
  ],
  "offer": [
    "sp"
  ],
  "prerequisites": [],
  "prerequisiteText": "",
  "category": "datsci",
  "description": "Rapid growth of computational devices connected to the internet such as mobile phones, tablets, personal computers have made us into a digitally connected society. This has enabled us to develop a new computing paradigm: Social Computing to enhance ways we can fulfil a range of primary and secondary human needs. Already many new businesses have evolved making use of these possibilities surpassing the number of users in corresponding conventional businesses such as retail, transportation and hotel chains. In this unit you will learn the fundamental concepts of Social Computing, how Social Computing is evolving, explore interaction models of social networks, analyse a few reported cases that relate to social computing in detail to understand the impact on society and businesses, and explore ways to enhance a range of livelihood activities and future possibilities. This unit will also cover underpinning technologies related to social computing such as Web 2.0, knowledge management and related security and privacy issues.",
  "approachToLearning": "This unit is delivered as a two-hour workshop once a week throughout the semester. In the workshops, we explore and discuss issues related to the topic for that week. Students need to explore these further during the week and on 3 occasions write a Blog reflecting on what they have learned. Students further explore the essential social computing concepts that they have learned by working on a group project to enhance an existing social scenario using Social Computing paradigm and presenting it to the class. This activity is aimed at fostering both analysis and synthesis skills.\n\nStudents as part of the assessment activities need to write reports reflecting on what has been learned to enhance deep learning.\n\nThis unit is delivered using a blended learning approach. During the workshops, students will be involved in individual and group-based brainstorming sessions using “GoSoapbox” and during class discussion, they can get feedback to shape their individual understanding. Students experience digital modes of communication and interactions through writing Blogs, responding to comments and also creating a Wiki as part of their project work. Students can consult with academics both face to face and using applications such as Skype or Zoom.\n",
  "outcome": "Upon successfully completing this unit, students will be able to:\n\n Outcomes\n\n1. Describe the impact of Social Computing taking examples from our daily life\n2. Describe characteristics of Social Computing and explain these characteristics using examples\n3. Describe the factors and technologies that enabled wide spread use of social computing\n4. Analyse a specific scenario related to lack of timely information leading to unsatisfactory outcomes and develop a solution based on a Social Computing paradigm to transform these scenarios\n5. Explain the rapid evolution of Social Computing using theories relevant to technology diffusion\n6. Synthesise the future impact on Social Computing on individuals, organisations and the society as a whole",
  "passCriteria": "There are 3 assessment items in this unit, designed for you to demonstrate that you have achieved the unit learning outcomes. Completion and submission of all assessment items which have been designated as mandatory or compulsory are essential to receive a passing grade. \n\nTo pass this unit you must satisfy ALL of the following:\n-\tAchieve at least 50% overall. \n-\tAchieve 50% for Assignment 3.\n-\tBe present in the class on the days' assessments are discussed and student presentations relating to assignments are due. It is important to actively participate in the workshop discussions which will be assessed through GoSoap box activities. If a student cannot come to the class on assessment days prior approval is required. If a student is not well at the time a medical certificate is required."
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d11f"
  },
  "id": "300966",
  "name": "The Cosmos in Perspective: Information and Life",
  "offer": [
    "au"
  ],
  "prerequisites": [],
  "prerequisiteText": "",
  "sfiaSkills": [],
  "description": "Across the world and across history, humans have wondered about the universe, its history and evolution.  From the Big Bang to the end of the Universe, from our own Solar System to the farthest superclusters of galaxies, our knowledge and understanding of the Universe in which we live is growing at an amazing rate. In this unit, we survey the cosmos from two different perspectives relating to complexity: The perspectives of Information and Life. From the information perspective, we examine the growth of complexity and structure in the universe, and consider the uses of information theory to understand cosmic evolution. We know that Life exists in the Universe, but know little about how common it might be - we consider the requirements for life to exist and the possibility of other life in the Universe by examining the cosmos at scales from planets to the universe. We consider cultural perspectives on the cosmos, including that of indigenous Australians. This unit is non-technical and is suitable as an introductory unit for students in computing, engineering and science, and as a general education unit for students in all other areas.",
  "assumedKnowledge": "N/A",
  "approachToLearning": " <latex>\\begin{tabular}{|m{0.15\\textwidth}|m{0.8\\textwidth}|}\n\\hline\n\\rowcolor{lightgray}\\textbf{Type}&amp;\n\\textbf{Approach}\\\\\\hline\nLecture&amp;\nLectures are designed to promote an interest in science, computing and astronomy as well as critical thinking and the universe around us. This course should stimulate discussion and summarise key ideas present in the study of the cosmos.\\\\\\hline\nPractical&amp;\nThe practicals will be held at the Western Sydney University Penrith Observatory (\\url{http://www.westernsydney.edu.au/observatory}). All four scheduled practicals will run in a week when no tutorials are scheduled and will run from 6pm to 9pm. Attendance at the practicals is optional.\\\\\\hline\nTutorial&amp;\nTutorials will help students to develop ideas presented in lectures as well as prepare for written assignments and go over topics in more detail where necessary. Tutorials will run in a week when no practicals are scheduled.\\\\\\hline\n\\end{tabular}</latex>",
  "outcome": "After successful completion of this unit, students will be able to:\n\n Outcomes\n\n1. Describe and compare scientific and cultural views of the history and nature of the Universe, including indigenous Australian views;\n2. Describe the necessary conditions for life and how species evolve and grow to complexity and uses of information theory to understand cosmic evolution;\n3. Describe how life depends on energy from the stars;\n4. Recognise the significance of solar system dynamics in providing the thermal requirements for life;\n5. Discuss modern theories of star and planet formation and evolution, and recognise the types of stars in galaxies;\n6. Theorise on the possibilities of other life forms;\n7. Discuss the development of consciousness;\n8. Postulate on how the universe will evolve, and what this means for the future of life in the universe.",
  "passCriteria": "Students MUST achieve 50% or better on the Class Test AND attain an overall mark of at least 50%. All assessment items are mandatory."
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d120"
  },
  "id": "301031",
  "name": "Computer Algebra",
  "offer": [
    "sp"
  ],
  "prerequisites": [
    "300672"
  ],
  "prerequisiteText": "300672 Mathematics 1A ",
  "sfiaSkills": [],
  "category": "mat",
  "description": "This unit will introduce the popular computational software Mathematica, through which students will explore and investigate real-world mathematical problems. The unit promotes an experimental side of mathematics and will employ symbolic computation to gain insight and intuition into problems, to discover mathematical patterns and relationships, and create impressive graphics to expose mathematical structures.",
  "assumedKnowledge": "Students should be comfortable with high school level of Mathematics. This is required to carry out more advanced projects in the unit.",
  "approachToLearning": "This unit enhances learning through the following means:\n\nLectures: Four hours of detailed lectures for a total of five weeks, in which theory, examples and various ideas are presented to the student.\n\nPracticals: Four hours of practical work for the remaining weeks to write code, to investigate the exercises and to complete two assigned projects. The students have the opportunity to interact with the tutor and other students.\n\nvUWS: Feedback on assignments and exercises, with solutions and code is presented in vUWS for the student to review.",
  "outcome": "Mathematica is one of the most powerful versatile computing softwares which increasingly has been used by both engineers and scientists and banks and financial institutions to tackle their problems. With the current surge of use of computer algebra software by companies and financial institutions, this unit would give students a competitive credential for jobs in the finance and engineering sectors.\n\nThe unit Computer Algebra is very much a practical one, showing students how to use Mathematica and then letting them tackle some realistic (mathematical) problems using it. The mathematical background that is needed to follow the unit is fairly minimal. No programming background is required. The unit is suitable for Level 2 students and is suitable for students in Mathematics pathways as well as students in Computer Science, Engineering or Finance pathways. Students from other pathways (e.g., Business) will be most welcome.\n\nA broad outcome of the course is to promote understanding Mathematics by using computers to explore, investigate and experiment, and consequently arriving at scientific conclusions. In details, upon successfully completing this unit, students will be able to:\n\n Outcomes\n\n1. Compute complex numerical expressions by utilising the computational software Mathematica\n2. Handle symbolic computations\n3. Combine different styles of programming (functional, procedural and list-based) to write powerful programs\n4. Analyse, investigate, gain insight and intuition and then solve real-world mathematical problems by using Mathematica symbolic computational feature\n5. Create complex graphics and solving equations by combining Mathematica graphics capabilities",
  "passCriteria": "- submit all assessment items;\n- achieve a total mark of at least 50%; AND\n- achieve a mark of at least 40% for the final exam.\n"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d121"
  },
  "id": "301032",
  "name": "Making Sense of Data",
  "offer": [
    "sp"
  ],
  "prerequisites": [
    [
      "300700",
      "200263",
      "200032"
    ]
  ],
  "prerequisiteText": "300700 Statistical Decision Making OR 200263 Biometry OR 200032 Statistics for Business ",
  "sfiaSkills": [
    {
      "id": "PROG",
      "level": 3
    },
    {
      "id": "VISL",
      "level": 2
    },
    {
      "id": "INAN",
      "level": 3
    }
  ],
  "category": "datsci",
  "description": "The unit builds on the basic statistical concepts introduced in first year, and also prepares students for broader application of statistics for those majoring in science or business. Topics include hypothesis testing; analysis of categorical data; analysis of variance; non-parametric methods; re-sampling (cross validation/bootstrapping); Introduction to visual data analysis; simple Multivariate statistics and sampling and design.",
  "assumedKnowledge": "Basic Statistics",
  "approachToLearning": "This unit is one in which the later topics build on material covered earlier in the unit. As such, it is critical that students work consistently on this unit throughout the semester. Through the exams, it is intended to examine a student's understanding and ability to apply appropriate techniques rather than the ability to rote learn.\n\nLecture - Lectures are a two (2) hour class where information on each topic will be presented. Examples will also be presented. Lectures notes will be available from vUWS and students are expected to have read these notes at least once before the lecture. These lecture notes should be printed and brought to the lecture. Students should also bring the recommended text book to the lecture.\n\nPractical - The first hour of the practical will be used for discussion and answering selected questions from the previous week's topic which are to be completed before the practical each week. This is a chance for students to discuss any problems or concerns with the material presented in the previous lecture. The second hour students will learn how to complete questions from the previous week's topic using the statistical software R. Each week there will questions to be completed in R. One question will be presented by the lecturer explaining how to complete the question in R. The students will then attempt another similar question which will be checked. There is no practical in the first week.",
  "outcome": "Upon successfully completing this unit, students will be able to:\n\n Outcomes\n\n1. Apply the fundamentals of statistical hypothesis testing\n2. Use analysis of variance methods to solve practical problems\n3. Utilize re-sampling methods to analyse data (cross validation / bootstrapping)\n4. Employ statistical analysis of data using simple multivariate\n5. Introduce the area of visual data analysis\n6. Implement the above statistical methods using R",
  "passCriteria": "Achieve a mark of at least 50% when you combine the marks of the four assessments tasks, Mid Semester Test, Computing Test, Group Project and Final Exam."
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d122"
  },
  "id": "301034",
  "name": "Predictive Modelling",
  "sfiaSkills": [
    {
      "id": "PROG",
      "level": 2
    },
    {
      "id": "INAN",
      "level": 2
    },
    {
      "id": "TECH",
      "level": 2
    }
  ],
  "offer": [
    "au"
  ],
  "prerequisites": [
      [
       "300700",
       "200263",
       "200032"
      ]
],
  "prerequisiteText": [
    "For students not enrolled in 3734 Bachelor of Data Science, 3769 Bachelor of Data Science or 3770 Bachelor of Applied Data Science - 300700 Statistical Decision Making or 200263 Biometry or 200032 Statistics for Business."
  ],
  "category": "datsci",
  "description": "Predictive Modelling forms the basis for understanding relationships between input characteristics and outcomes. Predicting insurance risk, defaults on loans and probability of life on other planets are all examples of Predictive Modelling. In this unit we will look at traditional statistical approaches and some machine learning for predictive modelling.",
  "approachToLearning": "The lecture will be offered simultaneously in Parramatta and Campbelltown (via access grid). The practicals will be two hours in Parramatta and Campbelltown (separately), in a computer lab.\nThe idea for the lecture is to provide the necessary background to understand the techniques that we apply in the practicals. Even though it is (at times) possible to apply the techniques without understanding what is going on \"behind the scenes\", this understanding is necessary to realise in which cases we can expect a particular technique to work (it will also be necessary to understand what is going on to pass the exam). \n\nAs most of the assessments (including the quizzes and the exams) are fairly practical, it is helpful to repeat and practice the lessons learned each week - this will help you to become confident (and quicker) with some of the simple problems, and leave you with more time to think about the actual problems that you are meant to solve in the assessments. \n\nThe access grid delivery and availability of teaching materials on vUWS appear to tempt some students to not attend the lecture. From experience, poor attendance is correlated with poor marks and failing the unit. The material on vUWS is meant to help you revise what you have heard in class. Just attending class and the practicals will usually not be sufficient to achieve good marks - you will need to spend additional time practicing every week outside the lecture and practical times. ",
  "outcome": " Outcomes\n\n1. Apply multiple linear regression\n2. Apply linear models, and generalised linear models\n3. Apply simple Machine Learning techniques\n4. Determine an appropriate model in various scenarios\n5. Use computer software (R) to achieve the above",
  "passCriteria": "<p>-Achieve a mark of at least 50% overall; and </p>\n<p>-achieve a mark of at least 30% of the lab based exam.</p>"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d123"
  },
  "id": "301035",
  "name": "Environmental Informatics",
  "offer": [
    "sp"
  ],
  "prerequisites": [
    [
      "300700",
      "200263",
      "200032"
    ]
  ],
  "prerequisiteText": "300700 Statistical Decision Making OR 200263 Biometry OR 200032 Statistics for Business ",
  "sfiaSkills": [
    {
      "id": "VISL",
      "level": 3
    },
    {
      "id": "INAN",
      "level": 3
    },
    {
      "id": "METL",
      "level": 2
    }
  ],
  "category": "datsci",
  "description": "Today, the environment is becoming more and more in the public eye. Methods of environmental monitoring and data analysis are an important source of information for science, business and government regulation. This unit aims to give students a good introduction to environmental informatics and the analysis of spatio-temporal data.",
  "approachToLearning": "Lecture\nThere is one two-hour lecture each week. The theory for each topic as well as examples will be presented in the lecture. The lecture notes will be available one week prior to the lecture and it is expected that all students have read through the notes at least once. There are exercises for students to attempt after the lecture. This unit is one in which the later topics build on material covered earlier in the unit. As such, it is critical that students work consistently on this unit throughout the semester.\n\nPractical\nThere is one two-hour tutorial/lab each week. In the tutorial/lab, problems relating to the exercises are discussed.",
  "outcome": " Outcomes\n\n1. Design an environmental sampling program.\n2. Use and interpret control charts\n3. Estimate and interpret Tolerance and Prediction Intervals\n4. Use statistical software to conduct time series analyses\n5. Use statistical software to analyse spatial data",
  "passCriteria": "Obtain a minimum combined overall mark of 50/100"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d124"
  },
  "id": "301107",
  "name": "Analytics Programming",
  "sfiaSkills": [
    {
      "id": "PROG",
      "level": 2
    },
    {
      "id": "DBAD",
      "level": 2
    },
    {
      "id": "METL",
      "level": 3
    },
    {
      "id": "DATM",
      "level": 2
    },
    {
      "id": "CNSL",
      "level": 1
    },
    {
      "id": "INAN",
      "level": 2
    }
  ],
  "offer": [
    "au"
  ],
  "prerequisites": [],
  "prerequisiteText": "",
  "category": "datsci",
  "description": "This unit covers the use of computers and computer programming for Data Science. After briefly considering spreadsheet systems, the unit will consider programming in the statistical system \"R\" in depth. Finally, other special purpose languages will be touched briefly (eg. SQL).",
  "assumedKnowledge": "Familiarity with computer software programs such as Excel.",
  "approachToLearning": "Lectures: These sessions will be used to introduce concepts.\nPracticals: These sessions will be used to reinforce concepts introduced in lecture sessions.  The sessions are held in computer labs to allow the use of programming tools (e.g. the Rstudio GUI) for a variety  of  Data Science problems.\n",
  "outcome": " Outcomes\n\n1. Use Excel to manage and manipulate data\n2. Manage and manipulate data using R and R-Studio; including reading and writing data files\n3. Write R programs to conduct Data Science tasks\n4. Use basic SQL to manage and manipulate data\n5. Apply Simulation techniques to Data Science tasks\n6. Write reports using Markdown and R-Markdown",
  "passCriteria": "- Attempt all assessment tasks\n- Score a minimum of 50% of weighted score",
  "unit": {
    "id": "301107",
    "sfiaSkills": [
      {
        "id": "PROG",
        "level": 2
      },
      {
        "id": "DBAD",
        "level": 3
      },
      {
        "id": "METL",
        "level": 5
      },
      {
        "id": "DATM",
        "level": 5
      },
      {
        "id": "CNSL",
        "level": 5
      },
      {
        "id": "INAN",
        "level": 3
      }
    ]
  }
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d125"
  },
  "id": "301108",
  "name": "Thinking About Data",
  "offer": [
    "au"
  ],
  "prerequisites": [],
  "prerequisiteText": "",
  "sfiaSkills": [
    {
      "id": "INAN",
      "level": 2
    },
    {
      "id": "METL",
      "level": 2
    }
  ],
  "category": "datsci",
  "description": "This Unit covers basic concepts of data centric thinking. The main areas discussed are; Populations and Samples; Sampling concepts; Types of Data; Descriptive Methods; Estimation and Inference; Modelling. The Unit takes a computational and nonparametric approach, before briefly discussing theoretical concepts and distribution theory.",
  "assumedKnowledge": "2 Unit High School Mathematics.",
  "approachToLearning": "The unit consists of face-to-face lectures, and practical/tutorial sessions. The lectures cover the essential material of the unit and provide students with an opportunity to investigate methods and ask questions.\nIn the practical/tutorial sessions the participants learn how to use computer software to apply the methods learnt in lectures. Students should attend lectures to gain an understanding of the concepts and complete the lab work to show proficiency in the material.<br>",
  "outcome": " Outcomes\n\n1. Describe types of data with reference to real world examples\n2. Identify data collection strategies that provide unbiased and reliable data\n3. Use computer software to estimate population parameters of interest\n4. Use computer software to make inferences about population parameters, both non-parametrically and using Normal theory\n5. Build and interpret simple predictive models using computer software\n6. Describe and identify common statistical mistakes",
  "passCriteria": "Achieve a mark of at least 50% overall."
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d126"
  },
  "id": "301109",
  "name": "Visual Analytics",
  "sfiaSkills": [
    {
      "id": "INAN",
      "level": 2
    },
    {
      "id": "VISL",
      "level": 4
    }
  ],
  "offer": [
    "sp"
  ],
  "prerequisites": [],
  "prerequisiteText": "",
  "category": "datsci",
  "description": "This unit introduces the fundamentals and technologies of visual analytics to understand big data.  It covers major concepts of information visualisation, human computer perception and methods for visual data analysis. Students will learn knowledge and skills for identifying suitable visual analytics techniques, methods and tools for handling various data sets and applications. The unit provides students with opportunities to explore novel research in visual analytics and visualisation.",
  "assumedKnowledge": "Familiarity with computer software programs, such as Microsoft Office.",
  "approachToLearning": "<p>This unit is a 10 credit point unit and will require your full and continuous attention to maintain the highest possible grades. It is expected that you will spend at least 10 hours each week (on average) which includes face-to-face (lectures and tutorials/practicals) and self study (reading online materials and teaching materials, and completing assessment tasks). Some weeks you will spend more time on learning activities and assessments and in other weeks the workload will be somewhat less. Lectures are a key element of your learning environment in this unit. The lectures will focus on familiarising the students with the theoretical concepts of the unit content. Whilst attendance in lectures is not compulsory, it is highly recommended. All content covered in lectures is examinable. The lecture sets the context for the practical the following week and will highlight concepts and skills you will need for the formal final examination. Practicals/tutorials provide the opportunity for learning in a smaller class context. The practicals/tutorials are designed for further discussion of the theoretical concepts covered in lectures, as well as exploration of the practical concepts and samples involved in developing programs for computer graphics. Along with your lectures, the practicals/tutorials are designed to help you develop the knowledge and skills that will form the basis upon which you will be assessed in the quiz, as well as give you the knowledge and skills required to complete the assignments. The practicals/tutorials enables students to maintain adequate performance and continuity of their tutorial/practical program and tutors to maintain contact, monitor their students progress as well as provide verbal feedback of your work and understanding outside of formal assignment feedback. Students should access vUWS and/or check their student email account(s) at least twice a week for teaching materials, announcements and reading materials, documents and other information.</p>",
  "outcome": "This unit introduces the fundamentals and technologies of visual analytics to understand big data.  It covers major concepts of information visualisation, human computer perception and methods for visual data analysis. Students will learn knowledge and skills for identifying suitable visual analytics techniques, methods and tools for handling various data sets and applications. The unit provides students with opportunities to explore novel research in visual analytics and visualisation.  \n\n Outcomes\n\n1. Explain the purpose of information visualisation and visual analytics\n2. Identify strengths, limitations and opportunity of visualisation and visual analytics techniques\n3. Apply common visualisation techniques for relational and multi-dimensional data\n4. Identify dimensionality reduction methods for high dimensional data\n5. Explain methods for spatio-temporal data visualisation\n6. Employ common visualisation and visual analytics tools for big data analysis",
  "passCriteria": "Obtain at least 50% as a total value of all your assessment scores and satisfactory marks for tutorials (i.e. at least 30% in average)"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d127"
  },
  "id": "301110",
  "name": "Applications of Big Data",
  "sfiaSkills": [
    {
      "id": "METL",
      "level": 3
    },
    {
      "id": "ITOP",
      "level": 3
    },
    {
      "id": "DATM",
      "level": 3
    },
    {
      "id": "DBAD",
      "level": 3
    }
  ],
  "offer": [
    "sp"
  ],
  "prerequisites": [
    [
      "301107",
      "300580"
    ]
  ],
  "prerequisiteText": "301107 Analytics Programming OR 300580 Programming Fundamentals ",
  "category": "ops",
  "description": "Many techniques and tools have been developed over the past decade to cope with the ever-growing needs for the processing and analysis of big data. This unit will cover the key techniques that have been widely used in big data applications, such as relational and Not Only Structured Query Language (NoSQL) databases, Web Services, parallel and cloud computing, MapReduce, Hadoop and its eco-system. It aims to introduce the emerging technologies and applications in big data to students, and keep up with the latest trends in the industry.",
  "assumedKnowledge": "Knowledge of computer software, databases, and entry-level statistics.",
  "approachToLearning": "Lectures - Lectures are designed to introduce students to this emerging technology and get updated on the major trends behind big data. Students will also be taught the important concepts and principles for big data processing and analytics, including databases, parallel computing and data wrangling.\nPracticals - Practicals will assist students to acquire and develop the necessary practical skills required for big data processing and analytics. In particular, students will obtain hands-on experiences in Python programming, one of the most popular and powerful languages for data analysis, and database management skills such as SQL and NoSQL query methods, as well as the use of MapReduce framework to solve practical big data problems.",
  "outcome": " Outcomes\n\n1. Explain the major trends and latest development in big data technology\n2. Describe a selection of major techniques in use today for big data storage and processing, including NoSQL, MapReduce, cloud computing, web services\n3. Build tools to obtain data from various sources and in different formats\n4. Evaluate the relative strengths and limitations of relational and NoSQL database systems and recommend the most appropriate solution to data storage and access for different application scenarios\n5. Employ HDFS and Hadoop for data storage and manipulation on parallel platforms\n6. Select and apply appropriate tools from the Hadoop eco-system for big data management tasks",
  "passCriteria": "- Attempt all quizzes\n- Submit the assignment\n- Attempt the final exam\n- Score a minimum of 50% of weighted score"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d128"
  },
  "id": "301111",
  "name": "Discovery Project",
  "offer": [
    "sp"
  ],
  "prerequisites": [
    "301033",
    "301108",
    "301107"
  ],
  "prerequisiteText": "301033 Introduction to Data Science AND 301108 Thinking About Data AND 301107 Analytics Programming ",
  "sfiaSkills": [],
  "category": "datsci",
  "description": "In this unit students will gain experience in applying data science skills and using knowledge gained during their bachelor's course of their primary discipline. Students will carry out a real life project transforming data to knowledge under the supervision of an academic mentor. Students will develop a knowledge discovery project proposal and carry out a literature review highlighting the current status of the problem. Assisted by a mentor they will apply the data science skills learned through-out the degree and produce a final discovery project report and/or interactive project tool and give an oral presentation.",
  "assumedKnowledge": "Completed the bachelor's degree units in the students primary discipline.",
  "approachToLearning": "In this Unit students undertake a major project to consolidate all the learnings and activities of the Bachelor of Data Science. \n",
  "outcome": " Outcomes\n\n1. Design a data driven knowledge discovery project plan and develop an investigative project proposal\n2. Collect, integrate, clean and prepare the data source relevant to the problem being studied\n3. Undertake self-directed study and literature search relevant to the problem being investigated\n4. Undertake a computational and/or analytical approach in problem solving and predictive modelling\n5. Undertake a multidisciplinary project\n6. Write and produce a comprehensive research report in a logical, concise and professional manner\n7. Present a project and its results to an audience in an oral presentation",
  "passCriteria": "Achieve a mark of at least 50% overall."
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d129"
  },
  "id": "301123",
  "name": "Management Analytics",
  "offer": [
    "sp",
    "au"
  ],
  "prerequisites": [],
  "prerequisiteText": "",
  "sfiaSkills": [
    {
      "id": "METL",
      "level": 2
    },
    {
      "id": "BSMO",
      "level": 2
    },
    {
      "id": "INAN",
      "level": 2
    },
    {
      "id": "MEAS",
      "level": 2
    },
    {
      "id": "VISL",
      "level": 3
    }
  ],
  "category": "datsci",
  "description": "Management Analytics provides students with introductory knowledge and skills in identifying, analysing and interpreting data relevant to Business, Human Resources and Management. In order to develop evidence-based decision-making skills, students will learn how to work with data. Students will organise and summarise data, present data visually and design surveys for new data collection and use. Students will develop skills in understanding decision-making models and forecasting as a means of improving business processes and HR, management and business metrics.",
  "assumedKnowledge": "HSC maths (2 unit desirable) or equivalent.",
  "approachToLearning": "The theory for each topic as well as examples will be presented in the online lecture. The online lectures have been broken into small sub topics. Students are expected to view each of the sub topic videos for the weekly topic before the weekly tutorial.\n\nThis unit is one in which the later topics build on material covered earlier in the unit. As such, it is critical that students work consistently on this unit throughout the semester. Through the exam, it is intended to examine a student's understanding and ability to apply appropriate techniques rather than the ability to rote learn.",
  "outcome": "Upon successfully completing this unit, students will be able to:\n\n Outcomes\n\n1. Recognise the importance of communicating with data in Business, Management and Human Resource contexts\n2. Demonstrate knowledge of evidence-based decision-making techniques in business, human resources and management\n3. Organise and summarise numerical data\n4. Manipulate, analyse and graph data using Excel\n5. Employ appropriate statistical methods and techniques in given situations\n6. Understand the basics of forecasting in Business, Human Resource and Management contexts\n7. Design survey tools for data collection and analysis",
  "passCriteria": "<p>- attempt all assessment components which are tutorial quizzes (at least one), the group assignment, the group presentation and the final exam;\n</p>\n<p>- attain a minimum combined overall mark of 50% (50/100); and\n</p>\n<p>- score at least 40% (20/50) in the final examination.</p>"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d12a"
  },
  "id": "301124",
  "name": "Ethical Hacking Principles and Practice",
  "sfiaSkills": [
    {
      "id": "PENT",
      "level": 3
    },
    {
      "id": "SCAD",
      "level": 3
    }
  ],
  "offer": [
    "au"
  ],
  "prerequisites": [
    [
      "300565"
    ],
    "300582"
  ],
  "prerequisiteText": "300565 Computer Networking OR Computer Networking (Advanced) AND 300582 Technologies for Web Applications ",
  "category": "sec",
  "description": "This unit teaches students ethical hacking principles and skills with the ultimate goal of defence. It covers practical skills in different stages of ethical hacking, including reconnaissance on public information, port and vulnerability scanning, exploitation of vulnerabilities, post exploitation, and writing a comprehensive report to document detected vulnerabilities and proposed solutions. Students will not only practice with major tools in ethical hacking, but also learn the principles of how these tools work and hence how to defend against them.",
  "assumedKnowledge": "Students should have a solid understanding on computer networking (especially with the TCP/IP protocol suite), possess basic programming skills in developing computer applications and web applications, and command basic knowledge and skills in databases and operating systems.",
  "approachToLearning": "<p><b>Lectures:</b> Lectures aim to explain and demonstrate knowledge and skills in Ethical Hacking. Lectures cover or provide references to everything needed in tutorials and labs, so students are strongly encouraged to attend lectures.\n</p>\n<p><b>Tutorials/Labs:</b> Each 2-hour tutorial/lab class consists of roughly 0.5-hour tutorial discussion and 1.5-hour lab work. In the tutorial discussion, the tutor will discuss the online quiz questions with you. In the 1.5-hour lab work, you should complete practical exercises according to the lab instructions posted on vUWS. You can get help from tutors during lab work.\nYou should show your lab report to your tutor before the end of the lab. If you cannot finish within the lab, the only chance to be marked is in the next lab class; however, you will receive 50% late penalty for this if no extenuating circumstances are present. To prevent losing marks due to late completion, you should start working on labs before you enter lab classes.\n</p>\n<p><b>vUWS:</b> Unit materials, including lecture slides, online quizzes and lab instructions, will be made available on the unit vUWS site. Also, all unit announcements will be made via vUWS. Therefore, you are expected to visit vUWS at least three times a week.\n</p>",
  "outcome": " Outcomes\n\n1. Identify the differences between lawful and unlawful behaviour in conducting ethical hacking\n2. Apply reconnaissance knowledge and tools to gather public information about systems and networks\n3. Apply port scanning knowledge and tools to detect port status in target computers\n4. Apply vulnerability scanning knowledge and tools to detect vulnerabilities in target computers\n5. Apply exploitation knowledge and tools to verify and exploit the detected vulnerabilities\n6. Apply post exploitation knowledge and tools to evaluate the severity of vulnerabilities\n7. Detect and defend against social engineering techniques\n8. Apply web penetration testing knowledge and tools to detect vulnerabilities in web applications\n9. Compose a comprehensive report that details detected vulnerabilities and proposed solutions",
  "passCriteria": "<ol>\n<li>Achieve at least 50% of overall mark.\n</li>\n<li>Submit the project, which is a Fail Non-Submission (FNS) item.\n</li>\n<li>Attend the final exam, which is a Fail Non-Submission (FNS) item.</li>\n</ol>"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d12b"
  },
  "id": "301164",
  "name": "3D Modelling Fundamentals",
  "sfiaSkills": [
    {
      "id": "ADEV",
      "level": 3
    },
    {
      "id": "METL",
      "level": 3
    }
  ],
  "offer": [
    "au"
  ],
  "prerequisites": [],
  "prerequisiteText": "",
  "category": "mult",
  "description": "This unit will introduce the fundamentals of 3D surface modelling. Students will learn the theory of 3D surface modelling and will gain practical skills in creating 3D assets using a popular software package from Autodesk. They will also learn how to design characters and how to integrate their assets with a purpose of producing complex 3D scenes and animated movies. This unit is aimed at students who have no prior knowledge of 3D modelling and are not familiar with associated software packages.",
  "assumedKnowledge": "N/A",
  "approachToLearning": "In this course, the lectures are delivered online, supported by practical work done in class. Each week, students will learn a different technique from 3D modelling that will help them build increasingly complex 3D models, creating your own modelling portfolio with various 3D models. The learning milestones come every 2-3 weeks, when you are required to present your current results and discuss challenges and achievements with your fellow colleagues. The collaborative nature of this class will help you design and deliver 3D models and beautiful renders of objects and architecture. ",
  "outcome": " Outcomes\n\n1. Design 3D models\n2. Review and implement the key principles of various 3D surface modelling techniques\n3. Design, render and animate visual scenes\n4. Develop transferable conceptual skills in relation to modelling 3D content and animations.",
  "passCriteria": "Reach overall 50% from all assignments."
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d12c"
  },
  "id": "301167",
  "name": "Simulation Fundamentals",
  "offer": [
    "sp"
  ],
  "prerequisites": [],
  "prerequisiteText": "",
  "sfiaSkills": [
    {
      "id": "METL",
      "level": 3
    }
  ],
  "category": "dev",
  "description": "In the last couple of decades computer modelling and simulation has evolved into an important discipline used in nearly every aspect of life from computer games to banking. What was once a tool for training pilots is now a capability to better understand human behaviour, enterprise systems, disease proliferation, and much more. This is an introductory, problem-based unit, where students will learn by doing. Students will acquire ability to use different simulation methodologies and tools such as InsightMaker and AnyLogic to build new insights into the world around you and learn how to share these insights effectively with others.",
  "approachToLearning": "This is a hands-on unit as part of which you will learn fundamentals of computer simulation by creating a simulation of a business operation of your choice.\nThe following learning activities are a part of this unit: \n•\tSeminars.\n•\tPracticals. \n•\tAnyLogic software available in computer labs and for use on your own computer will be used for development of simulations in this unit.\n•\tAnyLogic in 7 days book available in digital form, as a free download on vUWS\n•\tAnyLogic example simulations \n•\tAnyLogic videos and other materials",
  "outcome": " Outcomes\n\n1. Explain the goals of simulations\n2. Evaluate the benefits and drawbacks of simulations\n3. Demonstrate building simulations by using specific tools and techniques\n4. Interpret and apply standard simulation methods and practices",
  "passCriteria": "You have to achieve overall 50% or more."
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d12d"
  },
  "id": "301174",
  "name": "Artificial Intelligence",
  "sfiaSkills": [
    {
      "id": "PROG",
      "level": 4
    },
    {
      "id": "METL",
      "level": 4
    }
  ],
  "offer": [
    "sp"
  ],
  "prerequisites": [
    "200025",
    "300103"
  ],
  "prerequisiteText": "200025 Discrete Mathematics AND 300103 Data Structures and Algorithms ",
  "category": "prg",
  "description": "This unit provides basic studies in the major areas of artificial intelligence: search, knowledge representation, logic programming, machine learning and knowledge based systems, agent planning and learning. The first part of this unit will focus on the foundation of artificial intelligence: search algorithms and their implementations, game playing, logics and knowledge representation, and inference in reasoning systems.\nThe second part will cover the principles of knowledge based systems (intelligent systems), planning, and machine learning.\n",
  "assumedKnowledge": "Basic understanding of data structures and algorithms and basic programming skills in Pascal, C/C++ or Java, etc",
  "approachToLearning": "Lecture: The lectures present and explore the theoretical aspects of this unit, and allow for discussions of relevant theories, algorithm and problem solving tasks.\n\nTutorial: The tutorial sessions allow students to review and absorb the knowledge they study in lectures, and to communicate directly with the lecturer and other students for enhancing their learning.\n\nPractical: The practical sessions allow students to undertake programming exercises related to the theories studied in lectures, and to receive both the lecturer mentoring along with feedback on their progress.",
  "outcome": " Outcomes\n\n1. Articulate the major concepts of artificial intelligence and knowledge based systems and their historical context\n2. Implement well designed and various search algorithms for problem solving\n3. Implement a well designed proper two-person game playing programs for specific tasks\n4. Devise first order logics to formalise proper real world domains\n5. Apply proper first order inference procedures to solve reasoning problems\n6. Analyse the process of agent planning\n7. Implement the Decision Tree Learning algorithm",
  "passCriteria": "achieve 50% pf overall assessment tasks. i.e., 50 marks, and 50% of the final examination, i.e., 25 marks."
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d12e"
  },
  "id": "301203",
  "name": "Introduction to Cloud Computing ",
  "sfiaSkills": [
    {
      "id": "METL",
      "level": 3
    },
    {
      "id": "ITOP",
      "level": 2
    },
    {
      "id": "DATM",
      "level": 2
    },
    {
      "id": "SCTY",
      "level": 1
    }
  ],
  "offer": [
    "au"
  ],
  "prerequisites": [
    [
      "300565"
    ]
  ],
  "prerequisiteText": "300565 Computer Networking OR Computer Networking (Advanced) ",
  "category": "ops",
  "description": "This unit, the first half of Amazon Web Services (AWS) Academy Cloud Computing Architecture curriculum, provides deep understanding of fundamental cloud computing concepts and how it can be applied to build cost-effective; highly available and fault tolerant systems. Students will learn concepts including system virtualisation; virtual machines; cloud networks; basic cloud storage and cloud databases; security in clouds; and auto-scaling, load balancing, and monitoring. All these aspects are explored in practice with AWS services.",
  "approachToLearning": "The lectures and text reading will examine the theoretical aspects related to Cloud Computing. We have a weekly face-to-face lecture to present some topics of the unit.\n\nThe practical activities are designed so that you will gain expertise in becoming a con\fdent and competent user of Cloud technology. Students will be asked to practice the topics during tutorials for each module of the unit.",
  "outcome": " Outcomes\n\n1. Explain the concept of system virtualisation\n2. Explain and apply basic cloud services\n3. Describe the main factors that affect the cost of cloud services and how they can be applied to minimise total cost of ownership\n4. Explain and apply basic concepts of security, high availability, and fault tolerance in clouds\n5. Analyse systems that utilise basic cloud services",
  "passCriteria": "<ul><li>Pass all the online quizzes (minimum mark of 80% for each quiz)\n</li><li>Attempt all the tutorial labs\n</li><li>Attempt the final exam as the mandatory assessment\n</li><li>Receive 50% or more from the total mark\n</li></ul>"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d12f"
  },
  "id": "301204",
  "name": "Cloud Computing Architecture",
  "sfiaSkills": [
    {
      "id": "DATM",
      "level": 3
    },
    {
      "id": "TECH",
      "level": 4
    },
    {
      "id": "DESN",
      "level": 4
    },
    {
      "id": "STMG",
      "level": 3
    },
    {
      "id": "NTPL",
      "level": 4
    }
  ],
  "offer": [
    "sp"
  ],
  "prerequisites": [
    "301203",
    "300580"
  ],
  "prerequisiteText": "301203 Introduction to Cloud Computing AND 300580 Programming Fundamentals ",
  "category": "sys",
  "description": "This unit, the second part of the Amazon Web Services (AWS) Academy Cloud Computing Architecture curriculum, provides deeper understanding about advanced cloud computing services and how to architect cloud applications that are scalable, reliable, and efficient in terms of cost and performance. Students will learn advanced cloud computing concepts including notification and messaging, serverless computing, API gateways, NoSQL databases, content delivery networks, stream processing, and long-term storage. The unit also covers advanced cloud security and infrastructure automation. All these aspects are explored in practice with AWS services. Upon completion of this unit, students will be prepared for the AWS Certified Solutions Architect – Associate exam.",
  "approachToLearning": "Lecture: The lectures examine theoretical aspects of cloud computing and how to architect cloud computing applications.\n\nPractical: Practical classes include discussion of questions and completion of lab work. These activities are designed to test and deepen the students understanding of knowledge and to develop practical skills.",
  "outcome": " Outcomes\n\n1. Assess different design patterns for web-scale storage and recommend the most appropriate pattern for a specific problem\n2. Analyze common design patterns and architectures for loosely coupled cloud computing systems and recommend the most appropriate pattern for a specific problem\n3. Evaluate strategies to enable high scalability, reliability, cost-efficiency, and performance in a cloud-based system\n4. Apply principles and applications of advanced cloud services such as notification and messaging, API gateways, stream processing, and serverless computing\n5. Apply concepts of security and infrastructure automation in a cloud-based system\n6. Design and deploy scalable, reliable, and efficient systems that utilise advanced cloud services",
  "passCriteria": "- Submit both projects\n- Pass all the online quizzes (minimum mark of 70% for each quiz)\n- Attempt all the tutorial labs\n- Achieve at least 50% of the overall marks"
},{
  "_id": {
    "$oid": "605b1d8d492f8f264095d130"
  },
  "id": "301205",
  "name": "Robotic Programming",
  "offer": [
    "au"
  ],
  "prerequisites": [
      "300147",      
      [
       "300167",
       "300698"
      ]
],
  "prerequisiteText": [
    "300147 Object Oriented Programming and 300167 Systems Programming 1\r\n\r\nOR\r\n\r\n300147 Object Oriented Programming and 300698 Operating Systems Programming\r\n\r\nOR\r\n\r\n300043 Mobile Robotics"
  ],
  "sfiaSkills": [
    {
      "id": "TECH",
      "level": 4
    },
    {
      "id": "METL",
      "level": 3
    },
    {
      "id": "PROG",
      "level": 3
    },
    {
      "id": "PORT",
      "level": 3
    }
  ],
  "category": "prg",
  "description": "Robot Operating System (ROS) is a software integration system that is now widely used for robotics software deployment. The philosophy behind ROS is to modularise software that can work for other robots through small changes in the code. This unit focuses on the main concepts of software development under ROS by looking at the file hierarchical systems (e.g. Packages, Stacks, Messages, Services and others), module communication types through Nodes, Topics, Services, Messages, Bags, Master and how they integrate to operate robot sensors and actuators. This unit also looks at actual AI software examples using C++/Python and Answer Set Programming (ASP).",
  "assumedKnowledge": "Basic knowledge of Linux, C++/Python and Object Oriented Programming (OOP)",
  "approachToLearning": "This is a 10 credit points unit, which requires diligence and effort from your part to obtain the maximum possible marks available. It is expected that you will spend on average 10 hours a week: 4 hours face-to-face (lectures/tutorials/practicals) and 6 hours self-study per week. The unit coordinator will provide the lecture notes, tutorial questions, practical questions and reading materials each week to aid the delivery of the unit's content. The lecture notes and tutorial questions will aid with the students theoretical knowledge, while the practical activities will let students gain hands on experience with developing robotic programs under the ROS framework. ",
  "outcome": "The unit provided students with an in-depth introduction to the Robot Operating System (ROS). ROS is a software integration system that is now widely used for robotics software deployment. The philosophy behind ROS is to modularise software that can work for other robots through small changes in the codes. This unit focuses on the main concepts of software development under ROS by looking at the file hierarchical systems (e.g., Packages, Stacks, Messages, Services, etc.,  and others), module communication types through Nodes, Topics, Services, Messages, Bags, Master and how they integrate to operate robot sensors and actuators. This unit also looks at actual AI software examples using C++/Python and Answer Set Programming (ASP). \n\n Outcomes\n\n1. Describe the software systems for robotics.\n2. Illustrate how drivers written for various robot parts are viewed as nodes and services under the ROS system framework.\n3. Explain how different ‘processes’ made for other applications can be incorporated onto their own software projects under ROS through the use of standard/predefined topics.\n4. Describe how various state-of-the-art AI software can be embedded into a ROS system by having them as a backend for certain ROS processing tasks (nodes).\n5. Develop software for interacting with sensor and controlling actuators using ROS tools.\n6. Develop software using current state-of-the-art AI systems as backend for processes as ROS Nodes.",
  "passCriteria": "1.) Get at least 50% of all the total available marks, i.e.: Total Available Marks = Practicals + Quiz I + Quiz II + Assignment.\n2.) Get at least 50% of all the total available Quiz marks, i.e.:  Total Quiz Marks = Quiz I + Quiz II.\n3.) Get at least 50% of all the total Practical marks."
}]
